{"nodes": [{"name": "blinker", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\blinker\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["blinker.base", "blinker.base", "blinker.base", "blinker.base"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "blinker._saferef", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\blinker\\_saferef.py", "layer": 1, "hasclass": 2, "myclass": [["blinker._saferef"], []], "hasfunction": 2, "myfunction": [["safe_ref"], []]}, {"name": "blinker._utilities", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\blinker\\_utilities.py", "layer": 1, "hasclass": 2, "myclass": [["blinker._utilities", "blinker._utilities", "blinker._utilities", "blinker._utilities"], ["blinker._saferef", "functools", "builtins"]], "hasfunction": 2, "myfunction": [["callable_reference", "hashable_identity", "is_coroutine_function", "reference"], []]}, {"name": "blinker.base", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\blinker\\base.py", "layer": 1, "hasclass": 2, "myclass": [["blinker.base", "blinker.base", "blinker.base", "blinker.base"], ["weakref", "blinker._utilities", "collections", "blinker._utilities", "blinker._utilities"]], "hasfunction": 2, "myfunction": [[], ["contextmanager", "hashable_identity", "is_coroutine_function", "reference"]]}, {"name": "click", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["click.exceptions", "click.core", "click.exceptions", "click.exceptions", "click.exceptions", "click.core", "click.types", "click.exceptions", "click.core", "click.core", "click.core", "click.types", "click.types", "click.exceptions", "click.types", "click.core", "click.formatting", "click.types", "click.exceptions", "click.core", "click.exceptions", "click.core", "click.parser", "click.types", "click.core", "click.types", "click.types", "click.exceptions"]], "hasfunction": 2, "myfunction": [[], ["argument", "clear", "command", "confirm", "confirmation_option", "echo", "echo_via_pager", "edit", "format_filename", "get_app_dir", "get_binary_stream", "get_current_context", "get_text_stream", "getchar", "group", "help_option", "launch", "make_pass_decorator", "open_file", "option", "pass_context", "pass_obj", "password_option", "pause", "progressbar", "prompt", "secho", "style", "unstyle", "version_option", "wrap_text"]]}, {"name": "click._compat", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\_compat.py", "layer": 1, "hasclass": 2, "myclass": [["click._compat", "click._compat", "click._compat"], ["weakref"]], "hasfunction": 2, "myfunction": [["func", "func", "func", "_find_binary_reader", "_find_binary_writer", "_force_correct_text_reader", "_force_correct_text_stream", "_force_correct_text_writer", "_get_argv_encoding", "_is_binary_reader", "_is_binary_writer", "_is_compat_stream_attr", "_is_compatible_text_stream", "_is_jupyter_kernel_output", "_make_cached_stream_func", "_make_text_stream", "_stream_is_misconfigured", "_wrap_io_open", "auto_wrap_for_ansi", "get_best_encoding", "get_binary_stderr", "get_binary_stdin", "get_binary_stdout", "get_text_stderr", "get_text_stdin", "get_text_stdout", "is_ascii_encoding", "isatty", "open_stream", "should_strip_ansi", "strip_ansi", "term_len"], ["_get_windows_console_stream"]]}, {"name": "click._winconsole", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\_winconsole.py", "layer": 1, "hasclass": 2, "myclass": [["click._winconsole", "click._winconsole", "click._winconsole", "click._winconsole", "click._winconsole"], ["ctypes", "ctypes", "ctypes", "ctypes", "_ctypes", "click._compat", "ctypes", "ctypes", "ctypes", "ctypes.wintypes", "ctypes", "ctypes", "ctypes", "ctypes"]], "hasfunction": 2, "myfunction": [["_get_text_stderr", "_get_text_stdin", "_get_text_stdout", "_get_windows_console_stream", "_is_console", "get_buffer"], ["WINFUNCTYPE"]]}, {"name": "click.core", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\core.py", "layer": 1, "hasclass": 2, "myclass": [["click.core", "click.core", "click.core", "click.core", "click.core", "click.core", "click.core", "click.core", "click.core", "click.core"], ["click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "contextlib", "click.formatting", "click.exceptions", "click.parser", "click.utils", "builtins", "click.exceptions", "itertools"]], "hasfunction": 2, "myfunction": [["_check_iter", "_check_multicommand", "_complete_visible_commands", "augment_usage_errors", "batch", "iter_params_for_processing"], ["gettext", "_detect_program_name", "_expand_args", "confirm", "contextmanager", "echo", "join_options", "make_default_short_help", "make_str", "ngettext", "pop_context", "prompt", "push_context", "split_opt", "style", "update_wrapper"]]}, {"name": "click.decorators", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\decorators.py", "layer": 1, "hasclass": 2, "myclass": [[], ["click.core", "click.core", "click.core", "click.core", "click.core", "click.core"]], "hasfunction": 2, "myfunction": [["_param_memo", "argument", "command", "confirmation_option", "group", "help_option", "make_pass_decorator", "option", "pass_context", "pass_meta_key", "pass_obj", "password_option", "version_option"], ["gettext", "echo", "get_current_context", "update_wrapper"]]}, {"name": "click.exceptions", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\exceptions.py", "layer": 1, "hasclass": 2, "myclass": [["click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions"], []], "hasfunction": 2, "myfunction": [["_join_param_hints"], ["gettext", "echo", "format_filename", "get_text_stderr", "ngettext"]]}, {"name": "click.formatting", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\formatting.py", "layer": 1, "hasclass": 2, "myclass": [["click.formatting"], []], "hasfunction": 2, "myfunction": [["iter_rows", "join_options", "measure_table", "wrap_text"], ["gettext", "contextmanager", "split_opt", "term_len"]]}, {"name": "click.globals", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\globals.py", "layer": 1, "hasclass": 2, "myclass": [[], ["_thread"]], "hasfunction": 2, "myfunction": [["get_current_context", "pop_context", "push_context", "resolve_color_default"], []]}, {"name": "click.parser", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\parser.py", "layer": 1, "hasclass": 2, "myclass": [["click.parser", "click.parser", "click.parser", "click.parser"], ["click.exceptions", "click.exceptions", "click.exceptions", "click.exceptions", "collections"]], "hasfunction": 2, "myfunction": [["_unpack_args", "normalize_opt", "split_arg_string", "split_opt"], ["gettext", "ngettext"]]}, {"name": "click.termui", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\termui.py", "layer": 1, "hasclass": 2, "myclass": [[], ["click.exceptions", "click.types", "click.utils", "click.types", "click.exceptions"]], "hasfunction": 2, "myfunction": [["_build_prompt", "_format_default", "_interpret_color", "clear", "confirm", "echo_via_pager", "edit", "getchar", "hidden_prompt_func", "launch", "pause", "progressbar", "prompt", "raw_terminal", "secho", "style", "unstyle"], ["gettext", "convert_type", "echo", "isatty", "resolve_color_default", "strip_ansi"]]}, {"name": "click.types", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\types.py", "layer": 1, "hasclass": 2, "myclass": [["click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types", "click.types"], ["click.exceptions", "click.utils", "datetime"]], "hasfunction": 2, "myfunction": [["_is_file_like", "convert_type"], ["gettext", "_get_argv_encoding", "format_filename", "ngettext", "open_stream", "safecall"]]}, {"name": "click.utils", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\click\\utils.py", "layer": 1, "hasclass": 2, "myclass": [["click.utils", "click.utils", "click.utils"], ["builtins", "builtins"]], "hasfunction": 2, "myfunction": [["_detect_program_name", "_expand_args", "_posixify", "echo", "format_filename", "get_app_dir", "get_binary_stream", "get_text_stream", "make_default_short_help", "make_str", "open_file", "safecall"], ["func", "func", "_find_binary_writer", "auto_wrap_for_ansi", "open_stream", "resolve_color_default", "should_strip_ansi", "strip_ansi", "update_wrapper"]]}, {"name": "colorama", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["colorama.ansitowin32"]], "hasfunction": 2, "myfunction": [[], ["colorama_text", "deinit", "init", "just_fix_windows_console", "reinit"]]}, {"name": "colorama.ansi", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\ansi.py", "layer": 1, "hasclass": 2, "myclass": [["colorama.ansi", "colorama.ansi", "colorama.ansi", "colorama.ansi", "colorama.ansi"], []], "hasfunction": 2, "myfunction": [["clear_line", "clear_screen", "code_to_chars", "set_title"], []]}, {"name": "colorama.ansitowin32", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\ansitowin32.py", "layer": 1, "hasclass": 2, "myclass": [["colorama.ansitowin32", "colorama.ansitowin32"], ["colorama.ansi", "colorama.ansi", "colorama.ansi", "colorama.winterm", "colorama.winterm", "colorama.winterm"]], "hasfunction": 2, "myfunction": [[], ["enable_vt_processing", "winapi_test"]]}, {"name": "colorama.initialise", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\initialise.py", "layer": 1, "hasclass": 2, "myclass": [[], ["colorama.ansitowin32"]], "hasfunction": 2, "myfunction": [["_wipe_internal_state_for_tests", "colorama_text", "deinit", "init", "just_fix_windows_console", "reinit", "reset_all", "wrap_stream"], []]}, {"name": "colorama.win32", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\win32.py", "layer": 1, "hasclass": 2, "myclass": [["colorama.win32"], ["ctypes.wintypes", "ctypes", "_ctypes", "ctypes"]], "hasfunction": 2, "myfunction": [["FillConsoleOutputAttribute", "FillConsoleOutputCharacter", "GetConsoleMode", "GetConsoleScreenBufferInfo", "SetConsoleCursorPosition", "SetConsoleMode", "SetConsoleTextAttribute", "SetConsoleTitle", "_winapi_test", "winapi_test"], []]}, {"name": "colorama.winterm", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\colorama\\winterm.py", "layer": 1, "hasclass": 2, "myclass": [["colorama.winterm", "colorama.winterm", "colorama.winterm"], []], "hasfunction": 2, "myfunction": [["enable_vt_processing"], []]}, {"name": "contourpy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\contourpy\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy"]], "hasfunction": 2, "myfunction": [["_remove_z_mask", "contour_generator"], ["as_fill_type", "as_line_type", "as_z_interp", "calc_chunk_sizes"]]}, {"name": "contourpy._contourpy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\contourpy\\_contourpy.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [["contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "contourpy._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\contourpy\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "contourpy.chunk", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\contourpy\\chunk.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["calc_chunk_sizes", "two_factors"], []]}, {"name": "contourpy.enum_util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\contourpy\\enum_util.py", "layer": 1, "hasclass": 2, "myclass": [[], ["contourpy._contourpy", "contourpy._contourpy", "contourpy._contourpy"]], "hasfunction": 2, "myfunction": [["as_fill_type", "as_line_type", "as_z_interp"], []]}, {"name": "cycler", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\cycler\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["cycler"], ["collections.abc", "typing", "collections.abc", "collections.abc", "typing", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_cycler", "_process_keys", "concat", "cycler"], ["cast", "overload"]]}, {"name": "exceptiongroup", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\exceptiongroup\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["exceptiongroup", "exceptiongroup"], []], "hasfunction": 2, "myfunction": [[], ["catch", "format_exception", "format_exception_only", "print_exc", "print_exception"]]}, {"name": "exceptiongroup._catch", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\exceptiongroup\\_catch.py", "layer": 1, "hasclass": 2, "myclass": [["exceptiongroup._catch"], ["contextlib", "exceptiongroup", "collections.abc", "collections.abc", "collections.abc", "builtins"]], "hasfunction": 2, "myfunction": [["catch"], []]}, {"name": "exceptiongroup._exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\exceptiongroup\\_exceptions.py", "layer": 1, "hasclass": 2, "myclass": [[], ["exceptiongroup", "collections.abc", "exceptiongroup", "typing", "collections.abc", "typing", "functools"]], "hasfunction": 2, "myfunction": [["check_direct_subclass", "get_condition_filter"], ["cast", "getmro", "isclass", "overload"]]}, {"name": "exceptiongroup._formatting", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\exceptiongroup\\_formatting.py", "layer": 1, "hasclass": 2, "myclass": [["exceptiongroup._formatting", "exceptiongroup._formatting"], ["exceptiongroup", "builtins"]], "hasfunction": 2, "myfunction": [["_", "_compute_suggestion_error", "_format_final_exc_line", "_levenshtein_distance", "_safe_string", "_substitution_cost", "exceptiongroup_excepthook", "format_exception", "format_exception_only", "print_exc", "print_exception"], ["singledispatch", "format", "format_exception_only"]]}, {"name": "exceptiongroup._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\exceptiongroup\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "filelock", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["filelock._api", "filelock._api", "filelock._windows", "filelock._soft", "filelock._error", "filelock._unix", "filelock._windows", "filelock._windows"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "filelock._api", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_api.py", "layer": 1, "hasclass": 2, "myclass": [["filelock._api", "filelock._api", "filelock._api", "filelock._api"], ["abc", "filelock._error", "_thread"]], "hasfunction": 2, "myfunction": [[], ["abstractmethod", "dataclass"]]}, {"name": "filelock._error", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_error.py", "layer": 1, "hasclass": 2, "myclass": [["filelock._error"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "filelock._soft", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_soft.py", "layer": 1, "hasclass": 2, "myclass": [["filelock._soft"], ["filelock._api", "pathlib", "contextlib"]], "hasfunction": 2, "myfunction": [[], ["ensure_directory_exists", "raise_on_not_writable_file"]]}, {"name": "filelock._unix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_unix.py", "layer": 1, "hasclass": 2, "myclass": [["filelock._unix"], ["filelock._api", "contextlib"]], "hasfunction": 2, "myfunction": [[], ["cast", "ensure_directory_exists"]]}, {"name": "filelock._util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_util.py", "layer": 1, "hasclass": 2, "myclass": [[], ["pathlib"]], "hasfunction": 2, "myfunction": [["ensure_directory_exists", "raise_on_not_writable_file"], []]}, {"name": "filelock._windows", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\filelock\\_windows.py", "layer": 1, "hasclass": 2, "myclass": [["filelock._windows"], ["filelock._api", "pathlib", "contextlib"]], "hasfunction": 2, "myfunction": [[], ["cast", "ensure_directory_exists", "raise_on_not_writable_file"]]}, {"name": "flask", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["flask.blueprints", "flask.config", "flask.app", "flask.wrappers", "flask.wrappers"]], "hasfunction": 2, "myfunction": [["__getattr__"], ["abort", "after_this_request", "copy_current_request_context", "flash", "get_flashed_messages", "get_template_attribute", "has_app_context", "has_request_context", "jsonify", "make_response", "redirect", "render_template", "render_template_string", "send_file", "send_from_directory", "stream_template", "stream_template_string", "stream_with_context", "url_for"]]}, {"name": "flask.app", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\app.py", "layer": 1, "hasclass": 2, "myclass": [["flask.app"], ["flask.sansio.app", "flask.ctx", "werkzeug.exceptions", "werkzeug.wrappers.response", "werkzeug.routing.exceptions", "flask.templating", "werkzeug.exceptions", "werkzeug.datastructures.headers", "werkzeug.datastructures.structures", "werkzeug.exceptions", "werkzeug.routing.map", "flask.wrappers", "flask.ctx", "werkzeug.routing.exceptions", "flask.wrappers", "werkzeug.routing.exceptions", "werkzeug.routing.rules", "flask.sessions", "flask.sessions", "builtins", "collections.abc", "itertools", "datetime"]], "hasfunction": 2, "myfunction": [["_make_timedelta"], ["quote", "get_debug_flag", "get_flashed_messages", "get_load_dotenv", "is_running_from_reloader", "iscoroutinefunction", "send_from_directory"]]}, {"name": "flask.blueprints", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\blueprints.py", "layer": 1, "hasclass": 2, "myclass": [["flask.blueprints"], ["flask.sansio.blueprints", "flask.sansio.blueprints", "datetime"]], "hasfunction": 2, "myfunction": [[], ["send_from_directory"]]}, {"name": "flask.cli", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\cli.py", "layer": 1, "hasclass": 2, "myclass": [["flask.cli", "flask.cli", "flask.cli", "flask.cli", "flask.cli", "flask.cli"], ["click.core", "operator"]], "hasfunction": 2, "myfunction": [["_called_with_wrong_args", "_env_file_callback", "_path_is_ancestor", "_set_app", "_set_debug", "_validate_key", "find_app_by_string", "find_best_app", "get_version", "load_dotenv", "locate_app", "main", "prepare_import", "show_server_banner", "with_appcontext"], ["get_debug_flag", "get_load_dotenv", "import_string", "is_running_from_reloader", "decorator", "run_simple", "update_wrapper"]]}, {"name": "flask.config", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\config.py", "layer": 1, "hasclass": 2, "myclass": [["flask.config", "flask.config"], []], "hasfunction": 2, "myfunction": [[], ["import_string"]]}, {"name": "flask.ctx", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\ctx.py", "layer": 1, "hasclass": 2, "myclass": [["flask.ctx", "flask.ctx", "flask.ctx"], ["werkzeug.exceptions", "builtins"]], "hasfunction": 2, "myfunction": [["after_this_request", "copy_current_request_context", "has_app_context", "has_request_context"], ["update_wrapper"]]}, {"name": "flask.globals", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\globals.py", "layer": 1, "hasclass": 2, "myclass": [[], ["builtins", "werkzeug.local"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "flask.helpers", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\helpers.py", "layer": 1, "hasclass": 2, "myclass": [[], ["datetime"]], "hasfunction": 2, "myfunction": [["_prepare_send_file_kwargs", "abort", "flash", "get_debug_flag", "get_flashed_messages", "get_load_dotenv", "get_root_path", "get_template_attribute", "make_response", "redirect", "send_file", "send_from_directory", "stream_with_context", "url_for"], ["abort", "redirect", "lru_cache", "update_wrapper"]]}, {"name": "flask.json", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\json\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["dump", "dumps", "jsonify", "load", "loads"], ["_default"]]}, {"name": "flask.json.provider", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\json\\provider.py", "layer": 2, "hasclass": 2, "myclass": [["flask.json.provider", "flask.json.provider"], ["datetime"]], "hasfunction": 2, "myfunction": [["_default"], ["http_date"]]}, {"name": "flask.json.tag", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\json\\tag.py", "layer": 2, "hasclass": 2, "myclass": [["flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag", "flask.json.tag"], ["markupsafe", "uuid", "datetime"]], "hasfunction": 2, "myfunction": [[], ["b64decode", "b64encode", "dumps", "http_date", "loads", "parse_date"]]}, {"name": "flask.logging", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\logging.py", "layer": 1, "hasclass": 2, "myclass": [[], ["werkzeug.local"]], "hasfunction": 2, "myfunction": [["create_logger", "has_level_handler"], []]}, {"name": "flask.sansio", "file": "none", "ftype": "none", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "flask.sansio.app", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\sansio\\app.py", "layer": 2, "hasclass": 2, "myclass": [["flask.sansio.app"], ["werkzeug.exceptions", "werkzeug.exceptions", "werkzeug.exceptions", "werkzeug.routing.exceptions", "flask.config", "flask.config", "flask.json.provider", "flask.templating", "flask.templating", "flask.json.provider", "werkzeug.routing.map", "werkzeug.sansio.response", "werkzeug.routing.rules", "flask.sansio.scaffold", "flask.ctx", "werkzeug.utils", "itertools", "datetime"]], "hasfunction": 2, "myfunction": [["_make_timedelta"], ["_endpoint_from_view_func", "redirect", "create_logger", "find_package", "get_debug_flag", "setupmethod"]]}, {"name": "flask.sansio.blueprints", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\sansio\\blueprints.py", "layer": 2, "hasclass": 2, "myclass": [["flask.sansio.blueprints", "flask.sansio.blueprints"], ["flask.sansio.scaffold", "collections"]], "hasfunction": 2, "myfunction": [[], ["_endpoint_from_view_func", "setupmethod", "update_wrapper"]]}, {"name": "flask.sansio.scaffold", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\sansio\\scaffold.py", "layer": 2, "hasclass": 2, "myclass": [["flask.sansio.scaffold"], ["flask.cli", "jinja2.loaders", "werkzeug.exceptions", "werkzeug.utils", "collections"]], "hasfunction": 2, "myfunction": [["_endpoint_from_view_func", "_find_package_path", "_path_is_relative_to", "find_package", "setupmethod"], ["_default_template_ctx_processor", "get_root_path", "update_wrapper"]]}, {"name": "flask.sessions", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\sessions.py", "layer": 1, "hasclass": 2, "myclass": [["flask.sessions", "flask.sessions", "flask.sessions", "flask.sessions", "flask.sessions"], ["itsdangerous.exc", "werkzeug.datastructures.structures", "collections.abc", "flask.json.tag", "itsdangerous.url_safe", "datetime", "datetime"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "flask.signals", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\signals.py", "layer": 1, "hasclass": 2, "myclass": [[], ["blinker.base"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "flask.templating", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\templating.py", "layer": 1, "hasclass": 2, "myclass": [["flask.templating", "flask.templating"], ["jinja2.environment", "jinja2.loaders", "jinja2.environment", "jinja2.exceptions"]], "hasfunction": 2, "myfunction": [["_default_template_ctx_processor", "_render", "_stream", "render_template", "render_template_string", "stream_template", "stream_template_string"], ["stream_with_context"]]}, {"name": "flask.typing", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\typing.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "flask.wrappers", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\flask\\wrappers.py", "layer": 1, "hasclass": 2, "myclass": [["flask.wrappers", "flask.wrappers"], ["werkzeug.exceptions", "werkzeug.wrappers.request", "werkzeug.wrappers.response"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "fsspec", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["fsspec.spec", "fsspec.callbacks", "fsspec.mapping", "fsspec.exceptions"]], "hasfunction": 2, "myfunction": [["process_entries"], ["available_compressions", "available_protocols", "entry_points", "filesystem", "get_filesystem_class", "get_fs_token_paths", "get_mapper", "open", "open_files", "open_local", "register_implementation"]]}, {"name": "fsspec._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_versions"], []]}, {"name": "fsspec.caching", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\caching.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching"], ["concurrent.futures.thread"]], "hasfunction": 2, "myfunction": [["register_cache"], []]}, {"name": "fsspec.callbacks", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\callbacks.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.callbacks", "fsspec.callbacks", "fsspec.callbacks", "fsspec.callbacks"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "fsspec.compression", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\compression.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.compression"], ["fsspec.spec", "bz2", "gzip", "lzma", "zipfile"]], "hasfunction": 2, "myfunction": [["available_compressions", "noop_file", "register_compression", "unzip"], []]}, {"name": "fsspec.config", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\config.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["apply_config", "set_conf_env", "set_conf_files"], []]}, {"name": "fsspec.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\core.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.core", "fsspec.core", "fsspec.core"], ["fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching", "fsspec.caching"]], "hasfunction": 2, "myfunction": [["_expand_paths", "_un_chain", "expand_paths_if_needed", "get_compression", "get_fs_token_paths", "open", "open_files", "open_local", "split_protocol", "strip_protocol", "url_to_fs"], ["_unstrip_protocol", "build_name_function", "filesystem", "get_filesystem_class", "has_magic", "infer_compression", "stringify_path"]]}, {"name": "fsspec.dircache", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\dircache.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.dircache"], ["collections.abc"]], "hasfunction": 2, "myfunction": [[], ["lru_cache"]]}, {"name": "fsspec.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\exceptions.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.exceptions", "fsspec.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "fsspec.mapping", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\mapping.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.mapping"], ["collections.abc", "functools"]], "hasfunction": 2, "myfunction": [["get_mapper", "maybe_convert"], ["url_to_fs"]]}, {"name": "fsspec.spec", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\spec.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.spec", "fsspec.spec", "fsspec.spec"], ["fsspec.dircache", "fsspec.transaction"]], "hasfunction": 2, "myfunction": [["make_instance"], ["_unstrip_protocol", "apply_config", "has_magic", "isfilelike", "other_paths", "read_block", "stringify_path", "tokenize"]]}, {"name": "fsspec.transaction", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\transaction.py", "layer": 1, "hasclass": 2, "myclass": [["fsspec.transaction", "fsspec.transaction", "fsspec.transaction"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "fsspec.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\fsspec\\utils.py", "layer": 1, "hasclass": 2, "myclass": [[], ["functools"]], "hasfunction": 2, "myfunction": [["_unstrip_protocol", "atomic_write", "build_name_function", "can_be_local", "common_prefix", "file_size", "get_package_version_without_import", "get_protocol", "infer_compression", "infer_storage_options", "is_exception", "isfilelike", "make_instance", "merge_offset_ranges", "mirror_from", "nullcontext", "other_paths", "read_block", "seek_delimiter", "setup_logging", "stringify_path", "tokenize", "update_storage_options"], ["urlsplit", "version"]]}, {"name": "iniconfig", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\iniconfig\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["iniconfig", "iniconfig"], ["typing", "iniconfig.exceptions", "typing"]], "hasfunction": 2, "myfunction": [[], ["cast", "iscommentline", "overload"]]}, {"name": "iniconfig._parse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\iniconfig\\_parse.py", "layer": 1, "hasclass": 2, "myclass": [["iniconfig._parse"], ["typing", "iniconfig.exceptions"]], "hasfunction": 2, "myfunction": [["_parseline", "iscommentline", "parse_lines"], []]}, {"name": "iniconfig.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\iniconfig\\exceptions.py", "layer": 1, "hasclass": 2, "myclass": [["iniconfig.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "itsdangerous", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.signer", "itsdangerous.signer", "itsdangerous.serializer", "itsdangerous.exc", "itsdangerous.signer", "itsdangerous.timed", "itsdangerous.timed", "itsdangerous.url_safe", "itsdangerous.url_safe"]], "hasfunction": 2, "myfunction": [[], ["base64_decode", "base64_encode", "want_bytes"]]}, {"name": "itsdangerous._json", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\_json.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous._json"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "itsdangerous.encoding", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\encoding.py", "layer": 1, "hasclass": 2, "myclass": [[], ["itsdangerous.exc"]], "hasfunction": 2, "myfunction": [["base64_decode", "base64_encode", "bytes_to_int", "int_to_bytes", "want_bytes"], []]}, {"name": "itsdangerous.exc", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\exc.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc", "itsdangerous.exc"], ["datetime"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "itsdangerous.serializer", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\serializer.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous.serializer"], ["itsdangerous.exc", "itsdangerous.exc", "itsdangerous.signer"]], "hasfunction": 2, "myfunction": [["is_text_serializer"], ["_make_keys_list", "want_bytes"]]}, {"name": "itsdangerous.signer", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\signer.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous.signer", "itsdangerous.signer", "itsdangerous.signer", "itsdangerous.signer"], ["itsdangerous.exc"]], "hasfunction": 2, "myfunction": [["_make_keys_list"], ["base64_decode", "base64_encode", "want_bytes"]]}, {"name": "itsdangerous.timed", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\timed.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous.timed", "itsdangerous.timed"], ["itsdangerous.exc", "itsdangerous.exc", "itsdangerous.serializer", "itsdangerous.exc", "itsdangerous.signer", "datetime", "datetime"]], "hasfunction": 2, "myfunction": [[], ["base64_decode", "base64_encode", "bytes_to_int", "int_to_bytes", "want_bytes"]]}, {"name": "itsdangerous.url_safe", "file": "C:\\Users\\27704\\AppData\\Roaming\\Python\\Python38\\site-packages\\itsdangerous\\url_safe.py", "layer": 1, "hasclass": 2, "myclass": [["itsdangerous.url_safe", "itsdangerous.url_safe", "itsdangerous.url_safe"], ["itsdangerous.exc", "itsdangerous.serializer", "itsdangerous.timed", "itsdangerous._json"]], "hasfunction": 2, "myfunction": [[], ["base64_decode", "base64_encode"]]}, {"name": "kiwisolver", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\kiwisolver\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["kiwisolver", "kiwisolver", "kiwisolver", "kiwisolver", "kiwisolver"], ["kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "kiwisolver._cext", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\kiwisolver\\_cext.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [[], ["kiwisolver.exceptions", "kiwisolver", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver", "kiwisolver", "kiwisolver", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "kiwisolver.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\kiwisolver\\exceptions.py", "layer": 1, "hasclass": 2, "myclass": [["kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions", "kiwisolver.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["matplotlib", "matplotlib", "matplotlib", "matplotlib"], ["matplotlib._api.deprecation", "collections.abc", "inspect", "pathlib"]], "hasfunction": 2, "myfunction": [["_add_data_doc", "_check_versions", "_get_config_or_cache_dir", "_get_version", "_get_xdg_cache_dir", "_get_xdg_config_dir", "_init_tests", "_label_from_arg", "_logged_cached", "_open_file_or_url", "_parse_to_version_info", "_preprocess_data", "_rc_params_in_file", "_replacer", "checkdep_usetex", "get_backend", "get_cachedir", "get_configdir", "get_data_path", "interactive", "is_interactive", "matplotlib_fname", "rc", "rc_context", "rc_file", "rc_file_defaults", "rc_params", "rc_params_from_file", "rcdefaults", "set_loglevel", "use"], ["cycler", "namedtuple", "parse", "sanitize_sequence", "validate_backend"]]}, {"name": "matplotlib._afm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_afm.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._afm", "matplotlib._afm", "matplotlib._afm"], []], "hasfunction": 2, "myfunction": [["_parse_char_metrics", "_parse_composites", "_parse_header", "_parse_kern_pairs", "_parse_optional", "_to_bool", "_to_float", "_to_int", "_to_list_of_floats", "_to_list_of_ints", "_to_str"], ["namedtuple"]]}, {"name": "matplotlib._api", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_api\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._api"], ["matplotlib._api.deprecation", "matplotlib._api.deprecation"]], "hasfunction": 2, "myfunction": [["caching_module_getattr", "check_getitem", "check_in_list", "check_isinstance", "check_shape", "define_aliases", "kwarg_error", "nargs_error", "recursive_subclasses", "select_matching_signature", "warn_external"], ["delete_parameter", "deprecate_method_override", "deprecated", "make_keyword_only", "rename_parameter", "suppress_matplotlib_deprecation_warning", "warn_deprecated"]]}, {"name": "matplotlib._api.deprecation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_api\\deprecation.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib._api.deprecation", "matplotlib._api.deprecation", "matplotlib._api.deprecation"], []], "hasfunction": 2, "myfunction": [["_generate_deprecation_warning", "delete_parameter", "deprecate_method_override", "deprecated", "make_keyword_only", "rename_parameter", "suppress_matplotlib_deprecation_warning", "warn_deprecated"], []]}, {"name": "matplotlib._blocking_input", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_blocking_input.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["blocking_input_loop"], []]}, {"name": "matplotlib._c_internal_utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_c_internal_utils.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._cm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_cm.py", "layer": 1, "hasclass": 2, "myclass": [[], ["functools"]], "hasfunction": 2, "myfunction": [["_ch_helper", "_flag_blue", "_flag_green", "_flag_red", "_g0", "_g1", "_g10", "_g11", "_g12", "_g13", "_g14", "_g15", "_g16", "_g17", "_g18", "_g19", "_g2", "_g20", "_g21", "_g22", "_g23", "_g24", "_g25", "_g26", "_g27", "_g28", "_g29", "_g3", "_g30", "_g31", "_g32", "_g33", "_g34", "_g35", "_g36", "_g4", "_g5", "_g6", "_g7", "_g8", "_g9", "_gist_heat_blue", "_gist_heat_green", "_gist_heat_red", "_gist_yarg", "_prism_blue", "_prism_green", "_prism_red", "cubehelix"], []]}, {"name": "matplotlib._cm_listed", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_cm_listed.py", "layer": 1, "hasclass": 2, "myclass": [[], ["matplotlib.colors"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._color_data", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_color_data.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._constrained_layout", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_constrained_layout.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["check_no_collapsed_axes", "colorbar_get_pad", "compress_fixed_aspect", "do_constrained_layout", "get_cb_parent_spans", "get_margin_from_padding", "get_pos_and_bbox", "make_layout_margins", "make_layoutgrids", "make_layoutgrids_gs", "make_margin_suptitles", "match_submerged_margins", "reposition_axes", "reposition_colorbar", "reset_margins"], []]}, {"name": "matplotlib._docstring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_docstring.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._docstring", "matplotlib._docstring", "matplotlib._docstring"], []], "hasfunction": 2, "myfunction": [["copy"], []]}, {"name": "matplotlib._enums", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_enums.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._enums", "matplotlib._enums", "matplotlib._enums"], ["enum", "enum"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._fontconfig_pattern", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_fontconfig_pattern.py", "layer": 1, "hasclass": 2, "myclass": [[], ["pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "functools"]], "hasfunction": 2, "myfunction": [["generate_fontconfig_pattern"], ["lru_cache"]]}, {"name": "matplotlib._image", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_image.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._layoutgrid", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_layoutgrid.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._layoutgrid"], ["matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["plot_children", "seq_id"], []]}, {"name": "matplotlib._mathtext", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_mathtext.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext", "matplotlib._mathtext"], ["pyparsing.core", "matplotlib.ft2font", "matplotlib.font_manager", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.core", "pyparsing.exceptions", "pyparsing.results", "pyparsing.core", "pyparsing.core", "matplotlib.mathtext", "pyparsing.core", "pyparsing.core", "matplotlib.mathtext", "pyparsing.core", "pyparsing.common"]], "hasfunction": 2, "myfunction": [["Error", "_get_font_constant_set", "cmd", "ship"], ["get_font", "get_unicode_index", "namedtuple", "oneOf"]]}, {"name": "matplotlib._mathtext_data", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_mathtext_data.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._path", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_path.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._pylab_helpers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_pylab_helpers.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib._pylab_helpers"], ["collections"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib._text_helpers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_text_helpers.py", "layer": 1, "hasclass": 2, "myclass": [[], ["types"]], "hasfunction": 2, "myfunction": [["layout", "warn_on_missing_glyph"], []]}, {"name": "matplotlib._tight_bbox", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_tight_bbox.py", "layer": 1, "hasclass": 2, "myclass": [[], ["matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["adjust_bbox", "process_figure_for_rasterizing"], []]}, {"name": "matplotlib._tight_layout", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_tight_layout.py", "layer": 1, "hasclass": 2, "myclass": [[], ["matplotlib.transforms", "matplotlib.font_manager"]], "hasfunction": 2, "myfunction": [["_auto_adjust_subplotpars", "get_subplotspec_list", "get_tight_layout_figure"], []]}, {"name": "matplotlib._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.artist", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\artist.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.artist", "matplotlib.artist", "matplotlib.artist", "matplotlib.artist"], ["matplotlib.transforms", "matplotlib.colors", "matplotlib.transforms", "numbers", "inspect", "matplotlib.path", "matplotlib.cm", "inspect", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_finalize_rasterization", "_get_tightbbox_for_layout_only", "_prevent_rasterization", "_stale_axes_callback", "allow_rasterization", "getp", "getp", "kwdoc", "setp"], ["lru_cache", "namedtuple", "wraps"]]}, {"name": "matplotlib.axes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\axes\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.axes", "matplotlib.axes"], ["matplotlib.axes._axes", "matplotlib.container", "matplotlib.container", "numbers", "numbers", "matplotlib.axes._secondary_axes", "matplotlib.container", "matplotlib.axes._axes"]], "hasfunction": 2, "myfunction": [["subplot_class_factory"], []]}, {"name": "matplotlib.axes._axes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\axes\\_axes.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.axes._axes"], ["matplotlib.container", "matplotlib.container", "numbers", "numbers", "matplotlib.axes._secondary_axes", "matplotlib.container", "matplotlib.axes._base", "matplotlib.axes._base"]], "hasfunction": 2, "myfunction": [[], ["_preprocess_data", "_process_plot_format"]]}, {"name": "matplotlib.axes._base", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\axes\\_base.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.axes._base", "matplotlib.axes._base", "matplotlib.axes._base", "matplotlib.axes._base"], ["contextlib", "collections.abc", "numbers", "collections.abc", "matplotlib.gridspec", "matplotlib.cbook", "operator"]], "hasfunction": 2, "myfunction": [["_draw_rasterized", "_process_plot_format"], ["_check_1d", "cycler", "index_of", "validate_axisbelow"]]}, {"name": "matplotlib.axes._secondary_axes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\axes\\_secondary_axes.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.axes._secondary_axes"], ["matplotlib.axis", "matplotlib.axes._base", "matplotlib.axes._base"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.axis", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\axis.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.axis", "matplotlib.axis", "matplotlib.axis", "matplotlib.axis", "matplotlib.axis", "matplotlib.axis", "matplotlib.axis", "matplotlib.axis"], ["numbers"]], "hasfunction": 2, "myfunction": [["_make_getset_interval"], []]}, {"name": "matplotlib.backend_bases", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\backend_bases.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.backend_bases"], ["matplotlib.transforms", "matplotlib._enums", "enum", "contextlib", "matplotlib._pylab_helpers", "enum", "matplotlib._enums", "matplotlib.path", "matplotlib.texmanager", "matplotlib.backend_managers", "weakref", "matplotlib.backend_tools", "contextlib"]], "hasfunction": 2, "myfunction": [["_get_renderer", "_is_non_interactive_terminal_ipython", "_key_handler", "_mouse_handler", "_no_output_draw", "_safe_pyplot_import", "button_press_handler", "get_registered_canvas_class", "key_press_handler", "register_backend"], ["_setattr_cm", "contextmanager", "get_backend", "is_interactive", "namedtuple"]]}, {"name": "matplotlib.backend_managers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\backend_managers.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.backend_managers", "matplotlib.backend_managers", "matplotlib.backend_managers", "matplotlib.backend_managers"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.backend_tools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\backend_tools.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools", "matplotlib.backend_tools"], ["matplotlib._pylab_helpers", "types", "weakref"]], "hasfunction": 2, "myfunction": [["_find_tool_class", "_register_tool_class", "add_tools_to_container", "add_tools_to_manager"], []]}, {"name": "matplotlib.bezier", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\bezier.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.bezier", "matplotlib.bezier"], []], "hasfunction": 2, "myfunction": [["_de_casteljau1", "check_if_parallel", "find_bezier_t_intersecting_with_closedpath", "find_control_points", "get_cos_sin", "get_intersection", "get_normal_points", "get_parallels", "inside_circle", "make_wedged_bezier2", "split_bezier_intersecting_with_closedpath", "split_de_casteljau", "split_path_inout"], ["lru_cache"]]}, {"name": "matplotlib.category", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\category.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.category", "matplotlib.category", "matplotlib.category", "matplotlib.category"], ["collections"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.cbook", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\cbook\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook", "matplotlib.cbook"], ["pathlib", "numpy"]], "hasfunction": 2, "myfunction": [["_array_patch_perimeters", "_array_perimeter", "_auto_format_str", "_backend_module_name", "_check_1d", "_check_and_log_subprocess", "_combine_masks", "_exception_printer", "_format_approx", "_g_sig_digits", "_get_data_path", "_get_nonzero_slices", "_get_running_interactive_framework", "_local_over_kwdict", "_lock_path", "_pformat_subprocess", "_picklable_class_constructor", "_premultiplied_argb32_to_unmultiplied_rgba8888", "_reshape_2D", "_safe_first_finite", "_setattr_cm", "_setup_new_guiapp", "_str_equal", "_str_lower_equal", "_strip_comment", "_to_unmasked_float_array", "_topmost_artist", "_unfold", "_unikey_or_keysym_to_mplkey", "_unmultiplied_rgba8888_to_premultiplied_argb32", "_unpack_to_numpy", "_weak_or_strong_ref", "boxplot_stats", "contiguous_regions", "delete_masked_points", "file_requires_unicode", "flatten", "get_sample_data", "index_of", "is_math_text", "is_scalar_or_string", "is_writable_file_like", "normalize_kwargs", "open_file_cm", "print_cycles", "pts_to_midstep", "pts_to_poststep", "pts_to_prestep", "safe_first_element", "safe_masked_invalid", "sanitize_sequence", "simple_linear_interpolation", "strip_math", "to_filehandle", "violin_stats"], []]}, {"name": "matplotlib.cm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\cm.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.cm", "matplotlib.cm"], ["collections.abc"]], "hasfunction": 2, "myfunction": [["_auto_norm_from_scale", "_ensure_cmap", "_gen_cmap_registry", "_get_cmap", "_get_cmap", "register_cmap", "unregister_cmap"], []]}, {"name": "matplotlib.collections", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\collections.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections", "matplotlib.collections"], ["matplotlib._enums", "matplotlib._enums", "numbers"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.colorbar", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\colorbar.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.colorbar", "matplotlib.colorbar", "matplotlib.colorbar", "matplotlib.colorbar"], []], "hasfunction": 2, "myfunction": [["_get_orientation_from_location", "_get_ticklocation_from_orientation", "_normalize_location_orientation", "_set_ticks_on_axis_warn", "make_axes", "make_axes_gridspec"], []]}, {"name": "matplotlib.colors", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\colors.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors", "matplotlib.colors"], ["collections.abc", "numbers", "PIL.PngImagePlugin", "collections.abc", "collections.abc"]], "hasfunction": 2, "myfunction": [["_check_color_like", "_create_empty_object_of_class", "_create_lookup_table", "_has_alpha_channel", "_is_nth_color", "_picklable_norm_constructor", "_sanitize_extrema", "_to_rgba_no_colorcycle", "_vector_magnitude", "from_levels_and_colors", "get_named_colors_mapping", "to_rgb", "hsv_to_rgb", "is_color_like", "make_norm_from_scale", "to_hex", "rgb_to_hsv", "same_color", "to_hex", "to_rgb", "to_rgba", "to_rgba_array"], []]}, {"name": "matplotlib.container", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\container.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.container", "matplotlib.container", "matplotlib.container", "matplotlib.container"], ["matplotlib.artist"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.contour", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\contour.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.contour", "matplotlib.contour", "matplotlib.contour", "matplotlib.contour"], ["numbers", "matplotlib.backend_bases", "matplotlib.text"]], "hasfunction": 2, "myfunction": [["_contour_labeler_event_handler", "_find_closest_point_on_path", "_is_closed_polygon"], []]}, {"name": "matplotlib.dates", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\dates.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates", "matplotlib.dates"], ["dateutil.relativedelta", "dateutil.rrule"]], "hasfunction": 2, "myfunction": [["_dt64_to_ordinalf", "_from_ordinalf", "_get_tzinfo", "_reset_epoch_test_example", "_wrap_in_tex", "date2num", "date_ticker_factory", "datestr2num", "drange", "get_epoch", "julian2num", "num2date", "num2julian", "num2timedelta", "set_epoch"], []]}, {"name": "matplotlib.dviread", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\dviread.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread", "matplotlib.dviread"], ["pathlib", "functools"]], "hasfunction": 2, "myfunction": [["_arg", "_arg_olen1", "_arg_raw", "_arg_slen", "_arg_slen1", "_arg_ulen1", "_dispatch", "_mul2012", "_parse_enc", "find_tex_file"], ["lru_cache", "namedtuple", "wraps"]]}, {"name": "matplotlib.figure", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\figure.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure", "matplotlib.figure"], ["matplotlib.transforms", "matplotlib.artist", "matplotlib.axes._axes", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.layout_engine", "matplotlib.backend_bases", "contextlib", "matplotlib.backend_bases", "matplotlib.gridspec", "numbers", "matplotlib.layout_engine", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.layout_engine", "matplotlib.patches", "matplotlib.text", "matplotlib.layout_engine", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_stale_figure_callback", "figaspect"], ["_finalize_rasterization", "_get_renderer", "allow_rasterization"]]}, {"name": "matplotlib.font_manager", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\font_manager.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.font_manager", "matplotlib.font_manager", "matplotlib.font_manager", "matplotlib.font_manager"], ["_io", "types", "numbers", "pathlib"]], "hasfunction": 2, "myfunction": [["_fontentry_helper_repr_html", "_fontentry_helper_repr_png", "_get_win32_installed_fonts", "_json_decode", "_load_fontmanager", "afmFontProperty", "findSystemFonts", "get_font", "get_fontext_synonyms", "json_dump", "json_load", "list_fonts", "ttfFontProperty", "win32FontDirectory"], ["b64encode", "generate_fontconfig_pattern", "lru_cache", "namedtuple"]]}, {"name": "matplotlib.ft2font", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\ft2font.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.ft2font", "matplotlib.ft2font"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.gridspec", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\gridspec.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.gridspec", "matplotlib.gridspec", "matplotlib.gridspec", "matplotlib.gridspec"], ["matplotlib.transforms", "numbers"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.hatch", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\hatch.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch", "matplotlib.hatch"], ["matplotlib.path"]], "hasfunction": 2, "myfunction": [["_validate_hatch_pattern", "get_path"], []]}, {"name": "matplotlib.image", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\image.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.image", "matplotlib.image", "matplotlib.image", "matplotlib.image", "matplotlib.image", "matplotlib.image"], ["matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.backend_bases", "matplotlib.transforms", "pathlib", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_draw_list_compositing_images", "_pil_png_to_float_array", "_resample", "_rgb_to_rgba", "composite_images", "imread", "imsave", "pil_to_array", "thumbnail"], []]}, {"name": "matplotlib.layout_engine", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\layout_engine.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.layout_engine", "matplotlib.layout_engine", "matplotlib.layout_engine", "matplotlib.layout_engine"], ["contextlib"]], "hasfunction": 2, "myfunction": [[], ["do_constrained_layout", "get_subplotspec_list", "get_tight_layout_figure"]]}, {"name": "matplotlib.legend", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\legend.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.legend", "matplotlib.legend"], ["matplotlib.offsetbox", "matplotlib.artist", "matplotlib.container", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.collections", "matplotlib.collections", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.container", "matplotlib.patches", "matplotlib.font_manager", "matplotlib.offsetbox", "matplotlib.lines", "matplotlib.collections", "matplotlib.patches", "matplotlib.collections", "matplotlib.collections", "matplotlib.patches", "matplotlib.collections", "matplotlib.patches", "matplotlib.container", "matplotlib.patches", "matplotlib.text", "matplotlib.offsetbox", "matplotlib.transforms", "matplotlib.offsetbox", "matplotlib.cbook"]], "hasfunction": 2, "myfunction": [["_get_legend_handles", "_get_legend_handles_labels", "_parse_legend_args"], ["allow_rasterization"]]}, {"name": "matplotlib.legend_handler", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\legend_handler.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler", "matplotlib.legend_handler"], ["matplotlib.lines", "matplotlib.patches", "itertools"]], "hasfunction": 2, "myfunction": [["update_from_first_child"], []]}, {"name": "matplotlib.lines", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\lines.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.lines", "matplotlib.lines", "matplotlib.lines"], ["matplotlib.artist", "matplotlib.transforms", "matplotlib.transforms", "matplotlib._enums", "numbers", "matplotlib._enums", "matplotlib.markers", "numbers", "matplotlib.path", "numbers", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_get_dash_pattern", "_mark_every_path", "_scale_dashes", "segment_hits"], ["_to_unmasked_float_array", "allow_rasterization"]]}, {"name": "matplotlib.markers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\markers.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.markers"], ["matplotlib.transforms", "matplotlib._enums", "matplotlib.transforms", "matplotlib._enums", "matplotlib.path", "collections.abc"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.mathtext", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mathtext.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.mathtext", "matplotlib.mathtext", "matplotlib.mathtext", "matplotlib.mathtext", "matplotlib.mathtext", "matplotlib.mathtext", "matplotlib.mathtext"], ["matplotlib.ft2font", "matplotlib.font_manager"]], "hasfunction": 2, "myfunction": [["get_unicode_index", "math_to_image"], ["namedtuple"]]}, {"name": "matplotlib.mlab", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\mlab.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.mlab"], ["numbers"]], "hasfunction": 2, "myfunction": [["_single_spectrum_helper", "_spectral_helper", "_stride_windows", "cohere", "csd", "detrend", "detrend_linear", "detrend_mean", "detrend_none", "psd", "specgram", "stride_windows", "window_hanning", "window_none"], []]}, {"name": "matplotlib.offsetbox", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\offsetbox.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox", "matplotlib.offsetbox"], ["matplotlib.transforms", "matplotlib.transforms", "matplotlib.image", "matplotlib.patches", "matplotlib.patches", "matplotlib.font_manager", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_bbox_artist", "_compat_get_offset", "_get_aligned_offsets", "_get_anchored_bbox", "_get_packed_offsets", "bbox_artist"], ["bbox_artist"]]}, {"name": "matplotlib.patches", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\patches.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches", "matplotlib.patches"], ["matplotlib.transforms", "matplotlib._enums", "matplotlib._enums", "matplotlib.bezier", "numbers", "matplotlib.path", "types"]], "hasfunction": 2, "myfunction": [["_point_along_a_line", "_register_style", "bbox_artist", "draw_bbox"], ["get_cos_sin", "get_intersection", "get_parallels", "inside_circle", "make_wedged_bezier2", "namedtuple", "split_bezier_intersecting_with_closedpath", "split_path_inout"]]}, {"name": "matplotlib.path", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\path.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.path"], ["matplotlib.bezier", "weakref"]], "hasfunction": 2, "myfunction": [["get_path_collection_extents"], ["_to_unmasked_float_array", "lru_cache", "simple_linear_interpolation"]]}, {"name": "matplotlib.projections", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\projections\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.projections"], ["matplotlib.projections.geo", "mpl_toolkits.mplot3d.axes3d", "matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.polar"]], "hasfunction": 2, "myfunction": [["get_projection_class", "register_projection"], []]}, {"name": "matplotlib.projections.geo", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\projections\\geo.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.geo", "matplotlib.projections.geo"], ["matplotlib.transforms", "matplotlib.axes._axes", "matplotlib.transforms", "matplotlib.patches", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.path", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.projections.polar", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\projections\\polar.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar", "matplotlib.projections.polar"], ["matplotlib.axes._axes", "matplotlib.path", "matplotlib.spines"]], "hasfunction": 2, "myfunction": [["_is_full_circle_deg", "_is_full_circle_rad"], []]}, {"name": "matplotlib.pyplot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\pyplot.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.pyplot"], ["matplotlib.text", "matplotlib.patches", "matplotlib.artist", "matplotlib.ticker", "matplotlib.axes._axes", "matplotlib.widgets", "matplotlib.patches", "enum", "contextlib", "matplotlib.figure", "matplotlib.figure", "matplotlib.backend_bases", "matplotlib.backend_bases", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.gridspec", "matplotlib.ticker", "matplotlib.lines", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.backend_bases", "matplotlib.ticker", "matplotlib.colors", "matplotlib.ticker", "matplotlib.ticker", "numbers", "matplotlib.projections.polar", "matplotlib.patches", "matplotlib.patches", "matplotlib.ticker", "matplotlib.widgets", "matplotlib.axes._axes", "matplotlib.gridspec", "matplotlib.text", "matplotlib.ticker", "matplotlib.widgets"]], "hasfunction": 2, "myfunction": [["_auto_draw_if_interactive", "_copy_docstring_and_deprecators", "_draw_all_if_interactive", "_get_backend_mod", "_get_pyplot_commands", "_get_required_interactive_framework", "_warn_if_gui_out_of_main_thread", "acorr", "angle_spectrum", "annotate", "arrow", "autoscale", "autumn", "axes", "axhline", "axhspan", "axis", "axline", "axvline", "axvspan", "bar", "bar_label", "barbs", "barh", "bone", "box", "boxplot", "broken_barh", "cla", "clabel", "clf", "clim", "close", "cohere", "colorbar", "connect", "contour", "contourf", "cool", "copper", "csd", "delaxes", "disconnect", "draw", "draw_if_interactive", "errorbar", "eventplot", "figimage", "figlegend", "fignum_exists", "figtext", "figure", "fill", "fill_between", "fill_betweenx", "findobj", "flag", "gca", "gcf", "gci", "get", "get_cmap", "get_current_fig_manager", "get_figlabels", "get_fignums", "get_plot_commands", "getp", "ginput", "gray", "grid", "hexbin", "hist", "hist2d", "hlines", "hot", "hsv", "imread", "imsave", "imshow", "inferno", "install_repl_displayhook", "ioff", "ion", "isinteractive", "jet", "legend", "locator_params", "loglog", "magma", "magnitude_spectrum", "margins", "matshow", "minorticks_off", "minorticks_on", "new_figure_manager", "nipy_spectral", "pause", "pcolor", "pcolormesh", "phase_spectrum", "pie", "pink", "plasma", "plot", "plot_date", "polar", "prism", "psd", "quiver", "quiverkey", "rc", "rc_context", "rcdefaults", "rgrids", "savefig", "sca", "scatter", "sci", "semilogx", "semilogy", "set_cmap", "set_loglevel", "setp", "show", "specgram", "spring", "spy", "stackplot", "stairs", "stem", "step", "streamplot", "subplot", "subplot2grid", "subplot_mosaic", "subplot_tool", "subplots", "subplots_adjust", "summer", "suptitle", "switch_backend", "table", "text", "thetagrids", "tick_params", "ticklabel_format", "tight_layout", "title", "tricontour", "tricontourf", "tripcolor", "triplot", "twinx", "twiny", "uninstall_repl_displayhook", "violinplot", "viridis", "vlines", "waitforbuttonpress", "winter", "xcorr", "xkcd", "xlabel", "xlim", "xscale", "xticks", "ylabel", "ylim", "yscale", "yticks"], ["cycler", "figaspect", "get_backend", "get_scale_names", "interactive", "register_cmap"]]}, {"name": "matplotlib.quiver", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\quiver.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.quiver", "matplotlib.quiver", "matplotlib.quiver"], ["matplotlib.patches"]], "hasfunction": 2, "myfunction": [["_check_consistent_shapes", "_parse_args"], []]}, {"name": "matplotlib.rcsetup", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\rcsetup.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.rcsetup", "matplotlib.rcsetup", "matplotlib.rcsetup"], ["matplotlib._enums", "matplotlib.colors", "cycler", "matplotlib._enums", "numbers"]], "hasfunction": 2, "myfunction": [["_convert_validator_spec", "_make_type_validator", "_validate_cmap", "_validate_color_or_linecolor", "_validate_date", "_validate_greaterequal0_lessequal1", "_validate_greaterequal0_lessthan1", "_validate_linestyle", "_validate_mathtext_fallback", "_validate_pathlike", "_validate_toolbar", "cycler", "validate_any", "validate_anylist", "validate_aspect", "validate_axisbelow", "validate_backend", "validate_bbox", "validate_bool", "validate_color", "validate_color_for_prop_cycle", "validate_color_or_auto", "validate_color_or_inherit", "validate_colorlist", "validate_cycler", "validate_floatlistlist", "validate_dpi", "ValidateInStringsList", "validate_float", "validate_float_or_None", "validate_floatlist", "validate_font_properties", "validate_fontsize", "validate_fontsize_None", "validate_fontsizelist", "validate_fontstretch", "validate_fonttype", "validate_fontweight", "validate_hatch", "validate_hatchlist", "validate_hist_bins", "validate_int", "validate_int_or_None", "validate_markevery", "validate_markeverylist", "validate_ps_distiller", "validate_sketch", "validate_str", "validate_str_or_None", "validate_strlist", "validate_whiskers"], ["cycler", "is_color_like", "lru_cache"]]}, {"name": "matplotlib.scale", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\scale.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale", "matplotlib.scale"], ["matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.transforms", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_get_scale_docs", "get_scale_names", "register_scale", "scale_factory"], []]}, {"name": "matplotlib.spines", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\spines.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.spines", "matplotlib.spines", "matplotlib.spines"], ["collections.abc"]], "hasfunction": 2, "myfunction": [[], ["allow_rasterization"]]}, {"name": "matplotlib.stackplot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\stackplot.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["stackplot"], []]}, {"name": "matplotlib.streamplot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\streamplot.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.streamplot", "matplotlib.streamplot", "matplotlib.streamplot", "matplotlib.streamplot", "matplotlib.streamplot", "matplotlib.streamplot", "matplotlib.streamplot"], []], "hasfunction": 2, "myfunction": [["_euler_step", "_gen_starting_points", "_get_integrator", "_integrate_rk12", "interpgrid", "streamplot"], []]}, {"name": "matplotlib.style", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\style\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["context", "reload_library", "use"]]}, {"name": "matplotlib.style.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\style\\core.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.style.core"], ["pathlib"]], "hasfunction": 2, "myfunction": [["context", "read_style_directory", "reload_library", "update_nested_dict", "update_user_library", "use"], ["_rc_params_in_file"]]}, {"name": "matplotlib.table", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\table.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.table", "matplotlib.table", "matplotlib.table"], ["matplotlib.artist", "matplotlib.transforms", "matplotlib.path", "matplotlib.patches", "matplotlib.text"]], "hasfunction": 2, "myfunction": [["table"], ["allow_rasterization"]]}, {"name": "matplotlib.texmanager", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\texmanager.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.texmanager"], ["pathlib", "tempfile"]], "hasfunction": 2, "myfunction": [["_usepackage_if_not_loaded"], []]}, {"name": "matplotlib.text", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\text.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.text", "matplotlib.text", "matplotlib.text", "matplotlib.text"], ["matplotlib.transforms", "matplotlib.artist", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.patches", "matplotlib.patches", "matplotlib.font_manager", "matplotlib.transforms", "numbers", "matplotlib.patches", "matplotlib.textpath", "matplotlib.textpath", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_get_text_metrics_with_cache", "_get_textbox", "get_rotation"], []]}, {"name": "matplotlib.textpath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\textpath.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.textpath", "matplotlib.textpath"], ["matplotlib.transforms", "matplotlib.font_manager", "matplotlib.mathtext", "collections", "matplotlib.path", "matplotlib.texmanager"]], "hasfunction": 2, "myfunction": [[], ["get_font"]]}, {"name": "matplotlib.ticker", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\ticker.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker", "matplotlib.ticker"], ["numbers"]], "hasfunction": 2, "myfunction": [["_decade_greater", "_decade_greater_equal", "_decade_less", "_decade_less_equal", "_is_close_to_int", "_is_decade", "is_close_to_int", "is_decade", "scale_range"], []]}, {"name": "matplotlib.transforms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\transforms.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms", "matplotlib.transforms"], ["matplotlib.path"]], "hasfunction": 2, "myfunction": [["_interval_contains_close", "_make_str_method", "blended_transform_factory", "composite_transform_factory", "interval_contains", "interval_contains_open", "nonsingular", "offset_copy"], ["inv"]]}, {"name": "matplotlib.tri", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._trifinder", "matplotlib.tri._tritools", "matplotlib.tri._tricontour", "matplotlib.tri._trifinder", "matplotlib.tri._triinterpolate", "matplotlib.tri._trirefine", "matplotlib.tri._triangulation", "matplotlib.tri._trirefine"]], "hasfunction": 2, "myfunction": [[], ["tricontour", "tricontourf", "tripcolor", "triplot"]]}, {"name": "matplotlib.tri._triangulation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_triangulation.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._triangulation"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.tri._tricontour", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_tricontour.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._tricontour"], ["matplotlib.contour", "matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [["tricontour", "tricontourf"], []]}, {"name": "matplotlib.tri._trifinder", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_trifinder.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._trifinder", "matplotlib.tri._trifinder"], ["matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.tri._triinterpolate", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_triinterpolate.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate", "matplotlib.tri._triinterpolate"], ["matplotlib.tri._tritools", "matplotlib.tri._trifinder", "matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [["_cg", "_extract_submatrices", "_pseudo_inv22sym_vectorized", "_roll_vectorized", "_safe_inv22_vectorized", "_scalar_vectorized", "_to_matrix_vectorized", "_transpose_vectorized"], []]}, {"name": "matplotlib.tri._tripcolor", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_tripcolor.py", "layer": 2, "hasclass": 2, "myclass": [[], ["matplotlib.colors", "matplotlib.collections", "matplotlib.collections", "matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [["tripcolor"], []]}, {"name": "matplotlib.tri._triplot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_triplot.py", "layer": 2, "hasclass": 2, "myclass": [[], ["matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [["triplot"], []]}, {"name": "matplotlib.tri._trirefine", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_trirefine.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._trirefine", "matplotlib.tri._trirefine"], ["matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.tri._tritools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\tri\\_tritools.py", "layer": 2, "hasclass": 2, "myclass": [["matplotlib.tri._tritools"], ["matplotlib.tri._triangulation"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "matplotlib.units", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\units.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.units", "matplotlib.units", "matplotlib.units", "matplotlib.units", "matplotlib.units"], ["decimal", "numbers"]], "hasfunction": 2, "myfunction": [["_is_natively_supported"], []]}, {"name": "matplotlib.widgets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\matplotlib\\widgets.py", "layer": 1, "hasclass": 2, "myclass": [["matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets", "matplotlib.widgets"], ["matplotlib.transforms", "matplotlib.patches", "matplotlib.patches", "contextlib", "numbers", "matplotlib.lines", "numbers", "matplotlib.patches", "matplotlib.patches", "matplotlib.transforms"]], "hasfunction": 2, "myfunction": [["_expand_text_props"], ["cycler"]]}, {"name": "mpmath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["mpmath.ctx_fp", "mpmath.ctx_mp", "mpmath.ctx_iv", "mpmath.matrices.matrices", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [["doctests", "runtests"], ["f", "f", "f", "f", "f", "f", "bernfrac", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "f", "monitor", "f", "f", "f", "f", "f", "f", "f", "f", "timing"]]}, {"name": "mpmath.ctx_mp", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\ctx_mp.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.ctx_mp", "mpmath.ctx_mp"], ["mpmath.ctx_mp_python", "mpmath.libmp.libmpf", "builtins", "mpmath.ctx_base", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "builtins", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [[], ["python_bitcount", "dps_to_prec", "from_float", "from_int", "from_man_exp", "from_pickable", "from_rational", "from_str", "mpc_abs", "mpc_add", "mpc_add_mpf", "mpc_conjugate", "mpc_div", "mpc_div_mpf", "mpc_hash", "mpc_is_nonzero", "mpc_mpf_div", "mpc_mul", "mpc_mul_int", "mpc_mul_mpf", "mpc_neg", "mpc_pos", "mpc_pow", "mpc_pow_int", "mpc_pow_mpf", "mpc_sub", "mpc_sub_mpf", "mpc_to_complex", "mpc_to_str", "mpf_abs", "mpf_add", "f", "f", "mpf_cmp", "f", "mpf_div", "f", "mpf_eq", "f", "mpf_ge", "f", "mpf_gt", "mpf_hash", "f", "mpf_le", "f", "f", "mpf_lt", "f", "mpf_mod", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "f", "f", "mpf_pos", "mpf_pow", "mpf_pow_int", "mpf_rand", "mpf_rdiv_int", "mpf_sub", "mpf_sum", "f", "_normalize", "prec_to_dps", "repr_dps", "to_fixed", "to_float", "to_int", "to_pickable", "to_str"]]}, {"name": "mpmath.ctx_mp_python", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\ctx_mp_python.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python"], ["mpmath.libmp.libmpf", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["binary_op"], ["python_bitcount", "dps_to_prec", "from_Decimal", "from_float", "from_int", "from_man_exp", "from_npfloat", "from_pickable", "from_rational", "from_str", "mpc_abs", "mpc_add", "mpc_add_mpf", "mpc_conjugate", "mpc_div", "mpc_div_mpf", "mpc_hash", "mpc_is_nonzero", "mpc_mpf_div", "mpc_mul", "mpc_mul_int", "mpc_mul_mpf", "mpc_neg", "mpc_pos", "mpc_pow", "mpc_pow_int", "mpc_pow_mpf", "mpc_sub", "mpc_sub_mpf", "mpc_to_complex", "mpc_to_str", "mpf_abs", "mpf_add", "f", "f", "mpf_cmp", "f", "mpf_div", "f", "mpf_eq", "f", "mpf_ge", "f", "mpf_gt", "mpf_hash", "f", "mpf_le", "f", "f", "mpf_lt", "f", "mpf_mod", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "f", "f", "mpf_pos", "mpf_pow", "mpf_pow_int", "mpf_rand", "mpf_rdiv_int", "mpf_sub", "mpf_sum", "f", "_normalize", "prec_to_dps", "repr_dps", "to_fixed", "to_float", "to_int", "to_pickable", "to_str"]]}, {"name": "mpmath.calculus", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.calculus.approximation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\approximation.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["chebT", "chebcoeff", "chebyfit", "fourier", "fourierval"], ["defun"]]}, {"name": "mpmath.calculus.calculus", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\calculus.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.calculus"], []], "hasfunction": 2, "myfunction": [["defun"], []]}, {"name": "mpmath.calculus.differentiation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\differentiation.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_partial_diff", "diff", "difference", "differint", "diffs", "diffs_exp", "diffs_prod", "diffun", "dpoly", "hsteps", "iterable_to_function", "pade", "taylor"], ["defun"]]}, {"name": "mpmath.calculus.extrapolation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\extrapolation.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.extrapolation", "mpmath.calculus.extrapolation"], ["builtins", "builtins"]], "hasfunction": 2, "myfunction": [["adaptive_extrapolation", "cartesian_product", "cohen_alt", "fold_finite", "fold_infinite", "levin", "limit", "nprod", "nsum", "richardson", "shanks", "standardize", "standardize_infinite", "sumap", "sumem", "wrapsafe"], ["defun"]]}, {"name": "mpmath.calculus.inverselaplace", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\inverselaplace.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.inverselaplace", "mpmath.calculus.inverselaplace", "mpmath.calculus.inverselaplace", "mpmath.calculus.inverselaplace", "mpmath.calculus.inverselaplace", "mpmath.calculus.inverselaplace"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.calculus.odes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\odes.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.odes"], ["builtins"]], "hasfunction": 2, "myfunction": [["ode_taylor", "odefun"], []]}, {"name": "mpmath.calculus.optimization", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\optimization.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization", "mpmath.calculus.optimization"], ["builtins"]], "hasfunction": 2, "myfunction": [["Anderson", "Pegasus", "_getm", "findroot", "jacobian", "multiplicity", "steffensen"], ["copy"]]}, {"name": "mpmath.calculus.polynomials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\polynomials.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["polyroots", "polyval"], ["defun"]]}, {"name": "mpmath.calculus.quadrature", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\calculus\\quadrature.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.calculus.quadrature", "mpmath.calculus.quadrature", "mpmath.calculus.quadrature", "mpmath.calculus.quadrature"], ["builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.ctx_base", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\ctx_base.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.ctx_base", "mpmath.ctx_base"], ["mpmath.calculus.calculus", "mpmath.matrices.eigen", "mpmath.identification", "mpmath.calculus.inverselaplace", "mpmath.matrices.linalg", "mpmath.matrices.calculus", "mpmath.matrices.matrices", "mpmath.calculus.odes", "mpmath.calculus.optimization", "mpmath.calculus.quadrature", "mpmath.functions.rszeta", "mpmath.functions.functions", "mpmath.visualization", "builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.ctx_fp", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\ctx_fp.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.ctx_fp"], ["mpmath.ctx_base"]], "hasfunction": 2, "myfunction": [[], ["mpf_bernoulli", "to_float"]]}, {"name": "mpmath.ctx_iv", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\ctx_iv.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.ctx_iv", "mpmath.ctx_iv", "mpmath.ctx_iv", "mpmath.ctx_iv"], ["mpmath.libmp.libmpf", "mpmath.ctx_base", "mpmath.matrices.matrices", "builtins"]], "hasfunction": 2, "myfunction": [["_binary_op", "convert_mpf_"], ["dps_to_prec", "from_float", "from_int", "from_rational", "from_str", "mpc_hash", "mpci_abs", "mpci_add", "mpci_div", "mpci_exp", "mpci_log", "mpci_mul", "mpci_neg", "mpci_pos", "mpci_pow", "mpci_sub", "mpf_hash", "mpf_le", "mpf_neg", "mpi_abs", "mpi_add", "mpi_delta", "mpi_div", "mpi_from_str", "mpi_mid", "mpi_mul", "mpi_neg", "mpi_pos", "mpi_pow", "mpi_pow_int", "mpi_str", "mpi_sub", "prec_to_dps", "repr_dps"]]}, {"name": "mpmath.function_docs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\function_docs.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.functions.bessel", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\bessel.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_airy_zero", "f_wrapped", "f_wrapped", "f_wrapped", "f_wrapped", "_airybi_n2_inf", "_airyderiv_0", "_anger", "_coulomb_chi", "_scorer", "airyai", "airyaizero", "airybi", "airybizero", "angerj", "bei", "ber", "bessel_zero", "besseli", "besselj", "besseljzero", "besselk", "bessely", "besselyzero", "c_memo", "coulombc", "coulombf", "coulombg", "find_in_interval", "generalized_bisection", "hankel1", "hankel2", "hyperu", "j0", "j1", "kei", "ker", "lommels1", "lommels2", "mcmahon", "scorergi", "scorerhi", "struveh", "struvel", "webere", "whitm", "whitw"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.elliptic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\elliptic.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["RC_calc", "RF_calc", "RJ_calc", "ellipe", "ellipf", "ellipfun", "ellippi", "elliprc", "elliprd", "elliprf", "elliprg", "elliprj", "eta", "kfrom", "kleinj", "mfrom", "nome", "qbarfrom", "qfrom", "taufrom"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.expintegrals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\expintegrals.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_ci_generic", "_ei_generic", "_erf_complex", "_erfc_complex", "_gamma3", "_lower_gamma", "_si_generic", "_upper_gamma", "betainc", "chi", "ci", "e1", "ei", "erf", "erfc", "erfi", "erfinv", "expint", "fresnelc", "fresnels", "gammainc", "li", "ncdf", "npdf", "shi", "si", "square_exp_arg"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.factorials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\factorials.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["barnesg", "beta", "binomial", "fac2", "ff", "gammaprod", "hyperfac", "rf", "superfac"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\functions.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.functions.functions"], ["builtins"]], "hasfunction": 2, "myfunction": [["_lambertw_approx_hybrid", "_lambertw_series", "_lambertw_special", "_polyexp", "_rootof1", "acot", "acoth", "acsc", "acsch", "agm", "arg", "asec", "asech", "bell", "conj", "cot", "coth", "csc", "csch", "cyclotomic", "defun", "defun_static", "defun_wrapped", "degrees", "expm1", "fabs", "fmod", "im", "lambertw", "log", "log10", "log1p", "mangoldt", "polar", "polyexp", "powm1", "radians", "re", "rect", "root", "sec", "sech", "sign", "sinc", "sincpi", "stirling1", "stirling2", "unitroots"], []]}, {"name": "mpmath.functions.hypergeometric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\hypergeometric.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_check_need_perturb", "_hyp0f1", "_hyp1f0", "_hyp1f1", "_hyp1f2", "_hyp2f0", "_hyp2f1", "_hyp2f1_gosper", "_hyp2f2", "_hyp2f3", "_hyp_borel", "_hypq1fq", "appellf1", "appellf2", "appellf3", "appellf4", "bihyper", "hyp0f1", "hyp1f1", "hyp1f2", "hyp2f0", "hyp2f1", "hyp2f2", "hyp2f3", "hyp3f2", "hyper", "hyper2d", "hypercomb", "meijerg"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.orthogonal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\orthogonal.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_hermite_param", "chebyt", "chebyu", "gegenbauer", "hermite", "jacobi", "laguerre", "legendre", "legenp", "legenq", "pcfd", "pcfu", "pcfv", "pcfw", "spherharm"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.qfunctions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\qfunctions.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["qfac", "qgamma", "qhyper", "qp"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.rszeta", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\rszeta.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.functions.rszeta"], []], "hasfunction": 2, "myfunction": [["Rzeta_set", "Rzeta_simul", "_coef", "aux_J_needed", "aux_M_Fp", "coef", "rs_z", "rs_zeta", "z_half", "z_offline", "zeta_half", "zeta_offline"], ["defun"]]}, {"name": "mpmath.functions.signals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\signals.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["sawtoothw", "sigmoid", "squarew", "trianglew", "unit_triangle"], ["defun_wrapped"]]}, {"name": "mpmath.functions.theta", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\theta.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_djacobi_theta2", "_djacobi_theta2a", "_djacobi_theta3", "_djacobi_theta3a", "_djtheta", "_jacobi_theta2", "_jacobi_theta2a", "_jacobi_theta3", "_jacobi_theta3a", "jtheta"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.functions.zeta", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\zeta.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_altzeta_generic", "_hurwitz", "_hurwitz_em", "_hurwitz_reflection", "_load_zeta_zeros", "_zetasum", "altzeta", "bernpoly", "clcos", "clsin", "dirichlet", "eulernum", "eulerpoly", "grampoint", "lerchphi", "oldzetazero", "polylog", "polylog_continuation", "polylog_general", "polylog_series", "polylog_unitcircle", "primepi", "primepi2", "primezeta", "riemannr", "secondzeta", "secondzeta_exp_term", "secondzeta_main_term", "secondzeta_prime_term", "secondzeta_singular_term", "siegeltheta", "siegelz", "stieltjes", "zeta"], ["defun", "defun_static", "defun_wrapped"]]}, {"name": "mpmath.functions.zetazeros", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\functions\\zetazeros.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["backlunds", "comp_fp_tolerance", "compute_triple_tvb", "count_to", "count_variations", "find_rosser_block_zero", "gram_index", "nzeros", "pattern_construct", "search_supergood_block", "separate_my_zero", "separate_zeros_in_block", "sure_number_block", "wpzeros", "zetazero"], ["defun", "defun_wrapped"]]}, {"name": "mpmath.identification", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\identification.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.identification"], ["builtins"]], "hasfunction": 2, "myfunction": [["findpoly", "fracgcd", "identify", "prodstring", "pslq", "pslqstring", "quadraticstring", "round_fixed"], ["sqrt_fixed"]]}, {"name": "mpmath.libmp", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["mpmath.libmp.libmpf", "builtins", "builtins", "mpmath.libmp.libhyper"]], "hasfunction": 2, "myfunction": [[], ["agm_fixed", "apery_fixed", "bernfrac", "bin_to_radix", "python_bitcount", "catalan_fixed", "complex_int_pow", "degree_fixed", "dps_to_prec", "e_fixed", "euler_fixed", "eulernum", "from_Decimal", "from_bstr", "from_float", "from_int", "from_man_exp", "from_npfloat", "from_pickable", "from_rational", "from_str", "gcd", "glaisher_fixed", "ifac", "ifib", "isprime", "isqrt_python", "isqrt_fast_python", "isqrt_small_python", "khinchin_fixed", "list_primes", "ln10_fixed", "ln2_fixed", "log_int_fixed", "make_hyp_summator", "mertens_fixed", "moebius", "mpc_abs", "mpc_acos", "mpc_acosh", "mpc_add", "mpc_add_mpf", "mpc_agm", "mpc_agm1", "mpc_altzeta", "mpc_arg", "mpc_asin", "mpc_asinh", "mpc_atan", "mpc_atanh", "mpc_besseljn", "mpc_cbrt", "mpc_ceil", "mpc_ci", "mpc_conjugate", "mpc_cos", "mpc_cos_pi", "mpc_cos_sin", "mpc_cos_sin_pi", "mpc_cosh", "mpc_div", "mpc_div_mpf", "mpc_e1", "mpc_ei", "mpc_ellipe", "mpc_ellipk", "mpc_exp", "mpc_expj", "mpc_expjpi", "mpc_factorial", "mpc_fibonacci", "mpc_floor", "mpc_frac", "mpc_gamma", "mpc_harmonic", "mpc_hash", "mpc_is_inf", "mpc_is_infnan", "mpc_is_nonzero", "mpc_log", "mpc_loggamma", "mpc_mpf_div", "mpc_mul", "mpc_mul_imag_mpf", "mpc_mul_int", "mpc_mul_mpf", "mpc_neg", "mpc_nint", "mpc_nthroot", "mpc_pos", "mpc_pow", "mpc_pow_int", "mpc_pow_mpf", "mpc_psi", "mpc_psi0", "mpc_reciprocal", "mpc_rgamma", "mpc_shift", "mpc_si", "mpc_sin", "mpc_sin_pi", "mpc_sinh", "mpc_sqrt", "mpc_square", "mpc_sub", "mpc_sub_mpf", "mpc_tan", "mpc_tanh", "mpc_to_complex", "mpc_to_str", "mpc_zeta", "mpc_zetasum", "mpci_abs", "mpci_add", "mpci_cos", "mpci_div", "mpci_exp", "mpci_factorial", "mpci_gamma", "mpci_log", "mpci_loggamma", "mpci_mul", "mpci_neg", "mpci_pos", "mpci_pow", "mpci_rgamma", "mpci_sin", "mpci_sub", "mpf_abs", "mpf_acos", "mpf_acosh", "mpf_add", "mpf_agm", "mpf_agm1", "mpf_altzeta", "f", "mpf_asin", "mpf_asinh", "mpf_atan", "mpf_atan2", "mpf_atanh", "mpf_bernoulli", "mpf_besseljn", "f", "mpf_cbrt", "mpf_ceil", "mpf_ci", "mpf_ci_si", "mpf_cmp", "mpf_cos", "mpf_cos_pi", "mpf_cos_sin", "mpf_cos_sin_pi", "mpf_cosh", "mpf_cosh_sinh", "f", "mpf_div", "f", "mpf_e1", "mpf_ei", "mpf_ellipe", "mpf_ellipk", "mpf_eq", "mpf_erf", "mpf_erfc", "f", "mpf_exp", "mpf_expint", "mpf_expj", "mpf_expjpi", "mpf_factorial", "mpf_fibonacci", "mpf_floor", "mpf_frac", "mpf_frexp", "mpf_gamma", "mpf_gamma_int", "mpf_ge", "f", "mpf_gt", "mpf_harmonic", "mpf_hash", "mpf_hypot", "f", "mpf_le", "f", "f", "mpf_log", "mpf_log_hypot", "mpf_loggamma", "mpf_lt", "f", "mpf_mod", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "mpf_nint", "mpf_nthroot", "mpf_perturb", "f", "f", "mpf_pos", "mpf_pow", "mpf_pow_int", "mpf_psi", "mpf_psi0", "mpf_rand", "mpf_rdiv_int", "mpf_rgamma", "mpf_shift", "mpf_si", "mpf_sign", "mpf_sin", "mpf_sin_pi", "mpf_sinh", "mpf_sqrt", "mpf_sub", "mpf_sum", "mpf_tan", "mpf_tanh", "f", "mpf_zeta", "mpf_zeta_int", "mpi_abs", "mpi_add", "mpi_atan", "mpi_atan2", "mpi_cos", "mpi_cos_sin", "mpi_cot", "mpi_delta", "mpi_div", "mpi_eq", "mpi_exp", "mpi_factorial", "mpi_from_str", "mpi_gamma", "mpi_ge", "mpi_gt", "mpi_le", "mpi_log", "mpi_loggamma", "mpi_lt", "mpi_mid", "mpi_mul", "mpi_ne", "mpi_neg", "mpi_pos", "mpi_pow", "mpi_pow_int", "mpi_rgamma", "mpi_sin", "mpi_sqrt", "mpi_str", "mpi_sub", "mpi_tan", "mpi_to_str", "_normalize", "_normalize1", "numeral_python", "phi_fixed", "pi_fixed", "prec_to_dps", "repr_dps", "round_int", "sqrt_fixed", "sqrtrem_python", "stirling1", "stirling2", "str_to_man_exp", "to_bstr", "to_digits_exp", "to_fixed", "to_float", "to_int", "to_man_exp", "to_pickable", "to_rational", "to_str", "python_trailing", "twinprime_fixed"]]}, {"name": "mpmath.libmp.backend", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\backend.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins", "builtins", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.libmp.gammazeta", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\gammazeta.py", "layer": 2, "hasclass": 2, "myclass": [[], ["mpmath.libmp.libmpf", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["bernfrac", "bernoulli_size", "borwein_coefficients", "complex_stirling_series", "gamma_fixed_taylor", "gamma_taylor_coefficients", "mpc_altzeta", "mpc_factorial", "mpc_gamma", "mpc_harmonic", "mpc_loggamma", "mpc_psi", "mpc_psi0", "mpc_rgamma", "mpc_zeta", "mpc_zetasum", "mpf_altzeta", "mpf_bernoulli", "mpf_bernoulli_huge", "mpf_factorial", "mpf_gamma", "mpf_gamma_int", "mpf_harmonic", "mpf_loggamma", "mpf_psi", "mpf_psi0", "mpf_rgamma", "mpf_zeta", "mpf_zeta_int", "pow_fixed", "primesieve", "real_stirling_series", "stirling_coefficient", "zeta_array", "zetasum_sieved"], ["apery_fixed", "python_bitcount", "catalan_fixed", "constant_memo", "cos_sin_fixed", "def_mpf_constant", "euler_fixed", "exp_fixed", "from_int", "from_man_exp", "from_rational", "glaisher_fixed", "ifac", "ifac2", "isqrt_fast_python", "khinchin_fixed", "list_primes", "ln2_fixed", "ln_sqrt2pi_fixed", "log_int_fixed", "lshift", "mertens_fixed", "moebius", "mpc_abs", "mpc_add", "mpc_add_mpf", "mpc_cos_pi", "mpc_div", "mpc_div_mpf", "mpc_exp", "mpc_log", "mpc_mpf_div", "mpc_mul", "mpc_mul_int", "mpc_mul_mpf", "mpc_neg", "mpc_pos", "mpc_pow", "mpc_pow_int", "mpc_reciprocal", "mpc_shift", "mpc_sin_pi", "mpc_square", "mpc_sub", "mpc_sub_mpf", "mpf_abs", "mpf_add", "f", "f", "mpf_cos_pi", "mpf_cos_sin", "mpf_cos_sin_pi", "mpf_cosh", "mpf_cosh_sinh", "mpf_div", "f", "mpf_exp", "mpf_floor", "f", "mpf_gt", "f", "mpf_le", "f", "f", "mpf_log", "mpf_lt", "f", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "mpf_perturb", "f", "mpf_pos", "mpf_pow", "mpf_pow_int", "mpf_rdiv_int", "mpf_shift", "mpf_sign", "mpf_sin_pi", "mpf_sqrt", "f", "mpf_sub", "f", "pi_fixed", "sqrt_fixed", "sqrtpi_fixed", "to_fixed", "to_float", "to_int", "twinprime_fixed"]]}, {"name": "mpmath.libmp.libelefun", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libelefun.py", "layer": 2, "hasclass": 2, "myclass": [[], ["mpmath.libmp.libmpf", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["acot_fixed", "agm_fixed", "atan_inf", "atan_newton", "atan_taylor", "atan_taylor_get_cached", "bs_chudnovsky", "bsp_acot", "bspe", "constant_memo", "cos_sin_basecase", "cos_sin_fixed", "def_mpf_constant", "degree_fixed", "e_fixed", "exp_basecase", "exp_expneg_basecase", "exp_fixed", "exponential_series", "int_pow_fixed", "ln10_fixed", "ln2_fixed", "ln_sqrt2pi_fixed", "log_agm", "log_int_fixed", "log_taylor", "log_taylor_cached", "machin", "mod_pi2", "mpf_acos", "mpf_acosh", "mpf_asin", "mpf_asinh", "mpf_atan", "mpf_atan2", "mpf_atanh", "mpf_cbrt", "mpf_cos", "mpf_cos_pi", "mpf_cos_sin", "mpf_cos_sin_pi", "mpf_cosh", "mpf_cosh_sinh", "f", "f", "mpf_exp", "mpf_fibonacci", "f", "f", "f", "mpf_log", "mpf_log_hypot", "mpf_nthroot", "f", "f", "mpf_pow", "mpf_sin", "mpf_sin_pi", "mpf_sinh", "f", "mpf_tan", "mpf_tanh", "nthroot_fixed", "phi_fixed", "pi_fixed", "sqrtpi_fixed"], ["python_bitcount", "from_float", "from_int", "from_man_exp", "from_rational", "giant_steps", "ifib", "isqrt_fast_python", "lshift", "mpf_abs", "mpf_add", "mpf_cmp", "mpf_div", "python_mpf_mul", "mpf_neg", "mpf_perturb", "mpf_pos", "mpf_pow_int", "mpf_rdiv_int", "mpf_shift", "mpf_sign", "mpf_sqrt", "mpf_sub", "_normalize", "rshift", "sqrt_fixed", "to_fixed", "to_float", "to_int"]]}, {"name": "mpmath.libmp.libhyper", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libhyper.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.libmp.libhyper"], ["mpmath.libmp.libmpf", "builtins"]], "hasfunction": 2, "myfunction": [["complex_ei_asymptotic", "complex_ei_taylor", "ei_asymptotic", "ei_taylor", "erfc_check_series", "make_hyp_summator", "mpc_agm", "mpc_agm1", "mpc_besseljn", "mpc_ci", "mpc_ci_si_taylor", "mpc_e1", "mpc_ei", "mpc_ellipe", "mpc_ellipk", "mpc_si", "mpf_agm", "mpf_agm1", "mpf_besseljn", "mpf_ci", "mpf_ci_si", "mpf_ci_si_taylor", "mpf_e1", "mpf_ei", "mpf_ellipe", "mpf_ellipk", "mpf_erf", "mpf_erfc", "mpf_expint", "mpf_si"], ["agm_fixed", "python_bitcount", "complex_int_pow", "euler_fixed", "from_int", "from_man_exp", "from_rational", "gcd", "ifac", "mpc_abs", "mpc_add", "mpc_add_mpf", "mpc_div", "mpc_exp", "mpc_is_infnan", "mpc_log", "mpc_mpf_div", "mpc_mul", "mpc_mul_mpf", "mpc_neg", "mpc_pos", "mpc_shift", "mpc_sqrt", "mpc_square", "mpc_sub", "mpc_sub_mpf", "mpf_abs", "mpf_add", "mpf_cmp", "mpf_cos", "mpf_cos_sin", "mpf_div", "f", "mpf_exp", "mpf_gamma_int", "mpf_gt", "mpf_le", "mpf_log", "mpf_lt", "mpf_min_max", "python_mpf_mul", "mpf_neg", "mpf_perturb", "f", "mpf_pos", "mpf_pow_int", "mpf_rdiv_int", "mpf_shift", "mpf_sign", "mpf_sin", "mpf_sqrt", "mpf_sub", "pi_fixed", "sqrt_fixed", "to_fixed", "to_int", "to_rational"]]}, {"name": "mpmath.libmp.libintmath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libintmath.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins", "builtins"]], "hasfunction": 2, "myfunction": [["bin_to_radix", "python_bitcount", "eulernum", "gcd", "giant_steps", "gmpy_bitcount", "ifac", "ifac2", "ifib", "isprime", "isqrt_python", "isqrt_fast_python", "isqrt_fast_python", "isqrt_python", "isqrt_small_python", "isqrt_small_python", "list_primes", "lshift", "moebius", "numeral_python", "numeral_gmpy", "numeral_python", "python_bitcount", "python_trailing", "rshift", "sage_trailing", "small_numeral", "sqrt_fixed", "sqrt_fixed", "sqrtrem_python", "sqrtrem_python", "stirling1", "stirling2", "python_trailing"], []]}, {"name": "mpmath.libmp.libmpc", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libmpc.py", "layer": 2, "hasclass": 2, "myclass": [[], ["mpmath.libmp.libmpf", "builtins"]], "hasfunction": 2, "myfunction": [["acos_asin", "complex_int_pow", "mpc_abs", "mpc_acos", "mpc_acosh", "mpc_add", "mpc_add_mpf", "mpc_arg", "mpc_asin", "mpc_asinh", "mpc_atan", "mpc_atanh", "mpc_cbrt", "mpc_ceil", "mpc_conjugate", "mpc_cos", "mpc_cos_pi", "mpc_cos_sin", "mpc_cos_sin_pi", "mpc_cosh", "mpc_div", "mpc_div_mpf", "mpc_exp", "mpc_expj", "mpc_expjpi", "mpc_fibonacci", "mpc_floor", "mpc_frac", "mpc_hash", "mpc_is_inf", "mpc_is_infnan", "mpc_is_nonzero", "mpc_log", "mpc_mpf_div", "mpc_mul", "mpc_mul_imag_mpf", "mpc_mul_int", "mpc_mul_mpf", "mpc_neg", "mpc_nint", "mpc_nthroot", "mpc_nthroot_fixed", "mpc_pos", "mpc_pow", "mpc_pow_int", "mpc_pow_mpf", "mpc_reciprocal", "mpc_shift", "mpc_sin", "mpc_sin_pi", "mpc_sinh", "mpc_sqrt", "mpc_square", "mpc_sub", "mpc_sub_mpf", "mpc_tan", "mpc_tanh", "mpc_to_complex", "mpc_to_str", "mpf_expj", "mpf_expjpi"], ["python_bitcount", "from_float", "from_int", "from_man_exp", "giant_steps", "lshift", "mpf_abs", "mpf_acos", "mpf_acosh", "mpf_add", "mpf_asin", "mpf_atan", "mpf_atan2", "mpf_ceil", "mpf_cos", "mpf_cos_pi", "mpf_cos_sin", "mpf_cos_sin_pi", "mpf_cosh", "mpf_cosh_sinh", "mpf_div", "mpf_exp", "mpf_fibonacci", "mpf_floor", "mpf_frac", "mpf_hash", "mpf_hypot", "mpf_log", "mpf_log_hypot", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "mpf_nint", "mpf_nthroot", "f", "f", "mpf_pos", "mpf_pow_int", "mpf_rdiv_int", "mpf_shift", "mpf_sign", "mpf_sin", "mpf_sin_pi", "mpf_sinh", "mpf_sqrt", "mpf_sub", "mpf_tan", "mpf_tanh", "_normalize", "_normalize1", "rshift", "to_fixed", "to_float", "to_int", "to_str"]]}, {"name": "mpmath.libmp.libmpf", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libmpf.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.libmp.libmpf", "mpmath.libmp.libmpf"], ["builtins", "builtins"]], "hasfunction": 2, "myfunction": [["_normalize", "_normalize1", "dps_to_prec", "from_Decimal", "from_bstr", "from_float", "from_int", "from_man_exp", "from_npfloat", "from_pickable", "from_rational", "from_str", "gmpy_mpf_mul", "gmpy_mpf_mul_int", "<lambda>", "mpf_abs", "mpf_add", "mpf_ceil", "mpf_cmp", "mpf_div", "mpf_eq", "mpf_floor", "mpf_frac", "mpf_frexp", "mpf_ge", "mpf_gt", "mpf_hash", "mpf_hypot", "mpf_le", "mpf_lt", "mpf_min_max", "mpf_mod", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "mpf_nint", "mpf_perturb", "mpf_pos", "mpf_pow_int", "mpf_rand", "mpf_rdiv_int", "mpf_round_int", "mpf_shift", "mpf_sign", "mpf_sqrt", "mpf_sub", "mpf_sum", "_normalize", "_normalize1", "prec_to_dps", "python_mpf_mul", "python_mpf_mul_int", "repr_dps", "round_int", "str_to_man_exp", "strict_normalize", "strict_normalize1", "to_bstr", "to_digits_exp", "to_fixed", "to_float", "to_int", "to_man_exp", "to_pickable", "to_rational", "to_str"], ["bin_to_radix", "python_bitcount", "giant_steps", "isqrt_python", "isqrt_fast_python", "lshift", "numeral_python", "rshift", "sqrt_fixed", "sqrtrem_python", "python_trailing"]]}, {"name": "mpmath.libmp.libmpi", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\libmp\\libmpi.py", "layer": 2, "hasclass": 2, "myclass": [[], ["mpmath.libmp.libmpf", "builtins"]], "hasfunction": 2, "myfunction": [["MAX", "MIN", "cos_sin_quadrant", "mpci_abs", "mpci_add", "mpci_arg", "mpci_cos", "mpci_div", "mpci_exp", "mpci_factorial", "mpci_gamma", "mpci_log", "mpci_loggamma", "mpci_mul", "mpci_neg", "mpci_pos", "mpci_pow", "mpci_pow_int", "mpci_rgamma", "mpci_sin", "mpci_square", "mpci_sub", "mpi_abs", "mpi_add", "mpi_atan", "mpi_atan2", "mpi_cos", "mpi_cos_sin", "mpi_cosh_sinh", "mpi_cot", "mpi_delta", "mpi_div", "mpi_div_mpf", "mpi_eq", "mpi_exp", "mpi_factorial", "mpi_from_str", "mpi_from_str_a_b", "mpi_gamma", "mpi_ge", "mpi_gt", "mpi_le", "mpi_log", "mpi_loggamma", "mpi_lt", "mpi_mid", "mpi_mul", "mpi_mul_mpf", "mpi_ne", "mpi_neg", "mpi_overlap", "mpi_pi", "mpi_pos", "mpi_pow", "mpi_pow_int", "mpi_rgamma", "mpi_shift", "mpi_sin", "mpi_sqrt", "mpi_square", "mpi_str", "mpi_sub", "mpi_tan", "mpi_to_str"], ["python_bitcount", "dps_to_prec", "from_float", "from_int", "from_man_exp", "from_str", "mod_pi2", "mpc_loggamma", "mpf_abs", "mpf_add", "mpf_atan", "mpf_atan2", "mpf_cmp", "mpf_cos_sin", "mpf_div", "mpf_eq", "mpf_exp", "mpf_floor", "mpf_gamma", "mpf_ge", "mpf_gt", "mpf_le", "mpf_log", "mpf_loggamma", "mpf_lt", "mpf_min_max", "python_mpf_mul", "python_mpf_mul_int", "mpf_neg", "f", "mpf_pos", "mpf_pow_int", "mpf_rgamma", "mpf_shift", "mpf_sign", "mpf_sqrt", "mpf_sub", "prec_to_dps", "repr_dps", "to_int", "to_str"]]}, {"name": "mpmath.math2", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\math2.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_cospi_complex", "_cospi_real", "_digamma_complex", "_digamma_real", "_erf_taylor", "_erfc_asymp", "_erfc_mid", "_gamma_complex", "_gamma_real", "_mathfun", "_mathfun_n", "_mathfun_real", "_polyval", "_sinpi_complex", "_sinpi_real", "acos", "arg", "asin", "atan", "<lambda>", "ceil", "cos", "<lambda>", "cosh", "_cospi_real", "cotpi", "_digamma_real", "e1", "ei", "ei_asymp", "ei_taylor", "erf", "erfc", "exp", "factorial", "floor", "_gamma_real", "log", "loggamma", "nthroot", "pow", "rgamma", "sin", "sinh", "_sinpi_real", "sqrt", "tan", "tanh", "tanpi", "zeta"], []]}, {"name": "mpmath.matrices", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.matrices.calculus", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\calculus.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.matrices.calculus"], ["builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.matrices.eigen", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\eigen.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.matrices.eigen"], ["builtins"]], "hasfunction": 2, "myfunction": [["defun", "eig", "eig_sort", "eig_tr_l", "eig_tr_r", "hessenberg", "hessenberg_qr", "hessenberg_reduce_0", "hessenberg_reduce_1", "qr_step", "schur"], []]}, {"name": "mpmath.matrices.eigen_symmetric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\eigen_symmetric.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["c_he_tridiag_0", "c_he_tridiag_1", "c_he_tridiag_2", "eigh", "eighe", "eigsy", "gauss_quadrature", "r_sy_tridiag", "svd", "svd_c", "svd_c_raw", "svd_r", "svd_r_raw", "tridiag_eigen"], ["defun"]]}, {"name": "mpmath.matrices.linalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\linalg.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.matrices.linalg"], ["builtins"]], "hasfunction": 2, "myfunction": [[], ["copy"]]}, {"name": "mpmath.matrices.matrices", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\matrices\\matrices.py", "layer": 2, "hasclass": 2, "myclass": [["mpmath.matrices.matrices", "mpmath.matrices.matrices"], ["builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "mpmath.rational", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\rational.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.rational"], []], "hasfunction": 2, "myfunction": [["create_reduced"], ["python_bitcount", "from_man_exp", "mpf_hash"]]}, {"name": "mpmath.usertools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\usertools.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["monitor", "timing"], []]}, {"name": "mpmath.visualization", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\mpmath\\visualization.py", "layer": 1, "hasclass": 2, "myclass": [["mpmath.visualization"], ["mpmath.libmp.libhyper", "builtins"]], "hasfunction": 2, "myfunction": [["cplot", "default_color_function", "phase_color_function", "plot", "splot"], ["hls_to_rgb", "hsv_to_rgb"]]}, {"name": "networkx", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["networkx.exception", "networkx.algorithms.tree.branchings", "networkx.classes.digraph", "networkx.algorithms.tree.mst", "networkx.exception", "networkx.classes.graph", "networkx.readwrite.graphml", "networkx.readwrite.graphml", "networkx.exception", "networkx.classes.multidigraph", "networkx.classes.multigraph", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.algorithms.chordal", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.algorithms.tree.coding", "networkx.algorithms.planarity", "networkx.exception", "networkx.algorithms.tree.mst"]], "hasfunction": 2, "myfunction": [[], ["LCF_graph", "LFR_benchmark_graph", "_dispatch", "_lazy_import", "adamic_adar_index", "add_cycle", "add_path", "add_star", "adjacency_data", "adjacency_graph", "adjacency_matrix", "adjacency_spectrum", "algebraic_connectivity", "all_neighbors", "all_node_cuts", "all_pairs_bellman_ford_path", "all_pairs_bellman_ford_path_length", "all_pairs_dijkstra", "all_pairs_dijkstra_path", "all_pairs_dijkstra_path_length", "all_pairs_lowest_common_ancestor", "all_pairs_node_connectivity", "all_pairs_shortest_path", "all_pairs_shortest_path_length", "all_shortest_paths", "all_simple_edge_paths", "all_simple_paths", "all_topological_sorts", "all_triads", "all_triplets", "ancestors", "antichains", "approximate_current_flow_betweenness_centrality", "arf_layout", "articulation_points", "astar_path", "astar_path_length", "attr_matrix", "attr_sparse_matrix", "attracting_components", "attribute_assortativity_coefficient", "attribute_mixing_dict", "attribute_mixing_matrix", "average_clustering", "average_degree_connectivity", "average_neighbor_degree", "average_node_connectivity", "average_shortest_path_length", "balanced_tree", "barabasi_albert_graph", "barbell_graph", "barycenter", "bellman_ford_path", "bellman_ford_path_length", "bellman_ford_predecessor_and_distance", "bethe_hessian_matrix", "bethe_hessian_spectrum", "betweenness_centrality", "betweenness_centrality_subset", "bfs_beam_edges", "bfs_edges", "bfs_layers", "bfs_predecessors", "bfs_successors", "bfs_tree", "biconnected_component_edges", "biconnected_components", "bidirectional_dijkstra", "bidirectional_shortest_path", "gnp_random_graph", "binomial_tree", "bipartite_layout", "boundary_expansion", "bridges", "bull_graph", "capacity_scaling", "cartesian_product", "caveman_graph", "center", "chain_decomposition", "check_planarity", "chordal_cycle_graph", "chordal_graph_cliques", "chordal_graph_treewidth", "chordless_cycles", "chromatic_polynomial", "chvatal_graph", "circulant_graph", "circular_ladder_graph", "circular_layout", "cliques_containing_node", "closeness_centrality", "closeness_vitality", "clustering", "cn_soundarajan_hopcroft", "combinatorial_embedding_to_pos", "common_neighbor_centrality", "common_neighbors", "communicability", "communicability_betweenness_centrality", "communicability_exp", "complement", "complete_bipartite_graph", "complete_graph", "complete_multipartite_graph", "complete_to_chordal_graph", "compose", "compose_all", "compute_v_structures", "condensation", "conductance", "configuration_model", "connected_caveman_graph", "connected_components", "connected_double_edge_swap", "connected_watts_strogatz_graph", "constraint", "contracted_edge", "contracted_nodes", "convert_node_labels_to_integers", "core_number", "corona_product", "cost_of_flow", "could_be_isomorphic", "create_empty_copy", "cubical_graph", "current_flow_betweenness_centrality", "current_flow_betweenness_centrality_subset", "current_flow_closeness_centrality", "cut_size", "cycle_basis", "cycle_graph", "cytoscape_data", "cytoscape_graph", "d_separated", "dag_longest_path", "dag_longest_path_length", "dag_to_branching", "davis_southern_women_graph", "dedensify", "degree", "degree_assortativity_coefficient", "degree_centrality", "degree_histogram", "degree_mixing_dict", "degree_mixing_matrix", "degree_pearson_correlation_coefficient", "degree_sequence_tree", "dense_gnm_random_graph", "density", "desargues_graph", "descendants", "descendants_at_distance", "dfs_edges", "dfs_labeled_edges", "dfs_postorder_nodes", "dfs_predecessors", "dfs_preorder_nodes", "dfs_successors", "dfs_tree", "diameter", "diamond_graph", "difference", "dijkstra_path", "dijkstra_path_length", "dijkstra_predecessor_and_distance", "directed_combinatorial_laplacian_matrix", "directed_configuration_model", "directed_edge_swap", "directed_havel_hakimi_graph", "directed_joint_degree_graph", "directed_laplacian_matrix", "directed_modularity_matrix", "disjoint_union", "disjoint_union_all", "dispersion", "dodecahedral_graph", "dominance_frontiers", "dominating_set", "dorogovtsev_goltsev_mendes_graph", "double_edge_swap", "draw", "draw_circular", "draw_kamada_kawai", "draw_networkx", "draw_networkx_edge_labels", "draw_networkx_edges", "draw_networkx_labels", "draw_networkx_nodes", "draw_planar", "draw_random", "draw_shell", "draw_spectral", "draw_spring", "dual_barabasi_albert_graph", "duplication_divergence_graph", "eccentricity", "edge_betweenness_centrality", "edge_betweenness_centrality_subset", "edge_bfs", "edge_boundary", "edge_connectivity", "edge_current_flow_betweenness_centrality", "edge_current_flow_betweenness_centrality_subset", "edge_dfs", "edge_disjoint_paths", "edge_expansion", "edge_load_centrality", "edge_subgraph", "edges", "effective_size", "efficiency", "ego_graph", "eigenvector_centrality", "eigenvector_centrality_numpy", "empty_graph", "enumerate_all_cliques", "equitable_color", "equivalence_classes", "gnp_random_graph", "estrada_index", "eulerian_circuit", "eulerian_path", "eulerize", "expected_degree_graph", "extended_barabasi_albert_graph", "fast_could_be_isomorphic", "fast_gnp_random_graph", "faster_could_be_isomorphic", "fiedler_vector", "find_asteroidal_triple", "find_cliques", "find_cliques_recursive", "find_cycle", "find_induced_nodes", "find_negative_cycle", "florentine_families_graph", "flow_hierarchy", "floyd_warshall", "floyd_warshall_numpy", "floyd_warshall_predecessor_and_distance", "forest_str", "freeze", "from_dict_of_dicts", "from_dict_of_lists", "from_edgelist", "from_graph6_bytes", "from_nested_tuple", "from_numpy_array", "from_pandas_adjacency", "from_pandas_edgelist", "from_prufer_sequence", "from_scipy_sparse_array", "from_sparse6_bytes", "frucht_graph", "spring_layout", "full_join", "full_rary_tree", "gaussian_random_partition_graph", "general_random_intersection_graph", "generalized_degree", "generate_adjlist", "generate_edgelist", "generate_gexf", "generate_gml", "generate_graphml", "generate_multiline_adjlist", "generate_network_text", "generate_pajek", "generate_random_paths", "geographical_threshold_graph", "geometric_edges", "get_edge_attributes", "get_node_attributes", "global_efficiency", "global_parameters", "global_reaching_centrality", "gn_graph", "gnc_graph", "gnm_random_graph", "gnp_random_graph", "gnr_graph", "goldberg_radzik", "gomory_hu_tree", "google_matrix", "graph_atlas", "graph_atlas_g", "graph_clique_number", "graph_edit_distance", "graph_number_of_cliques", "greedy_color", "grid_2d_graph", "grid_graph", "group_betweenness_centrality", "group_closeness_centrality", "group_degree_centrality", "group_in_degree_centrality", "group_out_degree_centrality", "harmonic_centrality", "has_bridges", "has_eulerian_path", "has_path", "havel_hakimi_graph", "heawood_graph", "hexagonal_lattice_graph", "hits", "hoffman_singleton_graph", "house_graph", "house_x_graph", "hypercube_graph", "icosahedral_graph", "contracted_nodes", "immediate_dominators", "in_degree_centrality", "incidence_matrix", "incremental_closeness_centrality", "induced_subgraph", "current_flow_closeness_centrality", "intersection", "intersection_all", "intersection_array", "interval_graph", "inverse_line_graph", "is_aperiodic", "is_arborescence", "is_at_free", "is_attracting_component", "is_biconnected", "is_bipartite", "is_branching", "is_chordal", "is_connected", "is_digraphical", "is_directed", "is_directed_acyclic_graph", "is_distance_regular", "is_dominating_set", "is_edge_cover", "is_empty", "is_eulerian", "is_forest", "is_frozen", "is_graphical", "is_isolate", "is_isomorphic", "is_k_edge_connected", "is_k_regular", "is_kl_connected", "is_matching", "is_maximal_matching", "is_minimal_d_separator", "is_multigraphical", "is_negatively_weighted", "is_path", "is_perfect_matching", "is_planar", "is_pseudographical", "is_regular", "is_semiconnected", "is_semieulerian", "is_simple_path", "is_strongly_connected", "is_strongly_regular", "is_tree", "is_triad", "is_valid_degree_sequence_erdos_gallai", "is_valid_degree_sequence_havel_hakimi", "is_valid_directed_joint_degree", "is_valid_joint_degree", "is_weakly_connected", "is_weighted", "isolates", "jaccard_coefficient", "johnson", "join", "joint_degree_graph", "junction_tree", "k_components", "k_core", "k_corona", "k_crust", "k_edge_augmentation", "k_edge_components", "k_edge_subgraphs", "k_factor", "k_random_intersection_graph", "k_shell", "k_truss", "kamada_kawai_layout", "karate_club_graph", "katz_centrality", "katz_centrality_numpy", "kl_connected_subgraph", "kosaraju_strongly_connected_components", "krackhardt_kite_graph", "ladder_graph", "laplacian_centrality", "laplacian_matrix", "laplacian_spectrum", "lattice_reference", "les_miserables_graph", "lexicographic_product", "lexicographical_topological_sort", "line_graph", "newman_betweenness_centrality", "local_bridges", "local_constraint", "local_efficiency", "local_reaching_centrality", "lollipop_graph", "lowest_common_ancestor", "make_clique_bipartite", "make_max_clique_graph", "margulis_gabber_galil_graph", "max_flow_min_cost", "max_weight_clique", "max_weight_matching", "maximal_independent_set", "maximal_matching", "maximum_branching", "maximum_flow", "maximum_flow_value", "maximum_spanning_arborescence", "maximum_spanning_edges", "maximum_spanning_tree", "min_cost_flow", "min_cost_flow_cost", "min_edge_cover", "min_weight_matching", "minimal_d_separator", "minimum_branching", "minimum_cut", "minimum_cut_value", "minimum_cycle_basis", "minimum_edge_cut", "minimum_node_cut", "minimum_spanning_arborescence", "minimum_spanning_edges", "minimum_spanning_tree", "mixing_dict", "mixing_expansion", "modularity_matrix", "modularity_spectrum", "moebius_kantor_graph", "moral_graph", "multi_source_dijkstra", "multi_source_dijkstra_path", "multi_source_dijkstra_path_length", "multipartite_layout", "mycielski_graph", "mycielskian", "navigable_small_world_graph", "negative_edge_cycle", "neighbors", "network_simplex", "newman_watts_strogatz_graph", "node_attribute_xy", "node_boundary", "node_clique_number", "node_connected_component", "node_connectivity", "node_degree_xy", "node_disjoint_paths", "node_expansion", "node_link_data", "node_link_graph", "nodes", "nodes_with_selfloops", "non_edges", "non_neighbors", "non_randomness", "nonisomorphic_trees", "normalized_cut_size", "normalized_laplacian_matrix", "normalized_laplacian_spectrum", "null_graph", "number_attracting_components", "number_connected_components", "number_of_cliques", "number_of_edges", "number_of_isolates", "number_of_nodes", "number_of_nonisomorphic_trees", "number_of_selfloops", "number_strongly_connected_components", "number_weakly_connected_components", "numeric_assortativity_coefficient", "octahedral_graph", "omega", "onion_layers", "optimal_edit_paths", "optimize_edit_paths", "optimize_graph_edit_distance", "out_degree_centrality", "overall_reciprocity", "pagerank", "paley_graph", "panther_similarity", "pappus_graph", "parse_adjlist", "parse_edgelist", "parse_gml", "parse_graphml", "parse_leda", "parse_multiline_adjlist", "parse_pajek", "partial_duplication_graph", "partition_spanning_tree", "path_graph", "path_weight", "percolation_centrality", "periphery", "petersen_graph", "planar_layout", "planted_partition_graph", "power", "powerlaw_cluster_graph", "predecessor", "preferential_attachment", "prefix_tree", "prefix_tree_recursive", "projected_graph", "prominent_group", "quotient_graph", "ra_index_soundarajan_hopcroft", "radius", "random_clustered_graph", "random_cograph", "random_degree_sequence_graph", "random_geometric_graph", "random_internet_as_graph", "random_k_out_graph", "random_kernel_graph", "random_layout", "random_lobster", "random_partition_graph", "random_powerlaw_tree", "random_powerlaw_tree_sequence", "random_reference", "random_regular_graph", "random_shell_graph", "random_spanning_tree", "random_tree", "random_triad", "read_adjlist", "read_edgelist", "read_gexf", "read_gml", "read_graph6", "read_graphml", "read_leda", "read_multiline_adjlist", "read_pajek", "read_sparse6", "read_weighted_edgelist", "reciprocity", "reconstruct_path", "recursive_simple_cycles", "relabel_gexf_graph", "relabel_nodes", "relaxed_caveman_graph", "rescale_layout", "rescale_layout_dict", "resistance_distance", "resource_allocation_index", "restricted_view", "reverse", "reverse_view", "rich_club_coefficient", "ring_of_cliques", "rooted_product", "s_metric", "scale_free_graph", "second_order_centrality", "sedgewick_maze_graph", "selfloop_edges", "set_edge_attributes", "set_node_attributes", "shell_layout", "shortest_path", "shortest_path_length", "shortest_simple_paths", "sigma", "simple_cycles", "simrank_similarity", "single_source_bellman_ford", "single_source_bellman_ford_path", "single_source_bellman_ford_path_length", "single_source_dijkstra", "single_source_dijkstra_path", "single_source_dijkstra_path_length", "single_source_shortest_path", "single_source_shortest_path_length", "single_target_shortest_path", "single_target_shortest_path_length", "snap_aggregation", "soft_random_geometric_graph", "spanner", "spectral_bisection", "spectral_graph_forge", "spectral_layout", "spectral_ordering", "spiral_layout", "spring_layout", "square_clustering", "star_graph", "stochastic_block_model", "stochastic_graph", "stoer_wagner", "strong_product", "strongly_connected_components", "strongly_connected_components_recursive", "subgraph", "subgraph_centrality", "subgraph_centrality_exp", "subgraph_view", "sudoku_graph", "symmetric_difference", "tensor_product", "tetrahedral_graph", "thresholded_random_geometric_graph", "to_dict_of_dicts", "to_dict_of_lists", "to_directed", "to_edgelist", "to_graph6_bytes", "to_latex", "to_latex_raw", "to_nested_tuple", "to_networkx_graph", "to_numpy_array", "to_pandas_adjacency", "to_pandas_edgelist", "to_prufer_sequence", "to_scipy_sparse_array", "to_sparse6_bytes", "to_undirected", "topological_generations", "topological_sort", "total_spanning_tree_weight", "transitive_closure", "transitive_closure_dag", "transitive_reduction", "transitivity", "tree_all_pairs_lowest_common_ancestor", "tree_data", "tree_graph", "triad_graph", "triad_type", "triadic_census", "triads_by_type", "triangles", "triangular_lattice_graph", "trivial_graph", "trophic_differences", "trophic_incoherence_parameter", "trophic_levels", "truncated_cube_graph", "truncated_tetrahedron_graph", "turan_graph", "tutte_graph", "tutte_polynomial", "uniform_random_intersection_graph", "union", "union_all", "vf2pp_all_isomorphisms", "vf2pp_is_isomorphic", "vf2pp_isomorphism", "volume", "voronoi_cells", "voterank", "watts_strogatz_graph", "waxman_graph", "weakly_connected_components", "weisfeiler_lehman_graph_hash", "weisfeiler_lehman_subgraph_hashes", "wheel_graph", "wiener_index", "windmill_graph", "within_inter_cluster", "write_adjlist", "write_edgelist", "write_gexf", "write_gml", "write_graph6", "write_graphml_lxml", "write_graphml_lxml", "write_graphml_xml", "write_latex", "write_multiline_adjlist", "write_network_text", "write_pajek", "write_sparse6", "write_weighted_edgelist"]]}, {"name": "networkx.readwrite.json_graph.adjacency", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\json_graph\\adjacency.py", "layer": 1, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["adjacency_data", "adjacency_graph"], []]}, {"name": "networkx.readwrite.adjlist", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\adjlist.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["generate_adjlist", "parse_adjlist", "read_adjlist", "write_adjlist"], ["open_file"]]}, {"name": "networkx.linalg.algebraicconnectivity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\algebraicconnectivity.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.linalg.algebraicconnectivity", "networkx.linalg.algebraicconnectivity"], ["functools"]], "hasfunction": 2, "myfunction": [["_get_fiedler_func", "_preprocess_graph", "_rcm_estimate", "_tracemin_fiedler", "algebraic_connectivity", "fiedler_vector", "spectral_bisection", "spectral_ordering"], ["not_implemented_for", "np_random_state", "reverse_cuthill_mckee_ordering"]]}, {"name": "networkx.algorithms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.algorithms.tree.branchings", "networkx.algorithms.tree.mst", "networkx.algorithms.chordal", "networkx.algorithms.tree.coding", "networkx.algorithms.planarity", "networkx.algorithms.tree.mst"]], "hasfunction": 2, "myfunction": [[], ["adamic_adar_index", "all_node_cuts", "all_pairs_bellman_ford_path", "all_pairs_bellman_ford_path_length", "all_pairs_dijkstra", "all_pairs_dijkstra_path", "all_pairs_dijkstra_path_length", "all_pairs_lowest_common_ancestor", "all_pairs_node_connectivity", "all_pairs_shortest_path", "all_pairs_shortest_path_length", "all_shortest_paths", "all_simple_edge_paths", "all_simple_paths", "all_topological_sorts", "all_triads", "all_triplets", "ancestors", "antichains", "approximate_current_flow_betweenness_centrality", "articulation_points", "astar_path", "astar_path_length", "attracting_components", "attribute_assortativity_coefficient", "attribute_mixing_dict", "attribute_mixing_matrix", "average_clustering", "average_degree_connectivity", "average_neighbor_degree", "average_node_connectivity", "average_shortest_path_length", "barycenter", "bellman_ford_path", "bellman_ford_path_length", "bellman_ford_predecessor_and_distance", "betweenness_centrality", "betweenness_centrality_subset", "bfs_beam_edges", "bfs_edges", "bfs_layers", "bfs_predecessors", "bfs_successors", "bfs_tree", "biconnected_component_edges", "biconnected_components", "bidirectional_dijkstra", "bidirectional_shortest_path", "boundary_expansion", "bridges", "capacity_scaling", "cartesian_product", "center", "chain_decomposition", "check_planarity", "chordal_graph_cliques", "chordal_graph_treewidth", "chordless_cycles", "chromatic_polynomial", "cliques_containing_node", "closeness_centrality", "closeness_vitality", "clustering", "cn_soundarajan_hopcroft", "combinatorial_embedding_to_pos", "common_neighbor_centrality", "communicability", "communicability_betweenness_centrality", "communicability_exp", "complement", "complete_bipartite_graph", "complete_to_chordal_graph", "compose", "compose_all", "compute_v_structures", "condensation", "conductance", "connected_components", "connected_double_edge_swap", "constraint", "contracted_edge", "contracted_nodes", "core_number", "corona_product", "cost_of_flow", "could_be_isomorphic", "current_flow_betweenness_centrality", "current_flow_betweenness_centrality_subset", "current_flow_closeness_centrality", "cut_size", "cycle_basis", "d_separated", "dag_longest_path", "dag_longest_path_length", "dag_to_branching", "dedensify", "degree_assortativity_coefficient", "degree_centrality", "degree_mixing_dict", "degree_mixing_matrix", "degree_pearson_correlation_coefficient", "descendants", "descendants_at_distance", "dfs_edges", "dfs_labeled_edges", "dfs_postorder_nodes", "dfs_predecessors", "dfs_preorder_nodes", "dfs_successors", "dfs_tree", "diameter", "difference", "dijkstra_path", "dijkstra_path_length", "dijkstra_predecessor_and_distance", "directed_edge_swap", "disjoint_union", "disjoint_union_all", "dispersion", "dominance_frontiers", "dominating_set", "double_edge_swap", "eccentricity", "edge_betweenness_centrality", "edge_betweenness_centrality_subset", "edge_bfs", "edge_boundary", "edge_connectivity", "edge_current_flow_betweenness_centrality", "edge_current_flow_betweenness_centrality_subset", "edge_dfs", "edge_disjoint_paths", "edge_expansion", "edge_load_centrality", "effective_size", "efficiency", "eigenvector_centrality", "eigenvector_centrality_numpy", "enumerate_all_cliques", "equitable_color", "equivalence_classes", "estrada_index", "eulerian_circuit", "eulerian_path", "eulerize", "fast_could_be_isomorphic", "faster_could_be_isomorphic", "find_asteroidal_triple", "find_cliques", "find_cliques_recursive", "find_cycle", "find_induced_nodes", "find_negative_cycle", "flow_hierarchy", "floyd_warshall", "floyd_warshall_numpy", "floyd_warshall_predecessor_and_distance", "from_nested_tuple", "from_prufer_sequence", "full_join", "generalized_degree", "generate_random_paths", "global_efficiency", "global_parameters", "global_reaching_centrality", "goldberg_radzik", "gomory_hu_tree", "google_matrix", "graph_clique_number", "graph_edit_distance", "graph_number_of_cliques", "greedy_color", "group_betweenness_centrality", "group_closeness_centrality", "group_degree_centrality", "group_in_degree_centrality", "group_out_degree_centrality", "harmonic_centrality", "has_bridges", "has_eulerian_path", "has_path", "hits", "contracted_nodes", "immediate_dominators", "in_degree_centrality", "incremental_closeness_centrality", "current_flow_closeness_centrality", "intersection", "intersection_all", "intersection_array", "is_aperiodic", "is_arborescence", "is_at_free", "is_attracting_component", "is_biconnected", "is_bipartite", "is_branching", "is_chordal", "is_connected", "is_digraphical", "is_directed_acyclic_graph", "is_distance_regular", "is_dominating_set", "is_edge_cover", "is_eulerian", "is_forest", "is_graphical", "is_isolate", "is_isomorphic", "is_k_edge_connected", "is_k_regular", "is_kl_connected", "is_matching", "is_maximal_matching", "is_minimal_d_separator", "is_multigraphical", "is_perfect_matching", "is_planar", "is_pseudographical", "is_regular", "is_semiconnected", "is_semieulerian", "is_simple_path", "is_strongly_connected", "is_strongly_regular", "is_tree", "is_triad", "is_valid_degree_sequence_erdos_gallai", "is_valid_degree_sequence_havel_hakimi", "is_weakly_connected", "isolates", "jaccard_coefficient", "johnson", "join", "junction_tree", "k_components", "k_core", "k_corona", "k_crust", "k_edge_augmentation", "k_edge_components", "k_edge_subgraphs", "k_factor", "k_shell", "k_truss", "katz_centrality", "katz_centrality_numpy", "kl_connected_subgraph", "kosaraju_strongly_connected_components", "laplacian_centrality", "lattice_reference", "lexicographic_product", "lexicographical_topological_sort", "newman_betweenness_centrality", "local_bridges", "local_constraint", "local_efficiency", "local_reaching_centrality", "lowest_common_ancestor", "make_clique_bipartite", "make_max_clique_graph", "max_flow_min_cost", "max_weight_clique", "max_weight_matching", "maximal_independent_set", "maximal_matching", "maximum_branching", "maximum_flow", "maximum_flow_value", "maximum_spanning_arborescence", "maximum_spanning_edges", "maximum_spanning_tree", "min_cost_flow", "min_cost_flow_cost", "min_edge_cover", "min_weight_matching", "minimal_d_separator", "minimum_branching", "minimum_cut", "minimum_cut_value", "minimum_cycle_basis", "minimum_edge_cut", "minimum_node_cut", "minimum_spanning_arborescence", "minimum_spanning_edges", "minimum_spanning_tree", "mixing_dict", "mixing_expansion", "moral_graph", "multi_source_dijkstra", "multi_source_dijkstra_path", "multi_source_dijkstra_path_length", "negative_edge_cycle", "network_simplex", "node_attribute_xy", "node_boundary", "node_clique_number", "node_connected_component", "node_connectivity", "node_degree_xy", "node_disjoint_paths", "node_expansion", "non_randomness", "normalized_cut_size", "number_attracting_components", "number_connected_components", "number_of_cliques", "number_of_isolates", "number_strongly_connected_components", "number_weakly_connected_components", "numeric_assortativity_coefficient", "omega", "onion_layers", "optimal_edit_paths", "optimize_edit_paths", "optimize_graph_edit_distance", "out_degree_centrality", "overall_reciprocity", "pagerank", "panther_similarity", "partition_spanning_tree", "percolation_centrality", "periphery", "power", "predecessor", "preferential_attachment", "projected_graph", "prominent_group", "quotient_graph", "ra_index_soundarajan_hopcroft", "radius", "random_reference", "random_spanning_tree", "random_triad", "reciprocity", "reconstruct_path", "recursive_simple_cycles", "resistance_distance", "resource_allocation_index", "reverse", "rich_club_coefficient", "rooted_product", "s_metric", "second_order_centrality", "shortest_path", "shortest_path_length", "shortest_simple_paths", "sigma", "simple_cycles", "simrank_similarity", "single_source_bellman_ford", "single_source_bellman_ford_path", "single_source_bellman_ford_path_length", "single_source_dijkstra", "single_source_dijkstra_path", "single_source_dijkstra_path_length", "single_source_shortest_path", "single_source_shortest_path_length", "single_target_shortest_path", "single_target_shortest_path_length", "snap_aggregation", "spanner", "square_clustering", "stoer_wagner", "strong_product", "strongly_connected_components", "strongly_connected_components_recursive", "subgraph_centrality", "subgraph_centrality_exp", "symmetric_difference", "tensor_product", "to_nested_tuple", "to_prufer_sequence", "topological_generations", "topological_sort", "transitive_closure", "transitive_closure_dag", "transitive_reduction", "transitivity", "tree_all_pairs_lowest_common_ancestor", "triad_type", "triadic_census", "triads_by_type", "triangles", "trophic_differences", "trophic_incoherence_parameter", "trophic_levels", "tutte_polynomial", "union", "union_all", "vf2pp_all_isomorphisms", "vf2pp_is_isomorphic", "vf2pp_isomorphism", "volume", "voronoi_cells", "voterank", "weakly_connected_components", "weisfeiler_lehman_graph_hash", "weisfeiler_lehman_subgraph_hashes", "wiener_index", "within_inter_cluster"]]}, {"name": "networkx.algorithms.operators.all", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\operators\\all.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "itertools"]], "hasfunction": 2, "myfunction": [["compose_all", "disjoint_union_all", "intersection_all", "union_all"], []]}, {"name": "networkx.algorithms.approximation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["all_pairs_node_connectivity", "asadpour_atsp", "average_clustering", "christofides", "clique_removal", "diameter", "greedy_tsp", "k_components", "large_clique_size", "local_node_connectivity", "max_clique", "maximum_independent_set", "metric_closure", "min_edge_dominating_set", "min_maximal_matching", "min_weighted_dominating_set", "min_weighted_vertex_cover", "node_connectivity", "one_exchange", "ramsey_R2", "randomized_partitioning", "simulated_annealing_tsp", "steiner_tree", "threshold_accepting_tsp", "traveling_salesman_problem", "treewidth_min_degree", "treewidth_min_fill_in"]]}, {"name": "networkx.algorithms.approximation.clique", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\clique.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["clique_removal", "large_clique_size", "max_clique", "maximum_independent_set"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.approximation.clustering_coefficient", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\clustering_coefficient.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["average_clustering"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.approximation.connectivity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\connectivity.py", "layer": 3, "hasclass": 2, "myclass": [[], ["operator"]], "hasfunction": 2, "myfunction": [["_bidirectional_pred_succ", "_bidirectional_shortest_path", "all_pairs_node_connectivity", "local_node_connectivity", "node_connectivity"], []]}, {"name": "networkx.algorithms.approximation.distance_measures", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\distance_measures.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_two_sweep_directed", "_two_sweep_undirected", "diameter"], ["py_random_state"]]}, {"name": "networkx.algorithms.approximation.dominating_set", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\dominating_set.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["min_edge_dominating_set", "min_weighted_dominating_set"], ["maximal_matching", "not_implemented_for"]]}, {"name": "networkx.algorithms.approximation.kcomponents", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\kcomponents.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.approximation.kcomponents"], ["collections.abc", "networkx.exception", "functools", "collections"]], "hasfunction": 2, "myfunction": [["_cliques_heuristic", "_same", "k_components"], ["local_node_connectivity", "not_implemented_for"]]}, {"name": "networkx.algorithms.approximation.matching", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\matching.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["min_maximal_matching"], []]}, {"name": "networkx.algorithms.approximation.maxcut", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\maxcut.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_swap_node_partition", "one_exchange", "randomized_partitioning"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.approximation.ramsey", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\ramsey.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["ramsey_R2"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.approximation.steinertree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\steinertree.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_kou_steiner_tree", "_mehlhorn_steiner_tree", "_remove_nonterminal_leaves", "metric_closure", "steiner_tree"], ["not_implemented_for", "pairwise"]]}, {"name": "networkx.algorithms.approximation.traveling_salesman", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\traveling_salesman.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_shortcutting", "asadpour_atsp", "christofides", "greedy_tsp", "held_karp_ascent", "move_one_node", "simulated_annealing_tsp", "spanning_tree_distribution", "swap_two_nodes", "threshold_accepting_tsp", "traveling_salesman_problem"], ["not_implemented_for", "pairwise", "py_random_state", "random_spanning_tree"]]}, {"name": "networkx.algorithms.approximation.treewidth", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\treewidth.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.approximation.treewidth"], []], "hasfunction": 2, "myfunction": [["min_fill_in_heuristic", "treewidth_decomp", "treewidth_min_degree", "treewidth_min_fill_in"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.approximation.vertex_cover", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\approximation\\vertex_cover.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["min_weighted_vertex_cover"], []]}, {"name": "networkx.algorithms.assortativity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["attribute_assortativity_coefficient", "attribute_mixing_dict", "attribute_mixing_matrix", "average_degree_connectivity", "average_neighbor_degree", "degree_assortativity_coefficient", "degree_mixing_dict", "degree_mixing_matrix", "degree_pearson_correlation_coefficient", "mixing_dict", "node_attribute_xy", "node_degree_xy", "numeric_assortativity_coefficient"]]}, {"name": "networkx.algorithms.assortativity.connectivity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\connectivity.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["average_degree_connectivity"], []]}, {"name": "networkx.algorithms.assortativity.correlation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\correlation.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_numeric_ac", "attribute_ac", "attribute_assortativity_coefficient", "degree_assortativity_coefficient", "degree_pearson_correlation_coefficient", "numeric_assortativity_coefficient"], ["attribute_mixing_matrix", "degree_mixing_matrix", "node_degree_xy"]]}, {"name": "networkx.algorithms.assortativity.mixing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\mixing.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["attribute_mixing_dict", "attribute_mixing_matrix", "degree_mixing_dict", "degree_mixing_matrix", "mixing_dict"], ["dict_to_numpy_array", "node_attribute_xy", "node_degree_xy"]]}, {"name": "networkx.algorithms.assortativity.neighbor_degree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\neighbor_degree.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["average_neighbor_degree"], []]}, {"name": "networkx.algorithms.assortativity.pairs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\assortativity\\pairs.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["node_attribute_xy", "node_degree_xy"], []]}, {"name": "networkx.algorithms.shortest_paths.astar", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\astar.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["astar_path", "astar_path_length"], ["_weight_function"]]}, {"name": "networkx.algorithms.asteroidal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\asteroidal.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["create_component_structure", "find_asteroidal_triple", "is_at_free"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.components.attracting", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\attracting.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["attracting_components", "is_attracting_component", "number_attracting_components"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.traversal.beamsearch", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\beamsearch.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["bfs_beam_edges"], ["generic_bfs_edges"]]}, {"name": "networkx.algorithms.centrality.betweenness", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\betweenness.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "collections"]], "hasfunction": 2, "myfunction": [["_accumulate_basic", "_accumulate_edges", "_accumulate_endpoints", "_add_edge_keys", "_rescale", "_rescale_e", "_single_source_dijkstra_path_basic", "_single_source_shortest_path_basic", "betweenness_centrality", "edge_betweenness_centrality"], ["_weight_function", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.centrality.betweenness_subset", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\betweenness_subset.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_accumulate_edges_subset", "_accumulate_subset", "_rescale", "_rescale_e", "betweenness_centrality_subset", "edge_betweenness_centrality_subset"], ["_add_edge_keys", "_single_source_dijkstra_path_basic", "_single_source_shortest_path_basic"]]}, {"name": "networkx.algorithms.components.biconnected", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\biconnected.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_biconnected_dfs", "articulation_points", "biconnected_component_edges", "biconnected_components", "is_biconnected"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.operators.binary", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\operators\\binary.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["compose", "difference", "disjoint_union", "full_join", "intersection", "symmetric_difference", "union"], []]}, {"name": "networkx.algorithms.bipartite", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["alternating_havel_hakimi_graph", "average_clustering", "betweenness_centrality", "biadjacency_matrix", "closeness_centrality", "latapy_clustering", "collaboration_weighted_projected_graph", "color", "complete_bipartite_graph", "configuration_model", "degree_centrality", "degrees", "density", "eppstein_matching", "from_biadjacency_matrix", "generate_edgelist", "generic_weighted_projected_graph", "gnmk_random_graph", "havel_hakimi_graph", "hopcroft_karp_matching", "is_bipartite", "is_bipartite_node_set", "latapy_clustering", "hopcroft_karp_matching", "min_edge_cover", "minimum_weight_full_matching", "node_redundancy", "overlap_weighted_projected_graph", "parse_edgelist", "preferential_attachment_graph", "projected_graph", "random_graph", "read_edgelist", "reverse_havel_hakimi_graph", "robins_alexander_clustering", "sets", "spectral_bipartivity", "to_vertex_cover", "weighted_projected_graph", "write_edgelist"]]}, {"name": "networkx.algorithms.bipartite.basic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\basic.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["color", "degrees", "density", "is_bipartite", "is_bipartite_node_set", "sets"], ["connected_components"]]}, {"name": "networkx.algorithms.bipartite.centrality", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\centrality.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["betweenness_centrality", "closeness_centrality", "degree_centrality"], []]}, {"name": "networkx.algorithms.bipartite.cluster", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\cluster.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_four_cycles", "_threepaths", "average_clustering", "cc_dot", "cc_max", "cc_min", "latapy_clustering", "latapy_clustering", "robins_alexander_clustering"], []]}, {"name": "networkx.algorithms.bipartite.covering", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\covering.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["min_edge_cover"], ["min_edge_cover", "hopcroft_karp_matching", "not_implemented_for"]]}, {"name": "networkx.algorithms.bipartite.edgelist", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\edgelist.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["generate_edgelist", "parse_edgelist", "read_edgelist", "write_edgelist"], ["not_implemented_for", "open_file"]]}, {"name": "networkx.algorithms.bipartite.generators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\generators.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_add_nodes_with_bipartite_label", "alternating_havel_hakimi_graph", "complete_bipartite_graph", "configuration_model", "gnmk_random_graph", "havel_hakimi_graph", "preferential_attachment_graph", "random_graph", "reverse_havel_hakimi_graph"], ["nodes_or_number", "py_random_state"]]}, {"name": "networkx.algorithms.bipartite.matching", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\matching.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_connected_by_alternating_paths", "_is_connected_by_alternating_path", "eppstein_matching", "hopcroft_karp_matching", "hopcroft_karp_matching", "minimum_weight_full_matching", "to_vertex_cover"], ["biadjacency_matrix", "sets"]]}, {"name": "networkx.algorithms.bipartite.matrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\matrix.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["biadjacency_matrix", "from_biadjacency_matrix"], ["_generate_weighted_edges"]]}, {"name": "networkx.algorithms.bipartite.projection", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\projection.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["collaboration_weighted_projected_graph", "generic_weighted_projected_graph", "overlap_weighted_projected_graph", "projected_graph", "weighted_projected_graph"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.bipartite.redundancy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\redundancy.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception", "itertools"]], "hasfunction": 2, "myfunction": [["_node_redundancy", "node_redundancy"], []]}, {"name": "networkx.algorithms.bipartite.spectral", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\bipartite\\spectral.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["spectral_bipartivity"], []]}, {"name": "networkx.algorithms.boundary", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\boundary.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["edge_boundary", "node_boundary"], []]}, {"name": "networkx.algorithms.traversal.breadth_first_search", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\breadth_first_search.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["bfs_edges", "bfs_layers", "bfs_predecessors", "bfs_successors", "bfs_tree", "descendants_at_distance", "generic_bfs_edges"], []]}, {"name": "networkx.algorithms.centrality", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["approximate_current_flow_betweenness_centrality", "betweenness_centrality", "betweenness_centrality_subset", "closeness_centrality", "communicability_betweenness_centrality", "current_flow_betweenness_centrality", "current_flow_betweenness_centrality_subset", "current_flow_closeness_centrality", "degree_centrality", "dispersion", "edge_betweenness_centrality", "edge_betweenness_centrality_subset", "edge_current_flow_betweenness_centrality", "edge_current_flow_betweenness_centrality_subset", "edge_load_centrality", "eigenvector_centrality", "eigenvector_centrality_numpy", "estrada_index", "global_reaching_centrality", "group_betweenness_centrality", "group_closeness_centrality", "group_degree_centrality", "group_in_degree_centrality", "group_out_degree_centrality", "harmonic_centrality", "in_degree_centrality", "incremental_closeness_centrality", "current_flow_closeness_centrality", "katz_centrality", "katz_centrality_numpy", "laplacian_centrality", "newman_betweenness_centrality", "local_reaching_centrality", "out_degree_centrality", "percolation_centrality", "prominent_group", "second_order_centrality", "subgraph_centrality", "subgraph_centrality_exp", "trophic_differences", "trophic_incoherence_parameter", "trophic_levels", "voterank"]]}, {"name": "networkx.algorithms.centrality.closeness", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\closeness.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["closeness_centrality", "incremental_closeness_centrality"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.current_flow_betweenness", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\current_flow_betweenness.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix"]], "hasfunction": 2, "myfunction": [["approximate_current_flow_betweenness_centrality", "current_flow_betweenness_centrality", "edge_current_flow_betweenness_centrality"], ["flow_matrix_row", "not_implemented_for", "py_random_state", "reverse_cuthill_mckee_ordering"]]}, {"name": "networkx.algorithms.centrality.current_flow_betweenness_subset", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\current_flow_betweenness_subset.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["current_flow_betweenness_centrality_subset", "edge_current_flow_betweenness_centrality_subset"], ["flow_matrix_row", "not_implemented_for", "reverse_cuthill_mckee_ordering"]]}, {"name": "networkx.algorithms.centrality.current_flow_closeness", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\current_flow_closeness.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix"]], "hasfunction": 2, "myfunction": [["current_flow_closeness_centrality", "current_flow_closeness_centrality"], ["not_implemented_for", "reverse_cuthill_mckee_ordering"]]}, {"name": "networkx.algorithms.centrality.degree_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\degree_alg.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["degree_centrality", "in_degree_centrality", "out_degree_centrality"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.eigenvector", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\eigenvector.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["eigenvector_centrality", "eigenvector_centrality_numpy"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.flow_matrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\flow_matrix.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix", "networkx.algorithms.centrality.flow_matrix"], []], "hasfunction": 2, "myfunction": [["flow_matrix_row"], []]}, {"name": "networkx.algorithms.centrality.group", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\group.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_dfbnb", "_group_preprocessing", "_heuristic", "group_betweenness_centrality", "group_closeness_centrality", "group_degree_centrality", "group_in_degree_centrality", "group_out_degree_centrality", "prominent_group"], ["_accumulate_endpoints", "_single_source_dijkstra_path_basic", "_single_source_shortest_path_basic", "deepcopy", "not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.harmonic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\harmonic.py", "layer": 3, "hasclass": 2, "myclass": [[], ["functools"]], "hasfunction": 2, "myfunction": [["harmonic_centrality"], []]}, {"name": "networkx.algorithms.centrality.katz", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\katz.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["katz_centrality", "katz_centrality_numpy"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.laplacian", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\laplacian.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["laplacian_centrality"], []]}, {"name": "networkx.algorithms.centrality.load", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\load.py", "layer": 3, "hasclass": 2, "myclass": [[], ["operator"]], "hasfunction": 2, "myfunction": [["_edge_betweenness", "_node_betweenness", "edge_load_centrality", "newman_betweenness_centrality", "newman_betweenness_centrality"], []]}, {"name": "networkx.algorithms.centrality.percolation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\percolation.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_accumulate_percolation", "percolation_centrality"], ["_single_source_dijkstra_path_basic", "_single_source_shortest_path_basic"]]}, {"name": "networkx.algorithms.centrality.reaching", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\reaching.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_average_weight", "global_reaching_centrality", "local_reaching_centrality"], ["pairwise"]]}, {"name": "networkx.algorithms.centrality.second_order", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\second_order.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["second_order_centrality"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.subgraph_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\subgraph_alg.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["communicability_betweenness_centrality", "estrada_index", "subgraph_centrality", "subgraph_centrality_exp"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.trophic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\trophic.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["trophic_differences", "trophic_incoherence_parameter", "trophic_levels"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.centrality.voterank_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\centrality\\voterank_alg.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["voterank"], []]}, {"name": "networkx.algorithms.chains", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\chains.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["chain_decomposition"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.chordal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\chordal.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.algorithms.chordal"], []], "hasfunction": 2, "myfunction": [["_find_chordality_breaker", "_find_missing_edge", "_is_complete_graph", "_max_cardinality_node", "chordal_graph_cliques", "chordal_graph_treewidth", "complete_to_chordal_graph", "find_induced_nodes", "is_chordal"], ["arbitrary_element", "connected_components", "not_implemented_for"]]}, {"name": "networkx.algorithms.clique", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\clique.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.algorithms.clique"], ["itertools", "itertools", "collections", "collections", "itertools"]], "hasfunction": 2, "myfunction": [["cliques_containing_node", "enumerate_all_cliques", "find_cliques", "find_cliques_recursive", "graph_clique_number", "graph_number_of_cliques", "make_clique_bipartite", "make_max_clique_graph", "max_weight_clique", "node_clique_number", "number_of_cliques"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.cluster", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\cluster.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_directed_triangles_and_degree_iter", "_directed_weighted_triangles_and_degree_iter", "_triangles_and_degree_iter", "_weighted_triangles_and_degree_iter", "average_clustering", "clustering", "generalized_degree", "square_clustering", "transitivity", "triangles"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.coloring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\coloring\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["equitable_color", "greedy_color", "strategy_connected_sequential", "strategy_connected_sequential_bfs", "strategy_connected_sequential_dfs", "strategy_independent_set", "strategy_largest_first", "strategy_random_sequential", "strategy_saturation_largest_first", "strategy_smallest_last"]]}, {"name": "networkx.algorithms.coloring.equitable_coloring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\coloring\\equitable_coloring.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["change_color", "equitable_color", "is_coloring", "is_equitable", "make_C_from_F", "make_H_from_C_N", "make_N_from_L_C", "move_witnesses", "pad_graph", "procedure_P"], []]}, {"name": "networkx.algorithms.coloring.greedy_coloring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\coloring\\greedy_coloring.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.coloring.greedy_coloring", "networkx.algorithms.coloring.greedy_coloring"], ["collections", "collections"]], "hasfunction": 2, "myfunction": [["_greedy_coloring_with_interchange", "_maximal_independent_set", "greedy_color", "strategy_connected_sequential", "strategy_connected_sequential_bfs", "strategy_connected_sequential_dfs", "strategy_independent_set", "strategy_largest_first", "strategy_random_sequential", "strategy_saturation_largest_first", "strategy_smallest_last"], ["arbitrary_element", "py_random_state"]]}, {"name": "networkx.algorithms.communicability_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\communicability_alg.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["communicability", "communicability_exp"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.community", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["asyn_fluidc", "asyn_lpa_communities", "girvan_newman", "greedy_modularity_communities", "is_partition", "k_clique_communities", "kernighan_lin_bisection", "label_propagation_communities", "louvain_communities", "louvain_partitions", "lukes_partitioning", "modularity", "naive_greedy_modularity_communities", "partition_quality"]]}, {"name": "networkx.algorithms.community.asyn_fluid", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\asyn_fluid.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections", "networkx.exception"]], "hasfunction": 2, "myfunction": [["asyn_fluidc"], ["groups", "is_connected", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.community.centrality", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\centrality.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_without_most_central_edges", "girvan_newman"], []]}, {"name": "networkx.algorithms.community.community_utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\community_utils.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_partition"], []]}, {"name": "networkx.algorithms.community.kclique", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\kclique.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["_get_adjacent_cliques", "k_clique_communities"], []]}, {"name": "networkx.algorithms.community.kernighan_lin", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\kernighan_lin.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.utils.heaps", "itertools"]], "hasfunction": 2, "myfunction": [["_kernighan_lin_sweep", "kernighan_lin_bisection"], ["is_partition", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.community.label_propagation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\label_propagation.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections", "collections"]], "hasfunction": 2, "myfunction": [["_color_network", "_labeling_complete", "_most_frequent_labels", "_update_label", "asyn_lpa_communities", "label_propagation_communities"], ["groups", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.community.louvain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\louvain.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections", "collections"]], "hasfunction": 2, "myfunction": [["_convert_multigraph", "_gen_graph", "_neighbor_weights", "_one_level", "louvain_communities", "louvain_partitions"], ["modularity", "py_random_state"]]}, {"name": "networkx.algorithms.community.lukes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\lukes.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_split_n_from", "lukes_partitioning"], ["deepcopy", "lru_cache", "not_implemented_for"]]}, {"name": "networkx.algorithms.community.modularity_max", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\modularity_max.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.utils.mapped_queue", "collections"]], "hasfunction": 2, "myfunction": [["_greedy_modularity_communities_generator", "greedy_modularity_communities", "naive_greedy_modularity_communities"], ["modularity", "not_implemented_for"]]}, {"name": "networkx.algorithms.community.quality", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\community\\quality.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.community.quality"], ["networkx.exception", "networkx.utils.decorators", "itertools"]], "hasfunction": 2, "myfunction": [["_require_partition", "inter_community_edges", "inter_community_non_edges", "intra_community_edges", "modularity", "partition_quality"], ["is_partition", "not_implemented_for"]]}, {"name": "networkx.algorithms.components", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["articulation_points", "attracting_components", "biconnected_component_edges", "biconnected_components", "condensation", "connected_components", "is_attracting_component", "is_biconnected", "is_connected", "is_semiconnected", "is_strongly_connected", "is_weakly_connected", "kosaraju_strongly_connected_components", "node_connected_component", "number_attracting_components", "number_connected_components", "number_strongly_connected_components", "number_weakly_connected_components", "strongly_connected_components", "strongly_connected_components_recursive", "weakly_connected_components"]]}, {"name": "networkx.algorithms.components.connected", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\connected.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_plain_bfs", "connected_components", "is_connected", "node_connected_component", "number_connected_components"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.components.semiconnected", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\semiconnected.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_semiconnected"], ["not_implemented_for", "pairwise"]]}, {"name": "networkx.algorithms.components.strongly_connected", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\strongly_connected.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["condensation", "is_strongly_connected", "kosaraju_strongly_connected_components", "number_strongly_connected_components", "strongly_connected_components", "strongly_connected_components_recursive"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.components.weakly_connected", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\components\\weakly_connected.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_plain_bfs", "is_weakly_connected", "number_weakly_connected_components", "weakly_connected_components"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.connectivity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.algorithms.connectivity.edge_kcomponents"]], "hasfunction": 2, "myfunction": [[], ["all_node_cuts", "all_pairs_node_connectivity", "average_node_connectivity", "bridge_components", "build_auxiliary_edge_connectivity", "build_auxiliary_node_connectivity", "edge_connectivity", "edge_disjoint_paths", "is_k_edge_connected", "is_locally_k_edge_connected", "k_components", "k_edge_augmentation", "k_edge_components", "k_edge_subgraphs", "local_edge_connectivity", "local_node_connectivity", "minimum_edge_cut", "minimum_node_cut", "minimum_st_edge_cut", "minimum_st_node_cut", "node_connectivity", "node_disjoint_paths", "stoer_wagner"]]}, {"name": "networkx.algorithms.connectivity.connectivity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\connectivity.py", "layer": 3, "hasclass": 2, "myclass": [[], ["operator"]], "hasfunction": 2, "myfunction": [["all_pairs_node_connectivity", "average_node_connectivity", "edge_connectivity", "local_edge_connectivity", "local_node_connectivity", "node_connectivity"], ["boykov_kolmogorov", "build_auxiliary_edge_connectivity", "build_auxiliary_node_connectivity", "build_residual_network", "edmonds_karp", "dinitz", "edmonds_karp", "shortest_augmenting_path"]]}, {"name": "networkx.algorithms.connectivity.cuts", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\cuts.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["minimum_edge_cut", "minimum_node_cut", "minimum_st_edge_cut", "minimum_st_node_cut"], ["build_auxiliary_edge_connectivity", "build_auxiliary_node_connectivity", "build_residual_network", "edmonds_karp", "edmonds_karp"]]}, {"name": "networkx.algorithms.connectivity.disjoint_paths", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\disjoint_paths.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception", "itertools"]], "hasfunction": 2, "myfunction": [["_unique_everseen", "edge_disjoint_paths", "node_disjoint_paths"], ["build_auxiliary_edge_connectivity", "build_auxiliary_node_connectivity", "edmonds_karp", "edmonds_karp", "preflow_push", "shortest_augmenting_path"]]}, {"name": "networkx.algorithms.connectivity.edge_augmentation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\edge_augmentation.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.connectivity.edge_augmentation"], ["collections"]], "hasfunction": 2, "myfunction": [["_compat_shuffle", "_lightest_meta_edges", "_minimum_rooted_branching", "_ordered", "_unpack_available_edges", "bridge_augmentation", "collapse", "complement_edges", "greedy_k_edge_augmentation", "is_k_edge_connected", "is_locally_k_edge_connected", "k_edge_augmentation", "one_edge_augmentation", "partial_k_edge_augmentation", "unconstrained_bridge_augmentation", "unconstrained_one_edge_augmentation", "weighted_bridge_augmentation", "weighted_one_edge_augmentation"], ["namedtuple", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.connectivity.edge_kcomponents", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\edge_kcomponents.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.connectivity.edge_kcomponents"], ["functools"]], "hasfunction": 2, "myfunction": [["_high_degree_components", "_k_edge_subgraphs_nodes", "_low_degree_nodes", "bridge_components", "general_k_edge_subgraphs", "k_edge_components", "k_edge_subgraphs"], ["arbitrary_element", "bridges", "not_implemented_for"]]}, {"name": "networkx.algorithms.connectivity.kcomponents", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\kcomponents.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools", "collections", "operator"]], "hasfunction": 2, "myfunction": [["_consolidate", "_generate_partition", "_reconstruct_k_components", "build_k_number_dict", "k_components"], ["edmonds_karp", "edmonds_karp", "not_implemented_for"]]}, {"name": "networkx.algorithms.connectivity.kcutsets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\kcutsets.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools", "collections", "operator"]], "hasfunction": 2, "myfunction": [["_is_separating_set", "all_node_cuts"], ["build_auxiliary_node_connectivity", "build_residual_network", "edmonds_karp", "edmonds_karp", "shortest_augmenting_path"]]}, {"name": "networkx.algorithms.connectivity.stoerwagner", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\stoerwagner.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.utils.heaps", "itertools"]], "hasfunction": 2, "myfunction": [["stoer_wagner"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.connectivity.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\connectivity\\utils.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["build_auxiliary_edge_connectivity", "build_auxiliary_node_connectivity"], []]}, {"name": "networkx.algorithms.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\core.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["_core_subgraph", "core_number", "k_core", "k_corona", "k_crust", "k_shell", "k_truss", "onion_layers"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.covering", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\covering.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "functools"]], "hasfunction": 2, "myfunction": [["is_edge_cover", "min_edge_cover"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.cuts", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\cuts.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["boundary_expansion", "conductance", "cut_size", "edge_expansion", "mixing_expansion", "node_expansion", "normalized_cut_size", "volume"], []]}, {"name": "networkx.algorithms.cycles", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\cycles.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.algorithms.cycles"], ["itertools", "collections", "itertools"]], "hasfunction": 2, "myfunction": [["_bounded_cycle_search", "_chordless_cycle_search", "_directed_cycle_search", "_johnson_cycle_search", "_min_cycle", "_min_cycle_basis", "_path_to_cycle", "_undirected_cycle_search", "chordless_cycles", "cycle_basis", "find_cycle", "minimum_cycle_basis", "recursive_simple_cycles", "simple_cycles"], ["not_implemented_for", "pairwise"]]}, {"name": "networkx.algorithms.d_separation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\d_separation.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.utils.union_find", "collections"]], "hasfunction": 2, "myfunction": [["_bfs_with_marks", "d_separated", "is_minimal_d_separator", "minimal_d_separator"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.dag", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\dag.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "itertools", "collections", "functools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["all_topological_sorts", "ancestors", "antichains", "compute_v_structures", "dag_longest_path", "dag_longest_path_length", "dag_to_branching", "descendants", "has_cycle", "is_aperiodic", "is_directed_acyclic_graph", "lexicographical_topological_sort", "root_to_leaf_paths", "topological_generations", "topological_sort", "transitive_closure", "transitive_closure_dag", "transitive_reduction"], ["arbitrary_element", "not_implemented_for", "pairwise"]]}, {"name": "networkx.algorithms.shortest_paths.dense", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\dense.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["floyd_warshall", "floyd_warshall_numpy", "floyd_warshall_predecessor_and_distance", "reconstruct_path"], []]}, {"name": "networkx.algorithms.traversal.depth_first_search", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\depth_first_search.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["dfs_edges", "dfs_labeled_edges", "dfs_postorder_nodes", "dfs_predecessors", "dfs_preorder_nodes", "dfs_successors", "dfs_tree"], []]}, {"name": "networkx.algorithms.distance_measures", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\distance_measures.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_count_lu_permutations", "_extrema_bounding", "barycenter", "center", "diameter", "eccentricity", "periphery", "radius", "resistance_distance"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.distance_regular", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\distance_regular.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["global_parameters", "intersection_array", "is_distance_regular", "is_strongly_regular"], ["diameter", "not_implemented_for"]]}, {"name": "networkx.algorithms.dominance", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\dominance.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["dominance_frontiers", "immediate_dominators"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.dominating", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\dominating.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["dominating_set", "is_dominating_set"], ["arbitrary_element"]]}, {"name": "networkx.algorithms.traversal.edgebfs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\edgebfs.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["edge_bfs"], []]}, {"name": "networkx.algorithms.traversal.edgedfs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\edgedfs.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["edge_dfs"], []]}, {"name": "networkx.algorithms.efficiency_measures", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\efficiency_measures.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["efficiency", "global_efficiency", "local_efficiency"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.euler", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\euler.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_find_path_start", "_multigraph_eulerian_circuit", "_simplegraph_eulerian_circuit", "eulerian_circuit", "eulerian_path", "eulerize", "has_eulerian_path", "is_eulerian", "is_semieulerian"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.flow", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["boykov_kolmogorov", "build_flow_dict", "build_residual_network", "capacity_scaling", "cost_of_flow", "dinitz", "edmonds_karp", "gomory_hu_tree", "max_flow_min_cost", "maximum_flow", "maximum_flow_value", "min_cost_flow", "min_cost_flow_cost", "minimum_cut", "minimum_cut_value", "network_simplex", "preflow_push", "shortest_augmenting_path"]]}, {"name": "networkx.algorithms.flow.boykovkolmogorov", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\boykovkolmogorov.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections", "operator"]], "hasfunction": 2, "myfunction": [["boykov_kolmogorov", "boykov_kolmogorov_impl"], ["build_residual_network"]]}, {"name": "networkx.algorithms.flow.capacityscaling", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\capacityscaling.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.utils.heaps", "itertools"]], "hasfunction": 2, "myfunction": [["_build_flow_dict", "_build_residual_network", "_detect_unboundedness", "capacity_scaling"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.flow.dinitz_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\dinitz_alg.py", "layer": 3, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["dinitz", "dinitz_impl"], ["build_residual_network", "pairwise"]]}, {"name": "networkx.algorithms.flow.edmondskarp", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\edmondskarp.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["edmonds_karp", "edmonds_karp_core", "edmonds_karp_impl"], ["build_residual_network"]]}, {"name": "networkx.algorithms.flow.gomory_hu", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\gomory_hu.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["gomory_hu_tree"], ["build_residual_network", "edmonds_karp", "edmonds_karp", "not_implemented_for"]]}, {"name": "networkx.algorithms.flow.maxflow", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\maxflow.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["maximum_flow", "maximum_flow_value", "minimum_cut", "minimum_cut_value"], ["boykov_kolmogorov", "build_flow_dict", "preflow_push", "dinitz", "edmonds_karp", "preflow_push", "shortest_augmenting_path"]]}, {"name": "networkx.algorithms.flow.mincost", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\mincost.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["cost_of_flow", "max_flow_min_cost", "min_cost_flow", "min_cost_flow_cost"], []]}, {"name": "networkx.algorithms.flow.networksimplex", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\networksimplex.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.flow.networksimplex"], ["itertools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["network_simplex"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.flow.preflowpush", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\preflowpush.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.algorithms.flow.utils", "networkx.algorithms.flow.utils", "networkx.algorithms.flow.utils", "collections", "itertools"]], "hasfunction": 2, "myfunction": [["preflow_push", "preflow_push_impl"], ["arbitrary_element", "build_residual_network", "detect_unboundedness"]]}, {"name": "networkx.algorithms.flow.shortestaugmentingpath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\shortestaugmentingpath.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.algorithms.flow.utils", "collections"]], "hasfunction": 2, "myfunction": [["shortest_augmenting_path", "shortest_augmenting_path_impl"], ["build_residual_network", "edmonds_karp_core"]]}, {"name": "networkx.algorithms.flow.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\flow\\utils.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.flow.utils", "networkx.algorithms.flow.utils", "networkx.algorithms.flow.utils"], ["collections"]], "hasfunction": 2, "myfunction": [["build_flow_dict", "build_residual_network", "detect_unboundedness"], []]}, {"name": "networkx.algorithms.shortest_paths.generic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\generic.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_build_paths_from_predecessors", "all_shortest_paths", "average_shortest_path_length", "has_path", "shortest_path", "shortest_path_length"], []]}, {"name": "networkx.algorithms.graph_hashing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\graph_hashing.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "_blake2", "collections"]], "hasfunction": 2, "myfunction": [["_hash_label", "_init_node_labels", "_neighborhood_aggregate", "weisfeiler_lehman_graph_hash", "weisfeiler_lehman_subgraph_hashes"], []]}, {"name": "networkx.algorithms.graphical", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\graphical.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_basic_graphical_tests", "is_digraphical", "is_graphical", "is_multigraphical", "is_pseudographical", "is_valid_degree_sequence_erdos_gallai", "is_valid_degree_sequence_havel_hakimi"], []]}, {"name": "networkx.algorithms.hierarchy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\hierarchy.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["flow_hierarchy"], []]}, {"name": "networkx.algorithms.link_analysis.hits_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\link_analysis\\hits_alg.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_hits_numpy", "_hits_python", "_hits_scipy", "hits"], []]}, {"name": "networkx.algorithms.hybrid", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\hybrid.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_kl_connected", "kl_connected_subgraph"], []]}, {"name": "networkx.algorithms.isolate", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isolate.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_isolate", "isolates", "number_of_isolates"], []]}, {"name": "networkx.algorithms.isomorphism", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.ismags", "networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.temporalisomorphvf2", "networkx.algorithms.isomorphism.temporalisomorphvf2"]], "hasfunction": 2, "myfunction": [[], ["categorical_edge_match", "categorical_multiedge_match", "categorical_node_match", "could_be_isomorphic", "fast_could_be_isomorphic", "faster_could_be_isomorphic", "generic_edge_match", "generic_multiedge_match", "generic_node_match", "is_isomorphic", "numerical_edge_match", "numerical_multiedge_match", "numerical_node_match", "rooted_tree_isomorphism", "tree_isomorphism", "vf2pp_all_isomorphisms", "vf2pp_is_isomorphic", "vf2pp_isomorphism"]]}, {"name": "networkx.algorithms.isomorphism.ismags", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\ismags.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.isomorphism.ismags"], ["collections", "collections"]], "hasfunction": 2, "myfunction": [["are_all_equal", "intersect", "make_partitions", "partition_to_color"], ["wraps"]]}, {"name": "networkx.algorithms.isomorphism.isomorph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\isomorph.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["could_be_isomorphic", "fast_could_be_isomorphic", "fast_could_be_isomorphic", "faster_could_be_isomorphic", "faster_could_be_isomorphic", "could_be_isomorphic", "is_isomorphic"], []]}, {"name": "networkx.algorithms.isomorphism.isomorphvf2", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\isomorphvf2.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.isomorphism.isomorphvf2", "networkx.algorithms.isomorphism.isomorphvf2", "networkx.algorithms.isomorphism.isomorphvf2", "networkx.algorithms.isomorphism.isomorphvf2"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.algorithms.isomorphism.matchhelpers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\matchhelpers.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["allclose", "categorical_edge_match", "categorical_multiedge_match", "categorical_node_match", "copyfunc", "generic_edge_match", "generic_multiedge_match", "generic_node_match", "numerical_edge_match", "numerical_multiedge_match", "numerical_node_match"], []]}, {"name": "networkx.algorithms.isomorphism.temporalisomorphvf2", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\temporalisomorphvf2.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.isomorphism.temporalisomorphvf2", "networkx.algorithms.isomorphism.temporalisomorphvf2"], ["networkx.algorithms.isomorphism.isomorphvf2", "networkx.algorithms.isomorphism.isomorphvf2"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.algorithms.isomorphism.vf2pp", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\vf2pp.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.isomorphism.vf2pp", "networkx.algorithms.isomorphism.vf2pp"], []], "hasfunction": 2, "myfunction": [["_consistent_PT", "_cut_PT", "_feasibility", "_find_candidates", "_find_candidates_Di", "_initialize_parameters", "_matching_order", "_precheck_label_properties", "_restore_Tinout", "_restore_Tinout_Di", "_update_Tinout", "vf2pp_all_isomorphisms", "vf2pp_is_isomorphic", "vf2pp_isomorphism"], []]}, {"name": "networkx.algorithms.isomorphism.vf2userfunc", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\isomorphism\\vf2userfunc.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.vf2userfunc", "networkx.algorithms.isomorphism.vf2userfunc"], []], "hasfunction": 2, "myfunction": [["_semantic_feasibility"], []]}, {"name": "networkx.algorithms.link_analysis", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\link_analysis\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["google_matrix", "hits", "pagerank"]]}, {"name": "networkx.algorithms.link_analysis.pagerank_alg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\link_analysis\\pagerank_alg.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_pagerank_numpy", "_pagerank_python", "_pagerank_scipy", "google_matrix", "pagerank"], []]}, {"name": "networkx.algorithms.link_prediction", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\link_prediction.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_apply_prediction", "_community", "adamic_adar_index", "cn_soundarajan_hopcroft", "common_neighbor_centrality", "jaccard_coefficient", "preferential_attachment", "ra_index_soundarajan_hopcroft", "resource_allocation_index", "within_inter_cluster"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.lowest_common_ancestors", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\lowest_common_ancestors.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections.abc", "collections.abc", "networkx.utils.union_find", "itertools", "collections"]], "hasfunction": 2, "myfunction": [["all_pairs_lowest_common_ancestor", "lowest_common_ancestor", "tree_all_pairs_lowest_common_ancestor"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.algorithms.matching", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\matching.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["is_matching", "is_maximal_matching", "is_perfect_matching", "matching_dict_to_set", "max_weight_matching", "maximal_matching", "min_weight_matching"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.minors", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\minors\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["contracted_edge", "contracted_nodes", "equivalence_classes", "contracted_nodes", "quotient_graph"]]}, {"name": "networkx.algorithms.minors.contraction", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\minors\\contraction.py", "layer": 3, "hasclass": 2, "myclass": [[], ["networkx.exception", "itertools", "itertools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_quotient_graph", "contracted_edge", "contracted_nodes", "equivalence_classes", "contracted_nodes", "quotient_graph"], ["arbitrary_element", "density"]]}, {"name": "networkx.algorithms.mis", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\mis.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["maximal_independent_set"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.moral", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\moral.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["moral_graph"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.node_classification", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\node_classification.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_get_label_info", "harmonic_function", "local_and_global_consistency"], []]}, {"name": "networkx.algorithms.operators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\operators\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["cartesian_product", "complement", "compose", "compose_all", "corona_product", "difference", "disjoint_union", "disjoint_union_all", "full_join", "intersection", "intersection_all", "lexicographic_product", "power", "reverse", "rooted_product", "strong_product", "symmetric_difference", "tensor_product", "union", "union_all"]]}, {"name": "networkx.algorithms.operators.product", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\operators\\product.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_dict_product", "_directed_edges_cross_edges", "_edges_cross_nodes", "_edges_cross_nodes_and_nodes", "_init_product_graph", "_node_product", "_nodes_cross_edges", "_undirected_edges_cross_edges", "cartesian_product", "corona_product", "lexicographic_product", "power", "rooted_product", "strong_product", "tensor_product"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.operators.unary", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\operators\\unary.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["complement", "reverse"], []]}, {"name": "networkx.algorithms.planar_drawing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\planar_drawing.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["combinatorial_embedding_to_pos", "get_canonical_ordering", "make_bi_connected", "set_position", "triangulate_embedding", "triangulate_face"], []]}, {"name": "networkx.algorithms.planarity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\planarity.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.algorithms.planarity", "networkx.algorithms.planarity", "networkx.algorithms.planarity", "networkx.algorithms.planarity"], ["collections"]], "hasfunction": 2, "myfunction": [["check_planarity", "check_planarity_recursive", "get_counterexample", "get_counterexample_recursive", "is_planar", "top_of_stack"], []]}, {"name": "networkx.algorithms.polynomials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\polynomials.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["chromatic_polynomial", "tutte_polynomial"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.regular", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\regular.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_k_regular", "is_regular", "k_factor"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.richclub", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\richclub.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_compute_rc", "rich_club_coefficient"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.shortest_paths", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["all_pairs_bellman_ford_path", "all_pairs_bellman_ford_path_length", "all_pairs_dijkstra", "all_pairs_dijkstra_path", "all_pairs_dijkstra_path_length", "all_pairs_shortest_path", "all_pairs_shortest_path_length", "all_shortest_paths", "astar_path", "astar_path_length", "average_shortest_path_length", "bellman_ford_path", "bellman_ford_path_length", "bellman_ford_predecessor_and_distance", "bidirectional_dijkstra", "bidirectional_shortest_path", "dijkstra_path", "dijkstra_path_length", "dijkstra_predecessor_and_distance", "find_negative_cycle", "floyd_warshall", "floyd_warshall_numpy", "floyd_warshall_predecessor_and_distance", "goldberg_radzik", "has_path", "johnson", "multi_source_dijkstra", "multi_source_dijkstra_path", "multi_source_dijkstra_path_length", "negative_edge_cycle", "predecessor", "reconstruct_path", "shortest_path", "shortest_path_length", "single_source_bellman_ford", "single_source_bellman_ford_path", "single_source_bellman_ford_path_length", "single_source_dijkstra", "single_source_dijkstra_path", "single_source_dijkstra_path_length", "single_source_shortest_path", "single_source_shortest_path_length", "single_target_shortest_path", "single_target_shortest_path_length"]]}, {"name": "networkx.algorithms.shortest_paths.unweighted", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\unweighted.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_bidirectional_pred_succ", "_single_shortest_path", "_single_shortest_path_length", "all_pairs_shortest_path", "all_pairs_shortest_path_length", "bidirectional_shortest_path", "predecessor", "single_source_shortest_path", "single_source_shortest_path_length", "single_target_shortest_path", "single_target_shortest_path_length"], []]}, {"name": "networkx.algorithms.shortest_paths.weighted", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\shortest_paths\\weighted.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools", "collections"]], "hasfunction": 2, "myfunction": [["_bellman_ford", "_dijkstra", "_dijkstra_multisource", "_inner_bellman_ford", "_weight_function", "all_pairs_bellman_ford_path", "all_pairs_bellman_ford_path_length", "all_pairs_dijkstra", "all_pairs_dijkstra_path", "all_pairs_dijkstra_path_length", "bellman_ford_path", "bellman_ford_path_length", "bellman_ford_predecessor_and_distance", "bidirectional_dijkstra", "dijkstra_path", "dijkstra_path_length", "dijkstra_predecessor_and_distance", "find_negative_cycle", "goldberg_radzik", "johnson", "multi_source_dijkstra", "multi_source_dijkstra_path", "multi_source_dijkstra_path_length", "negative_edge_cycle", "single_source_bellman_ford", "single_source_bellman_ford_path", "single_source_bellman_ford_path_length", "single_source_dijkstra", "single_source_dijkstra_path", "single_source_dijkstra_path_length"], ["_build_paths_from_predecessors"]]}, {"name": "networkx.algorithms.similarity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\similarity.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_simrank_similarity_numpy", "_simrank_similarity_python", "debug_print", "generate_random_paths", "graph_edit_distance", "optimal_edit_paths", "optimize_edit_paths", "optimize_graph_edit_distance", "panther_similarity", "simrank_similarity"], ["dataclass"]]}, {"name": "networkx.algorithms.simple_paths", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\simple_paths.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.algorithms.simple_paths"], ["itertools"]], "hasfunction": 2, "myfunction": [["_all_simple_edge_paths_multigraph", "_all_simple_paths_graph", "_all_simple_paths_multigraph", "_bidirectional_dijkstra", "_bidirectional_pred_succ", "_bidirectional_shortest_path", "_empty_generator", "all_simple_edge_paths", "all_simple_paths", "is_simple_path", "shortest_simple_paths"], ["_weight_function", "not_implemented_for", "pairwise"]]}, {"name": "networkx.algorithms.smallworld", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\smallworld.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["lattice_reference", "omega", "random_reference", "sigma"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.smetric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\smetric.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["s_metric"], []]}, {"name": "networkx.algorithms.sparsifiers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\sparsifiers.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_add_edge_to_spanner", "_lightest_edge_dicts", "_setup_residual_graph", "spanner"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.structuralholes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\structuralholes.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["constraint", "effective_size", "local_constraint", "mutual_weight", "normalized_mutual_weight"], []]}, {"name": "networkx.algorithms.summarization", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\summarization.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "collections"]], "hasfunction": 2, "myfunction": [["_snap_build_graph", "_snap_eligible_group", "_snap_split", "dedensify", "snap_aggregation"], []]}, {"name": "networkx.algorithms.swap", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\swap.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["connected_double_edge_swap", "directed_edge_swap", "double_edge_swap"], ["py_random_state"]]}, {"name": "networkx.algorithms.tournament", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tournament.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["hamiltonian_path", "index_satisfying", "is_reachable", "is_strongly_connected", "is_tournament", "random_tournament", "score_sequence", "tournament_matrix"], ["arbitrary_element", "is_simple_path", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.traversal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\traversal\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["bfs_beam_edges", "bfs_edges", "bfs_layers", "bfs_predecessors", "bfs_successors", "bfs_tree", "descendants_at_distance", "dfs_edges", "dfs_labeled_edges", "dfs_postorder_nodes", "dfs_predecessors", "dfs_preorder_nodes", "dfs_successors", "dfs_tree", "edge_bfs", "edge_dfs"]]}, {"name": "networkx.algorithms.tree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.algorithms.tree.branchings", "networkx.algorithms.tree.mst", "networkx.algorithms.tree.branchings", "networkx.algorithms.tree.coding", "networkx.algorithms.tree.mst"]], "hasfunction": 2, "myfunction": [[], ["branching_weight", "from_nested_tuple", "from_prufer_sequence", "greedy_branching", "is_arborescence", "is_branching", "is_forest", "is_tree", "join", "junction_tree", "maximum_branching", "maximum_spanning_arborescence", "maximum_spanning_edges", "maximum_spanning_tree", "minimum_branching", "minimum_spanning_arborescence", "minimum_spanning_edges", "minimum_spanning_tree", "partition_spanning_tree", "random_spanning_tree", "to_nested_tuple", "to_prufer_sequence"]]}, {"name": "networkx.algorithms.tree.branchings", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\branchings.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.tree.branchings", "networkx.algorithms.tree.branchings", "networkx.algorithms.tree.branchings"], ["enum", "queue", "operator"]], "hasfunction": 2, "myfunction": [["_max_weight", "_min_weight", "branching_weight", "get_path", "greedy_branching", "maximum_branching", "maximum_spanning_arborescence", "minimum_branching", "minimum_spanning_arborescence", "random_string"], ["dataclass", "field", "is_arborescence", "is_branching", "py_random_state"]]}, {"name": "networkx.algorithms.tree.coding", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\coding.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.tree.coding"], ["collections", "itertools"]], "hasfunction": 2, "myfunction": [["from_nested_tuple", "from_prufer_sequence", "to_nested_tuple", "to_prufer_sequence"], ["not_implemented_for"]]}, {"name": "networkx.algorithms.tree.decomposition", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\decomposition.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["junction_tree"], ["chordal_graph_cliques", "complete_to_chordal_graph", "not_implemented_for"]]}, {"name": "networkx.algorithms.tree.mst", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\mst.py", "layer": 3, "hasclass": 2, "myclass": [["networkx.algorithms.tree.mst", "networkx.algorithms.tree.mst"], ["enum", "queue", "networkx.utils.union_find", "itertools", "operator"]], "hasfunction": 2, "myfunction": [["boruvka_mst_edges", "kruskal_mst_edges", "maximum_spanning_edges", "maximum_spanning_tree", "minimum_spanning_edges", "minimum_spanning_tree", "partition_spanning_tree", "prim_mst_edges", "random_spanning_tree"], ["dataclass", "field", "not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.tree.operations", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\operations.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools", "itertools", "functools"]], "hasfunction": 2, "myfunction": [["join"], []]}, {"name": "networkx.algorithms.tree.recognition", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\tree\\recognition.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["is_arborescence", "is_branching", "is_forest", "is_tree"], []]}, {"name": "networkx.algorithms.triads", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\triads.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "collections", "itertools"]], "hasfunction": 2, "myfunction": [["_tricode", "all_triads", "all_triplets", "is_triad", "random_triad", "triad_type", "triadic_census", "triads_by_type"], ["not_implemented_for", "py_random_state"]]}, {"name": "networkx.algorithms.vitality", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\vitality.py", "layer": 2, "hasclass": 2, "myclass": [[], ["functools"]], "hasfunction": 2, "myfunction": [["closeness_vitality"], []]}, {"name": "networkx.algorithms.voronoi", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\voronoi.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["voronoi_cells"], ["groups"]]}, {"name": "networkx.algorithms.wiener", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\algorithms\\wiener.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["wiener_index"], ["is_connected", "is_strongly_connected", "shortest_path_length"]]}, {"name": "networkx.generators.atlas", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\atlas.py", "layer": 1, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["_generate_graphs", "graph_atlas", "graph_atlas_g"], []]}, {"name": "networkx.linalg.attrmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\attrmatrix.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_edge_value", "_node_value", "attr_matrix", "attr_sparse_matrix"], []]}, {"name": "networkx.classes.backends", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\backends.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.classes.backends"], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["_dispatch", "_mark_tests", "_register_algo", "test_override_dispatch"], ["entry_points"]]}, {"name": "networkx.linalg.bethehessianmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\bethehessianmatrix.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["bethe_hessian_matrix"], ["not_implemented_for"]]}, {"name": "networkx.classes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.classes.digraph", "networkx.classes.graph", "networkx.classes.multidigraph", "networkx.classes.multigraph"]], "hasfunction": 2, "myfunction": [[], ["_dispatch", "add_cycle", "add_path", "add_star", "all_neighbors", "common_neighbors", "create_empty_copy", "degree", "degree_histogram", "density", "edge_subgraph", "edges", "freeze", "get_edge_attributes", "get_node_attributes", "induced_subgraph", "is_directed", "is_empty", "is_frozen", "is_negatively_weighted", "is_path", "is_weighted", "neighbors", "nodes", "nodes_with_selfloops", "non_edges", "non_neighbors", "number_of_edges", "number_of_nodes", "number_of_selfloops", "path_weight", "restricted_view", "reverse_view", "selfloop_edges", "set_edge_attributes", "set_node_attributes", "subgraph", "subgraph_view", "to_directed", "to_undirected"]]}, {"name": "networkx.classes.coreviews", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\coreviews.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews"], ["collections.abc"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.classes.digraph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\digraph.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.digraph", "networkx.classes.digraph", "networkx.classes.digraph"], ["networkx.classes.coreviews", "networkx.classes.reportviews", "networkx.classes.graph", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.exception", "networkx.classes.reportviews", "networkx.classes.reportviews", "functools"]], "hasfunction": 2, "myfunction": [[], ["deepcopy"]]}, {"name": "networkx.classes.filters", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\filters.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.filters"], []], "hasfunction": 2, "myfunction": [["hide_diedges", "hide_edges", "hide_multidiedges", "hide_multiedges", "hide_nodes", "no_filter", "show_diedges", "show_edges", "show_multidiedges", "show_multiedges"], []]}, {"name": "networkx.classes.function", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\function.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "itertools"]], "hasfunction": 2, "myfunction": [["add_cycle", "add_path", "add_star", "all_neighbors", "common_neighbors", "create_empty_copy", "degree", "degree_histogram", "density", "edge_subgraph", "edges", "freeze", "frozen", "get_edge_attributes", "get_node_attributes", "induced_subgraph", "is_directed", "is_empty", "is_frozen", "is_negatively_weighted", "is_path", "is_weighted", "neighbors", "nodes", "nodes_with_selfloops", "non_edges", "non_neighbors", "number_of_edges", "number_of_nodes", "number_of_selfloops", "path_weight", "restricted_view", "selfloop_edges", "set_edge_attributes", "set_node_attributes", "subgraph", "to_directed", "to_undirected"], ["not_implemented_for", "pairwise", "reverse_view", "subgraph_view"]]}, {"name": "networkx.classes.graph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\graph.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.graph", "networkx.classes.graph", "networkx.classes.graph"], ["networkx.classes.coreviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.exception", "networkx.classes.reportviews", "functools"]], "hasfunction": 2, "myfunction": [[], ["deepcopy"]]}, {"name": "networkx.classes.graphviews", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\graphviews.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.classes.coreviews", "networkx.exception", "networkx.classes.coreviews", "networkx.classes.coreviews"]], "hasfunction": 2, "myfunction": [["generic_graph_view", "reverse_view", "subgraph_view"], ["no_filter", "not_implemented_for"]]}, {"name": "networkx.classes.multidigraph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\multidigraph.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.multidigraph"], ["networkx.classes.digraph", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.coreviews", "networkx.classes.multigraph", "networkx.exception", "networkx.classes.reportviews", "networkx.classes.reportviews", "functools"]], "hasfunction": 2, "myfunction": [[], ["deepcopy"]]}, {"name": "networkx.classes.multigraph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\multigraph.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.multigraph"], ["networkx.classes.graph", "networkx.classes.coreviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.exception", "functools"]], "hasfunction": 2, "myfunction": [[], ["deepcopy"]]}, {"name": "networkx.classes.reportviews", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\classes\\reportviews.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews", "networkx.classes.reportviews"], ["collections.abc", "collections.abc"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.generators.classic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\classic.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.classes.graph", "networkx.exception"]], "hasfunction": 2, "myfunction": [["_tree_edges", "balanced_tree", "barbell_graph", "binomial_tree", "circulant_graph", "circular_ladder_graph", "complete_graph", "complete_multipartite_graph", "cycle_graph", "dorogovtsev_goltsev_mendes_graph", "empty_graph", "full_rary_tree", "ladder_graph", "lollipop_graph", "null_graph", "path_graph", "star_graph", "trivial_graph", "turan_graph", "wheel_graph"], ["nodes_or_number", "pairwise"]]}, {"name": "networkx.generators.cographs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\cographs.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["random_cograph"], ["py_random_state"]]}, {"name": "networkx.convert", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\convert.py", "layer": 1, "hasclass": 2, "myclass": [[], ["collections.abc", "collections.abc", "collections.abc"]], "hasfunction": 2, "myfunction": [["from_dict_of_dicts", "from_dict_of_lists", "from_edgelist", "to_dict_of_dicts", "to_dict_of_lists", "to_edgelist", "to_networkx_graph"], []]}, {"name": "networkx.convert_matrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\convert_matrix.py", "layer": 1, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["_coo_gen_triples", "_csc_gen_triples", "_csr_gen_triples", "_dok_gen_triples", "_generate_weighted_edges", "from_numpy_array", "from_pandas_adjacency", "from_pandas_edgelist", "from_scipy_sparse_array", "to_numpy_array", "to_pandas_adjacency", "to_pandas_edgelist", "to_scipy_sparse_array"], ["not_implemented_for"]]}, {"name": "networkx.readwrite.json_graph.cytoscape", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\json_graph\\cytoscape.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["cytoscape_data", "cytoscape_graph"], []]}, {"name": "networkx.generators.degree_seq", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\degree_seq.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.generators.degree_seq"], ["itertools", "itertools", "operator", "itertools"]], "hasfunction": 2, "myfunction": [["_configuration_model", "_to_stublist", "configuration_model", "degree_sequence_tree", "directed_configuration_model", "directed_havel_hakimi_graph", "expected_degree_graph", "havel_hakimi_graph", "random_degree_sequence_graph"], ["py_random_state", "random_weighted_sample"]]}, {"name": "networkx.generators.directed", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\directed.py", "layer": 1, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["gn_graph", "gnc_graph", "gnr_graph", "random_k_out_graph", "random_uniform_k_out_graph", "scale_free_graph"], ["discrete_sequence", "empty_graph", "py_random_state", "weighted_choice"]]}, {"name": "networkx.drawing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["arf_layout", "bipartite_layout", "circular_layout", "draw", "draw_circular", "draw_kamada_kawai", "draw_networkx", "draw_networkx_edge_labels", "draw_networkx_edges", "draw_networkx_labels", "draw_networkx_nodes", "draw_planar", "draw_random", "draw_shell", "draw_spectral", "draw_spring", "spring_layout", "kamada_kawai_layout", "multipartite_layout", "planar_layout", "random_layout", "rescale_layout", "rescale_layout_dict", "shell_layout", "spectral_layout", "spiral_layout", "spring_layout", "to_latex", "to_latex_raw", "write_latex"]]}, {"name": "networkx.drawing.layout", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\layout.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_fruchterman_reingold", "_kamada_kawai_costfn", "_kamada_kawai_solve", "_process_params", "_sparse_fruchterman_reingold", "_sparse_spectral", "_spectral", "arf_layout", "bipartite_layout", "circular_layout", "spring_layout", "kamada_kawai_layout", "multipartite_layout", "planar_layout", "random_layout", "rescale_layout", "rescale_layout_dict", "shell_layout", "spectral_layout", "spiral_layout", "spring_layout"], ["np_random_state"]]}, {"name": "networkx.drawing.nx_agraph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\nx_agraph.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["from_agraph", "graphviz_layout", "pygraphviz_layout", "read_dot", "to_agraph", "view_pygraphviz", "write_dot"], []]}, {"name": "networkx.drawing.nx_latex", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\nx_latex.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["to_latex", "to_latex_raw", "write_latex"], []]}, {"name": "networkx.drawing.nx_pydot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\nx_pydot.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_check_colon_quotes", "from_pydot", "graphviz_layout", "pydot_layout", "read_dot", "to_pydot", "write_dot"], ["getpreferredencoding", "open_file"]]}, {"name": "networkx.drawing.nx_pylab", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\drawing\\nx_pylab.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numbers"]], "hasfunction": 2, "myfunction": [["apply_alpha", "draw", "draw_circular", "draw_kamada_kawai", "draw_networkx", "draw_networkx_edge_labels", "draw_networkx_edges", "draw_networkx_labels", "draw_networkx_nodes", "draw_planar", "draw_random", "draw_shell", "draw_spectral", "draw_spring"], ["circular_layout", "kamada_kawai_layout", "planar_layout", "random_layout", "shell_layout", "spectral_layout", "spring_layout"]]}, {"name": "networkx.generators.duplication", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\duplication.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["duplication_divergence_graph", "partial_duplication_graph"], ["py_random_state"]]}, {"name": "networkx.readwrite.edgelist", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\edgelist.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["generate_edgelist", "parse_edgelist", "read_edgelist", "read_weighted_edgelist", "write_edgelist", "write_weighted_edgelist"], ["open_file"]]}, {"name": "networkx.generators.ego", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\ego.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["ego_graph"], []]}, {"name": "networkx.exception", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\exception.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception", "networkx.exception"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.generators.expanders", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\expanders.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["chordal_cycle_graph", "margulis_gabber_galil_graph", "paley_graph"], []]}, {"name": "networkx.generators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["LCF_graph", "LFR_benchmark_graph", "balanced_tree", "barabasi_albert_graph", "barbell_graph", "gnp_random_graph", "binomial_tree", "bull_graph", "caveman_graph", "chordal_cycle_graph", "chvatal_graph", "circulant_graph", "circular_ladder_graph", "complete_graph", "complete_multipartite_graph", "configuration_model", "connected_caveman_graph", "connected_watts_strogatz_graph", "cubical_graph", "cycle_graph", "davis_southern_women_graph", "degree_sequence_tree", "dense_gnm_random_graph", "desargues_graph", "diamond_graph", "directed_configuration_model", "directed_havel_hakimi_graph", "directed_joint_degree_graph", "dodecahedral_graph", "dorogovtsev_goltsev_mendes_graph", "dual_barabasi_albert_graph", "duplication_divergence_graph", "ego_graph", "empty_graph", "gnp_random_graph", "expected_degree_graph", "extended_barabasi_albert_graph", "fast_gnp_random_graph", "florentine_families_graph", "frucht_graph", "full_rary_tree", "gaussian_random_partition_graph", "general_random_intersection_graph", "geographical_threshold_graph", "geometric_edges", "gn_graph", "gnc_graph", "gnm_random_graph", "gnp_random_graph", "gnr_graph", "graph_atlas", "graph_atlas_g", "grid_2d_graph", "grid_graph", "havel_hakimi_graph", "heawood_graph", "hexagonal_lattice_graph", "hoffman_singleton_graph", "house_graph", "house_x_graph", "hypercube_graph", "icosahedral_graph", "interval_graph", "inverse_line_graph", "is_valid_directed_joint_degree", "is_valid_joint_degree", "joint_degree_graph", "k_random_intersection_graph", "karate_club_graph", "krackhardt_kite_graph", "ladder_graph", "les_miserables_graph", "line_graph", "lollipop_graph", "margulis_gabber_galil_graph", "moebius_kantor_graph", "mycielski_graph", "mycielskian", "navigable_small_world_graph", "newman_watts_strogatz_graph", "nonisomorphic_trees", "null_graph", "number_of_nonisomorphic_trees", "octahedral_graph", "paley_graph", "pappus_graph", "partial_duplication_graph", "path_graph", "petersen_graph", "planted_partition_graph", "powerlaw_cluster_graph", "prefix_tree", "prefix_tree_recursive", "random_clustered_graph", "random_cograph", "random_degree_sequence_graph", "random_geometric_graph", "random_internet_as_graph", "random_k_out_graph", "random_kernel_graph", "random_lobster", "random_partition_graph", "random_powerlaw_tree", "random_powerlaw_tree_sequence", "random_regular_graph", "random_shell_graph", "random_tree", "relaxed_caveman_graph", "ring_of_cliques", "scale_free_graph", "sedgewick_maze_graph", "soft_random_geometric_graph", "spectral_graph_forge", "star_graph", "stochastic_block_model", "stochastic_graph", "sudoku_graph", "tetrahedral_graph", "thresholded_random_geometric_graph", "triad_graph", "triangular_lattice_graph", "trivial_graph", "truncated_cube_graph", "truncated_tetrahedron_graph", "turan_graph", "tutte_graph", "uniform_random_intersection_graph", "watts_strogatz_graph", "waxman_graph", "wheel_graph", "windmill_graph"]]}, {"name": "networkx.generators.community", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\community.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["LFR_benchmark_graph", "_generate_communities", "_generate_min_degree", "_hurwitz_zeta", "_powerlaw_sequence", "_zipf_rv_below", "caveman_graph", "connected_caveman_graph", "gaussian_random_partition_graph", "planted_partition_graph", "random_partition_graph", "relaxed_caveman_graph", "ring_of_cliques", "stochastic_block_model", "windmill_graph"], ["py_random_state"]]}, {"name": "networkx.generators.geometric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\geometric.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_geometric_edges", "geographical_threshold_graph", "geometric_edges", "navigable_small_world_graph", "random_geometric_graph", "soft_random_geometric_graph", "thresholded_random_geometric_graph", "waxman_graph"], ["py_random_state"]]}, {"name": "networkx.generators.internet_as_graphs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\internet_as_graphs.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.generators.internet_as_graphs"], []], "hasfunction": 2, "myfunction": [["choose_pref_attach", "random_internet_as_graph", "uniform_int_from_avg"], ["py_random_state"]]}, {"name": "networkx.generators.intersection", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\intersection.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["general_random_intersection_graph", "k_random_intersection_graph", "uniform_random_intersection_graph"], ["py_random_state"]]}, {"name": "networkx.generators.joint_degree_seq", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\joint_degree_seq.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_directed_neighbor_switch", "_directed_neighbor_switch_rev", "_neighbor_switch", "directed_joint_degree_graph", "is_valid_directed_joint_degree", "is_valid_joint_degree", "joint_degree_graph"], ["py_random_state"]]}, {"name": "networkx.generators.lattice", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\lattice.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception", "itertools"]], "hasfunction": 2, "myfunction": [["grid_2d_graph", "grid_graph", "hexagonal_lattice_graph", "hypercube_graph", "triangular_lattice_graph"], ["cycle_graph", "empty_graph", "flatten", "nodes_or_number", "pairwise", "path_graph", "relabel_nodes", "set_node_attributes"]]}, {"name": "networkx.generators.line", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\line.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "collections", "functools"]], "hasfunction": 2, "myfunction": [["_find_partition", "_lg_directed", "_lg_undirected", "_odd_triangle", "_select_starting_cell", "_triangles", "inverse_line_graph", "line_graph"], ["arbitrary_element", "not_implemented_for"]]}, {"name": "networkx.generators.mycielski", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\mycielski.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["mycielski_graph", "mycielskian"], ["not_implemented_for"]]}, {"name": "networkx.generators.random_clustered", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\random_clustered.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["random_clustered_graph"], ["py_random_state"]]}, {"name": "networkx.generators.random_graphs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\random_graphs.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["_random_subset", "barabasi_albert_graph", "gnp_random_graph", "connected_watts_strogatz_graph", "dense_gnm_random_graph", "dual_barabasi_albert_graph", "gnp_random_graph", "extended_barabasi_albert_graph", "fast_gnp_random_graph", "gnm_random_graph", "gnp_random_graph", "newman_watts_strogatz_graph", "powerlaw_cluster_graph", "random_kernel_graph", "random_lobster", "random_powerlaw_tree", "random_powerlaw_tree_sequence", "random_regular_graph", "random_shell_graph", "watts_strogatz_graph"], ["complete_graph", "degree_sequence_tree", "empty_graph", "path_graph", "py_random_state", "star_graph"]]}, {"name": "networkx.generators.small", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\small.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["LCF_graph", "_raise_on_directed", "bull_graph", "chvatal_graph", "cubical_graph", "desargues_graph", "diamond_graph", "dodecahedral_graph", "frucht_graph", "heawood_graph", "hoffman_singleton_graph", "house_graph", "house_x_graph", "icosahedral_graph", "krackhardt_kite_graph", "moebius_kantor_graph", "octahedral_graph", "pappus_graph", "petersen_graph", "sedgewick_maze_graph", "tetrahedral_graph", "truncated_cube_graph", "truncated_tetrahedron_graph", "tutte_graph"], ["complete_graph", "cycle_graph", "empty_graph", "path_graph", "wraps"]]}, {"name": "networkx.generators.social", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\social.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["davis_southern_women_graph", "florentine_families_graph", "karate_club_graph", "les_miserables_graph"], []]}, {"name": "networkx.generators.stochastic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\stochastic.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.classes.digraph", "networkx.classes.multidigraph"]], "hasfunction": 2, "myfunction": [["stochastic_graph"], ["not_implemented_for"]]}, {"name": "networkx.generators.sudoku", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\sudoku.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["sudoku_graph"], []]}, {"name": "networkx.generators.trees", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\trees.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["prefix_tree", "prefix_tree_recursive", "random_tree"], ["py_random_state"]]}, {"name": "networkx.generators.triads", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\generators\\triads.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.classes.digraph"]], "hasfunction": 2, "myfunction": [["triad_graph"], []]}, {"name": "networkx.readwrite.gexf", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\gexf.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.readwrite.gexf", "networkx.readwrite.gexf", "networkx.readwrite.gexf"], ["xml.etree.ElementTree", "xml.etree.ElementTree"]], "hasfunction": 2, "myfunction": [["generate_gexf", "read_gexf", "relabel_gexf_graph", "write_gexf"], ["open_file", "register_namespace", "tostring"]]}, {"name": "networkx.readwrite.gml", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\gml.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.readwrite.gml", "networkx.readwrite.gml"], ["enum", "typing", "networkx.exception", "_io", "collections"]], "hasfunction": 2, "myfunction": [["escape", "generate_gml", "literal_destringizer", "literal_stringizer", "parse_gml", "parse_gml_lines", "read_gml", "unescape", "write_gml"], ["literal_eval", "open_file"]]}, {"name": "networkx.readwrite.graph6", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\graph6.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.exception", "itertools"]], "hasfunction": 2, "myfunction": [["_generate_graph6_bytes", "data_to_n", "from_graph6_bytes", "n_to_data", "read_graph6", "to_graph6_bytes", "write_graph6", "write_graph6_file"], ["not_implemented_for", "open_file"]]}, {"name": "networkx.linalg.graphmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\graphmatrix.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["adjacency_matrix", "incidence_matrix"], []]}, {"name": "networkx.readwrite.graphml", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\graphml.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.readwrite.graphml", "networkx.readwrite.graphml", "networkx.readwrite.graphml", "networkx.readwrite.graphml", "networkx.readwrite.graphml"], ["collections"]], "hasfunction": 2, "myfunction": [["generate_graphml", "parse_graphml", "read_graphml", "write_graphml_lxml", "write_graphml_lxml", "write_graphml_xml"], ["open_file"]]}, {"name": "networkx.readwrite.json_graph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\json_graph\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["adjacency_data", "adjacency_graph", "cytoscape_data", "cytoscape_graph", "node_link_data", "node_link_graph", "tree_data", "tree_graph"]]}, {"name": "networkx.readwrite.json_graph.node_link", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\json_graph\\node_link.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_to_tuple", "node_link_data", "node_link_graph"], []]}, {"name": "networkx.readwrite.json_graph.tree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\json_graph\\tree.py", "layer": 2, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["tree_data", "tree_graph"], []]}, {"name": "networkx.linalg.laplacianmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\laplacianmatrix.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_transition_matrix", "directed_combinatorial_laplacian_matrix", "directed_laplacian_matrix", "laplacian_matrix", "normalized_laplacian_matrix", "total_spanning_tree_weight"], ["not_implemented_for"]]}, {"name": "networkx.lazy_imports", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\lazy_imports.py", "layer": 1, "hasclass": 2, "myclass": [["networkx.lazy_imports"], []], "hasfunction": 2, "myfunction": [["_lazy_import", "attach"], []]}, {"name": "networkx.readwrite.leda", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\leda.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["parse_leda", "read_leda"], ["open_file"]]}, {"name": "networkx.linalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["adjacency_matrix", "adjacency_spectrum", "algebraic_connectivity", "attr_matrix", "attr_sparse_matrix", "bethe_hessian_matrix", "bethe_hessian_spectrum", "directed_combinatorial_laplacian_matrix", "directed_laplacian_matrix", "directed_modularity_matrix", "fiedler_vector", "incidence_matrix", "laplacian_matrix", "laplacian_spectrum", "modularity_matrix", "modularity_spectrum", "normalized_laplacian_matrix", "normalized_laplacian_spectrum", "spectral_bisection", "spectral_ordering", "total_spanning_tree_weight"]]}, {"name": "networkx.linalg.modularitymatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\modularitymatrix.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["directed_modularity_matrix", "modularity_matrix"], ["not_implemented_for"]]}, {"name": "networkx.linalg.spectrum", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\linalg\\spectrum.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["adjacency_spectrum", "bethe_hessian_spectrum", "laplacian_spectrum", "modularity_spectrum", "normalized_laplacian_spectrum"], []]}, {"name": "networkx.readwrite.multiline_adjlist", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\multiline_adjlist.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["generate_multiline_adjlist", "parse_multiline_adjlist", "read_multiline_adjlist", "write_multiline_adjlist"], ["open_file"]]}, {"name": "networkx.readwrite.pajek", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\pajek.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["generate_pajek", "make_qstr", "parse_pajek", "read_pajek", "write_pajek"], ["open_file"]]}, {"name": "networkx.readwrite", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.readwrite.graphml", "networkx.readwrite.graphml"]], "hasfunction": 2, "myfunction": [[], ["adjacency_data", "adjacency_graph", "cytoscape_data", "cytoscape_graph", "forest_str", "from_graph6_bytes", "from_sparse6_bytes", "generate_adjlist", "generate_edgelist", "generate_gexf", "generate_gml", "generate_graphml", "generate_multiline_adjlist", "generate_network_text", "generate_pajek", "node_link_data", "node_link_graph", "parse_adjlist", "parse_edgelist", "parse_gml", "parse_graphml", "parse_leda", "parse_multiline_adjlist", "parse_pajek", "read_adjlist", "read_edgelist", "read_gexf", "read_gml", "read_graph6", "read_graphml", "read_leda", "read_multiline_adjlist", "read_pajek", "read_sparse6", "read_weighted_edgelist", "relabel_gexf_graph", "to_graph6_bytes", "to_sparse6_bytes", "tree_data", "tree_graph", "write_adjlist", "write_edgelist", "write_gexf", "write_gml", "write_graph6", "write_graphml_lxml", "write_graphml_lxml", "write_graphml_xml", "write_multiline_adjlist", "write_network_text", "write_pajek", "write_sparse6", "write_weighted_edgelist"]]}, {"name": "networkx.readwrite.sparse6", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\sparse6.py", "layer": 2, "hasclass": 2, "myclass": [[], ["networkx.exception"]], "hasfunction": 2, "myfunction": [["_generate_sparse6_bytes", "from_sparse6_bytes", "read_sparse6", "to_sparse6_bytes", "write_sparse6"], ["data_to_n", "n_to_data", "not_implemented_for", "open_file"]]}, {"name": "networkx.readwrite.text", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\readwrite\\text.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.readwrite.text", "networkx.readwrite.text", "networkx.readwrite.text", "networkx.readwrite.text", "networkx.readwrite.text", "networkx.readwrite.text"], ["collections"]], "hasfunction": 2, "myfunction": [["_find_sources", "forest_str", "generate_network_text", "write_network_text"], ["open_file"]]}, {"name": "networkx.relabel", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\relabel.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_relabel_copy", "_relabel_inplace", "convert_node_labels_to_integers", "relabel_nodes"], []]}, {"name": "networkx.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["networkx.utils.heaps", "networkx.utils.heaps", "networkx.utils.heaps", "networkx.utils.misc", "networkx.utils.union_find", "networkx.utils.decorators"]], "hasfunction": 2, "myfunction": [[], ["arbitrary_element", "create_py_random_state", "create_random_state", "cumulative_distribution", "cuthill_mckee_ordering", "dict_to_numpy_array", "discrete_sequence", "edges_equal", "flatten", "graphs_equal", "groups", "make_list_of_ints", "nodes_equal", "nodes_or_number", "not_implemented_for", "np_random_state", "open_file", "pairwise", "powerlaw_sequence", "py_random_state", "random_weighted_sample", "reverse_cuthill_mckee_ordering", "weighted_choice", "zipf_rv"]]}, {"name": "networkx.utils.decorators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\decorators.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.utils.decorators"], ["pathlib", "collections"]], "hasfunction": 2, "myfunction": [["nodes_or_number", "not_implemented_for", "np_random_state", "open_file", "py_random_state"], ["contextmanager", "create_py_random_state", "create_random_state", "splitext"]]}, {"name": "networkx.utils.heaps", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\heaps.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.utils.heaps", "networkx.utils.heaps", "networkx.utils.heaps"], ["itertools"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.utils.mapped_queue", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\mapped_queue.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.utils.mapped_queue", "networkx.utils.mapped_queue"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "networkx.utils.misc", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\misc.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.utils.misc"], ["collections.abc", "collections.abc", "collections.abc", "itertools", "collections", "collections"]], "hasfunction": 2, "myfunction": [["_dict_to_numpy_array1", "_dict_to_numpy_array2", "arbitrary_element", "create_py_random_state", "create_random_state", "dict_to_numpy_array", "edges_equal", "flatten", "graphs_equal", "groups", "make_list_of_ints", "nodes_equal", "pairwise"], []]}, {"name": "networkx.utils.random_sequence", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\random_sequence.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["cumulative_distribution", "discrete_sequence", "powerlaw_sequence", "random_weighted_sample", "weighted_choice", "zipf_rv"], ["py_random_state"]]}, {"name": "networkx.utils.rcm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\rcm.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "operator"]], "hasfunction": 2, "myfunction": [["connected_cuthill_mckee_ordering", "cuthill_mckee_ordering", "pseudo_peripheral_node", "reverse_cuthill_mckee_ordering"], ["arbitrary_element"]]}, {"name": "networkx.utils.union_find", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\networkx\\utils\\union_find.py", "layer": 2, "hasclass": 2, "myclass": [["networkx.utils.union_find"], []], "hasfunction": 2, "myfunction": [[], ["groups"]]}, {"name": "numpy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"], ["numpy.testing._private.nosetester"]], "hasfunction": 2, "myfunction": [["__dir__", "__getattr__", "_no_nep50_warning", "_pyinstaller_hooks_dir", "all", "allclose", "alltrue", "amax", "amin", "angle", "any", "append", "apply_along_axis", "apply_over_axes", "argmax", "argmin", "argpartition", "argsort", "argwhere", "around", "array2string", "array_equal", "array_equiv", "array_repr", "array_split", "array_str", "asarray_chkfinite", "asfarray", "asmatrix", "atleast_1d", "atleast_2d", "atleast_3d", "average", "bartlett", "base_repr", "binary_repr", "bincount", "blackman", "block", "bmat", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "busday_count", "busday_offset", "can_cast", "choose", "clip", "column_stack", "common_type", "compress", "concatenate", "convolve", "copy", "copyto", "corrcoef", "correlate", "count_nonzero", "cov", "cross", "cumprod", "cumproduct", "cumsum", "datetime_as_string", "delete", "diag", "diag_indices", "diag_indices_from", "diagflat", "diagonal", "diff", "digitize", "dot", "dsplit", "dstack", "ediff1d", "einsum", "einsum_path", "empty_like", "expand_dims", "extract", "eye", "fill_diagonal", "find_common_type", "fix", "flatnonzero", "flip", "fliplr", "flipud", "format_float_positional", "format_float_scientific", "fromfunction", "fromregex", "full", "full_like", "genfromtxt", "geomspace", "get_printoptions", "getbufsize", "geterr", "geterrcall", "gradient", "hamming", "hanning", "histogram", "histogram2d", "histogram_bin_edges", "histogramdd", "hsplit", "hstack", "i0", "identity", "imag", "in1d", "indices", "info", "inner", "insert", "interp", "intersect1d", "is_busday", "isclose", "iscomplex", "iscomplexobj", "isfortran", "isin", "isneginf", "isposinf", "isreal", "isrealobj", "isscalar", "issctype", "issubclass_", "issubdtype", "issubsctype", "iterable", "ix_", "kaiser", "kron", "lexsort", "linspace", "load", "loadtxt", "logspace", "lookfor", "mask_indices", "asmatrix", "amax", "maximum_sctype", "may_share_memory", "mean", "median", "meshgrid", "amin", "min_scalar_type", "mintypecode", "moveaxis", "msort", "nan_to_num", "nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar", "ndim", "nonzero", "obj2sctype", "ones", "ones_like", "outer", "packbits", "pad", "partition", "percentile", "piecewise", "place", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "printoptions", "prod", "product", "ptp", "put", "put_along_axis", "putmask", "quantile", "ravel", "ravel_multi_index", "real", "real_if_close", "repeat", "require", "reshape", "resize", "result_type", "roll", "rollaxis", "roots", "rot90", "round_", "round_", "vstack", "save", "savetxt", "savez", "savez_compressed", "sctype2char", "searchsorted", "select", "set_printoptions", "setbufsize", "setdiff1d", "seterr", "seterrcall", "setxor1d", "shape", "shares_memory", "sinc", "size", "sometrue", "sort", "sort_complex", "source", "split", "squeeze", "stack", "std", "sum", "swapaxes", "take", "take_along_axis", "tensordot", "tile", "trace", "transpose", "trapz", "tri", "tril", "tril_indices", "tril_indices_from", "trim_zeros", "triu", "triu_indices", "triu_indices_from", "typename", "union1d", "unique", "unpackbits", "unravel_index", "unwrap", "vander", "var", "vdot", "vsplit", "vstack", "where", "zeros_like"], ["add_newdoc", "byte_bounds", "deprecate", "deprecate_with_doc", "disp", "get_array_wrap", "get_include", "recfromcsv", "recfromtxt", "safe_eval", "set_string_function", "show", "show_runtime", "who"]]}, {"name": "numpy.__config__", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\__config__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_info", "show"], []]}, {"name": "numpy._distributor_init", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\_distributor_init.py", "layer": 1, "hasclass": 2, "myclass": [[], ["ctypes"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy._globals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\_globals.py", "layer": 1, "hasclass": 2, "myclass": [["numpy._globals"], ["numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.matrixlib", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\matrixlib\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [[], ["asmatrix", "bmat", "asmatrix"]]}, {"name": "numpy.matrixlib.defmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\matrixlib\\defmatrix.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_convert_from_string", "_from_string"], ["asmatrix", "bmat", "concatenate", "isscalar", "asmatrix", "matrix_power", "set_module"]]}, {"name": "numpy._pytesttester", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\_pytesttester.py", "layer": 1, "hasclass": 2, "myclass": [["numpy._pytesttester"], []], "hasfunction": 2, "myfunction": [["_show_numpy_info"], []]}, {"name": "numpy._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_versions"], []]}, {"name": "numpy.core.defchararray", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\core\\defchararray.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_binary_op_dispatcher", "_center_dispatcher", "_clean_args", "_code_dispatcher", "_count_dispatcher", "_endswith_dispatcher", "_expandtabs_dispatcher", "_get_num_chars", "_join_dispatcher", "_just_dispatcher", "_mod_dispatcher", "_multiply_dispatcher", "_partition_dispatcher", "_replace_dispatcher", "_split_dispatcher", "_splitlines_dispatcher", "_startswith_dispatcher", "_strip_dispatcher", "_to_string_or_unicode_array", "_translate_dispatcher", "_unary_op_dispatcher", "_use_unicode", "_zfill_dispatcher"], ["add", "array", "asarray", "asbytes", "capitalize", "center", "count", "decode", "encode", "endswith", "equal", "expandtabs", "find", "greater", "greater_equal", "index", "isalnum", "isalpha", "isdecimal", "isdigit", "islower", "isnumeric", "isspace", "istitle", "isupper", "join", "less", "less_equal", "ljust", "lower", "lstrip", "mod", "multiply", "not_equal", "partition", "replace", "rfind", "rindex", "rjust", "rpartition", "rsplit", "rstrip", "set_module", "split", "splitlines", "startswith", "str_len", "strip", "swapcase", "title", "translate", "upper", "zfill"]]}, {"name": "numpy.compat", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\compat\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["pathlib", "builtins", "builtins", "numpy.compat.py3k", "builtins", "os", "builtins"]], "hasfunction": 2, "myfunction": [[], ["asbytes", "asbytes_nested", "asstr", "asunicode", "asunicode_nested", "formatargspec", "getargspec", "getexception", "is_pathlib_path", "isfileobj", "npy_load_module", "open_latin1", "sixu"]]}, {"name": "numpy.compat._inspect", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\compat\\_inspect.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["formatargspec", "formatargvalues", "getargs", "getargspec", "getargvalues", "iscode", "isfunction", "ismethod", "joinseq", "strseq"], []]}, {"name": "numpy.compat.py3k", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\compat\\py3k.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.compat.py3k"], ["pathlib", "builtins", "builtins", "builtins", "os", "builtins"]], "hasfunction": 2, "myfunction": [["_isfileobj", "asbytes", "asbytes_nested", "asstr", "asunicode", "asunicode_nested", "getexception", "is_pathlib_path", "isfileobj", "npy_load_module", "open_latin1", "sixu"], []]}, {"name": "numpy.ctypeslib", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\ctypeslib.py", "layer": 1, "hasclass": 2, "myclass": [["numpy.ctypeslib", "numpy.ctypeslib"], ["numpy", "ctypes", "ctypes", "numpy.core.multiarray", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_ctype_from_dtype", "_ctype_from_dtype_scalar", "_ctype_from_dtype_structured", "_ctype_from_dtype_subarray", "_ctype_ndarray", "_flags_fromnum", "_get_scalar_type_map", "_num_fromflags", "as_array", "as_ctypes", "as_ctypes_type", "load_library", "ndpointer"], []]}, {"name": "numpy.lib.scimath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\scimath.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_fix_int_lt_zero", "_fix_real_abs_gt_1", "_fix_real_lt_zero", "_logn_dispatcher", "_power_dispatcher", "_tocomplex", "_unary_dispatcher", "arccos", "arcsin", "arctanh", "log", "log10", "log2", "logn", "power", "sqrt"], ["any", "array_function_dispatch", "isreal"]]}, {"name": "numpy.fft", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\fft\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["fft", "fft2", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifft2", "ifftn", "ifftshift", "ihfft", "irfft", "irfft2", "irfftn", "rfft", "rfft2", "rfftfreq", "rfftn"], []]}, {"name": "numpy.fft._pocketfft", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\fft\\_pocketfft.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_cook_nd_args", "_fft_dispatcher", "_fftn_dispatcher", "_get_backward_norm", "_get_forward_norm", "_raw_fft", "_raw_fftnd", "_swap_direction"], ["fft", "fft2", "fftn", "hfft", "ifft", "ifft2", "ifftn", "ihfft", "irfft", "irfft2", "irfftn", "rfft", "rfft2", "rfftn", "swapaxes", "take"]]}, {"name": "numpy.fft._pocketfft_internal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\fft\\_pocketfft_internal.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.fft.helper", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\fft\\helper.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_fftshift_dispatcher"], ["array_function_dispatch", "fftfreq", "fftshift", "ifftshift", "rfftfreq", "roll", "set_module"]]}, {"name": "numpy.lib", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.lib.arrayterator", "numpy", "numpy.lib._version", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], ["add_newdoc", "angle", "append", "apply_along_axis", "apply_over_axes", "array_split", "asarray_chkfinite", "asfarray", "average", "bartlett", "bincount", "blackman", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "byte_bounds", "column_stack", "common_type", "copy", "corrcoef", "cov", "delete", "deprecate", "deprecate_with_doc", "diag", "diag_indices", "diag_indices_from", "diagflat", "diff", "digitize", "disp", "dsplit", "dstack", "ediff1d", "expand_dims", "extract", "eye", "fill_diagonal", "fix", "flip", "fliplr", "flipud", "fromregex", "genfromtxt", "get_array_wrap", "get_include", "gradient", "hamming", "hanning", "histogram", "histogram2d", "histogram_bin_edges", "histogramdd", "hsplit", "i0", "imag", "in1d", "info", "insert", "interp", "intersect1d", "iscomplex", "iscomplexobj", "isin", "isneginf", "isposinf", "isreal", "isrealobj", "issubclass_", "issubdtype", "issubsctype", "iterable", "ix_", "kaiser", "kron", "load", "loadtxt", "lookfor", "mask_indices", "median", "meshgrid", "mintypecode", "msort", "nan_to_num", "nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar", "packbits", "pad", "percentile", "piecewise", "place", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "put_along_axis", "quantile", "ravel_multi_index", "real", "real_if_close", "recfromcsv", "recfromtxt", "roots", "rot90", "vstack", "safe_eval", "save", "savetxt", "savez", "savez_compressed", "select", "setdiff1d", "setxor1d", "show_runtime", "sinc", "sort_complex", "source", "split", "take_along_axis", "tile", "trapz", "tri", "tril", "tril_indices", "tril_indices_from", "trim_zeros", "triu", "triu_indices", "triu_indices_from", "typename", "union1d", "unique", "unpackbits", "unravel_index", "unwrap", "vander", "vsplit", "who"]]}, {"name": "numpy.lib._datasource", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\_datasource.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._datasource", "numpy.lib._datasource"], ["numpy"]], "hasfunction": 2, "myfunction": [["_check_mode", "open"], ["set_module"]]}, {"name": "numpy.lib._iotools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\_iotools.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools"], []], "hasfunction": 2, "myfunction": [["_decode_line", "_is_bytes_like", "_is_string_like", "easy_dtype", "flatten_dtype", "has_nested_fields", "str2bool"], ["asbytes", "asunicode"]]}, {"name": "numpy.lib._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\_version.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._version"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.lib.arraypad", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\arraypad.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_as_pairs", "_get_edges", "_get_linear_ramps", "_get_stats", "_pad_dispatcher", "_pad_simple", "_round_if_needed", "_set_pad_area", "_set_reflect_both", "_set_wrap_both", "_slice_at_axis", "_view_roi"], ["array_function_dispatch", "pad"]]}, {"name": "numpy.lib.arraysetops", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\arraysetops.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_ediff1d_dispatcher", "_in1d_dispatcher", "_intersect1d_dispatcher", "_isin_dispatcher", "_setdiff1d_dispatcher", "_setxor1d_dispatcher", "_union1d_dispatcher", "_unique1d", "_unique_dispatcher", "_unpack_tuple"], ["ediff1d", "in1d", "intersect1d", "isin", "setdiff1d", "setxor1d", "union1d", "unique"]]}, {"name": "numpy.lib.arrayterator", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\arrayterator.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.arrayterator"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.lib.format", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\format.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_check_version", "_filter_header", "_has_metadata", "_read_array_header", "_read_bytes", "_wrap_header", "_wrap_header_guess_version", "_write_array_header", "descr_to_dtype", "dtype_to_descr", "header_data_from_array_1_0", "magic", "open_memmap", "read_array", "read_array_header_1_0", "read_array_header_2_0", "read_magic", "write_array", "write_array_header_1_0", "write_array_header_2_0"], ["_isfileobj", "safe_eval"]]}, {"name": "numpy.lib.function_base", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\function_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_angle_dispatcher", "_append_dispatcher", "_average_dispatcher", "_calculate_shapes", "_chbevl", "_check_interpolation_as_method", "_closest_observation", "_compute_virtual_index", "_copy_dispatcher", "_corrcoef_dispatcher", "_cov_dispatcher", "_create_arrays", "_delete_dispatcher", "_diff_dispatcher", "_digitize_dispatcher", "_discret_interpolation_to_boundaries", "_extract_dispatcher", "_flip_dispatcher", "_get_gamma", "_get_gamma_mask", "_get_indexes", "_gradient_dispatcher", "_i0_1", "_i0_2", "_i0_dispatcher", "_insert_dispatcher", "_interp_dispatcher", "_inverted_cdf", "_lerp", "_median", "_median_dispatcher", "_meshgrid_dispatcher", "_msort_dispatcher", "_parse_gufunc_signature", "_parse_input_dimensions", "_percentile_dispatcher", "_piecewise_dispatcher", "_place_dispatcher", "_quantile", "_quantile_dispatcher", "_quantile_is_valid", "_quantile_unchecked", "_quantile_ureduce_func", "_rot90_dispatcher", "_select_dispatcher", "_sinc_dispatcher", "_sort_complex", "_trapz_dispatcher", "_trim_zeros", "_unwrap_dispatcher", "_update_dim_sizes", "_ureduce", "disp"], ["add_newdoc", "angle", "any", "append", "asarray_chkfinite", "average", "bartlett", "bincount", "blackman", "concatenate", "copy", "corrcoef", "cov", "delete", "diag", "diff", "digitize", "dot", "extract", "flip", "gradient", "hamming", "hanning", "histogram", "histogramdd", "i0", "insert", "interp", "isscalar", "iterable", "kaiser", "mean", "median", "meshgrid", "msort", "nonzero", "ones", "partition", "percentile", "piecewise", "place", "quantile", "ravel", "rot90", "select", "set_module", "sinc", "sort_complex", "sum", "take", "transpose", "trapz", "trim_zeros", "unwrap", "where", "zeros_like"]]}, {"name": "numpy.lib.histograms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\histograms.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_get_bin_edges", "_get_outer_edges", "_hist_bin_auto", "_hist_bin_doane", "_hist_bin_fd", "_hist_bin_rice", "_hist_bin_scott", "_hist_bin_sqrt", "_hist_bin_stone", "_hist_bin_sturges", "_histogram_bin_edges_dispatcher", "_histogram_dispatcher", "_histogramdd_dispatcher", "_ptp", "_ravel_and_check_weights", "_search_sorted_inclusive", "_unsigned_subtract"], ["histogram", "histogram_bin_edges", "histogramdd"]]}, {"name": "numpy.lib.index_tricks", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\index_tricks.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_diag_indices_from", "_fill_diagonal_dispatcher", "_ix__dispatcher"], ["alltrue", "as_strided", "cumprod", "diag_indices", "diag_indices_from", "diff", "fill_diagonal", "find_common_type", "issubdtype", "ix_", "linspace", "ndim", "ravel_multi_index", "set_module", "unravel_index"]]}, {"name": "numpy.lib.mixins", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\mixins.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.mixins"], []], "hasfunction": 2, "myfunction": [["_binary_method", "_disables_array_ufunc", "_inplace_binary_method", "_numeric_methods", "_reflected_binary_method", "_unary_method"], []]}, {"name": "numpy.lib.nanfunctions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\nanfunctions.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_copyto", "_divide_by_count", "_nan_mask", "_nanargmax_dispatcher", "_nanargmin_dispatcher", "_nancumprod_dispatcher", "_nancumsum_dispatcher", "_nanmax_dispatcher", "_nanmean_dispatcher", "_nanmedian", "_nanmedian1d", "_nanmedian_dispatcher", "_nanmedian_small", "_nanmin_dispatcher", "_nanpercentile_dispatcher", "_nanprod_dispatcher", "_nanquantile_1d", "_nanquantile_dispatcher", "_nanquantile_unchecked", "_nanquantile_ureduce_func", "_nanstd_dispatcher", "_nansum_dispatcher", "_nanvar_dispatcher", "_remove_nan_1d", "_replace_nan"], ["nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar"]]}, {"name": "numpy.lib.npyio", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\npyio.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.npyio", "numpy.lib.npyio"], ["numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy", "numpy.lib._iotools", "collections.abc", "numpy.lib._iotools", "numpy.lib._iotools", "operator", "operator", "os"]], "hasfunction": 2, "myfunction": [["_check_nonneg_int", "_ensure_ndmin_ndarray", "_ensure_ndmin_ndarray_check_param", "_genfromtxt_dispatcher", "_loadtxt_dispatcher", "_preprocess_comments", "_read", "_save_dispatcher", "_savetxt_dispatcher", "_savez", "_savez_compressed_dispatcher", "_savez_dispatcher", "recfromcsv", "recfromtxt", "zipfile_factory"], ["_decode_line", "genfromtxt", "_is_string_like", "loadtxt", "asbytes", "asstr", "asunicode", "easy_dtype", "flatten_dtype", "fromregex", "genfromtxt", "has_nested_fields", "load", "loadtxt", "packbits", "save", "savetxt", "savez", "savez_compressed", "set_array_function_like_doc", "set_module", "unpackbits"]]}, {"name": "numpy.lib.polynomial", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\polynomial.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_binary_op_dispatcher", "_poly_dispatcher", "_polyder_dispatcher", "_polydiv_dispatcher", "_polyfit_dispatcher", "_polyint_dispatcher", "_polyval_dispatcher", "_raise_power", "_roots_dispatcher"], ["atleast_1d", "diag", "dot", "eigvals", "hstack", "imag", "inv", "iscomplex", "isscalar", "lstsq", "mintypecode", "ones", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "real", "roots", "set_module", "trim_zeros", "vander"]]}, {"name": "numpy.lib.shape_base", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\shape_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_apply_along_axis_dispatcher", "_apply_over_axes_dispatcher", "_array_split_dispatcher", "_column_stack_dispatcher", "_dstack_dispatcher", "_expand_dims_dispatcher", "_hvdsplit_dispatcher", "_kron_dispatcher", "_make_along_axis_idx", "_put_along_axis_dispatcher", "_replace_zero_by_x_arrays", "_split_dispatcher", "_take_along_axis_dispatcher", "_tile_dispatcher", "get_array_prepare", "get_array_wrap"], ["_arrays_for_stack_dispatcher", "apply_along_axis", "apply_over_axes", "array_split", "atleast_3d", "column_stack", "concatenate", "dsplit", "dstack", "expand_dims", "hsplit", "kron", "normalize_axis_tuple", "outer", "put_along_axis", "reshape", "vstack", "split", "take_along_axis", "tile", "transpose", "vsplit", "vstack"]]}, {"name": "numpy.lib.stride_tricks", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\stride_tricks.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.stride_tricks"], []], "hasfunction": 2, "myfunction": [["_broadcast_arrays_dispatcher", "_broadcast_shape", "_broadcast_to", "_broadcast_to_dispatcher", "_maybe_view_as_subclass", "_sliding_window_view_dispatcher", "as_strided", "sliding_window_view"], ["array_function_dispatch", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "normalize_axis_tuple", "set_module"]]}, {"name": "numpy.lib.twodim_base", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\twodim_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_diag_dispatcher", "_eye_dispatcher", "_flip_dispatcher", "_histogram2d_dispatcher", "_min_int", "_tri_dispatcher", "_trilu_dispatcher", "_trilu_indices_form_dispatcher", "_vander_dispatcher"], ["eye", "tri", "broadcast_to", "diag", "diagflat", "diagonal", "eye", "fliplr", "flipud", "histogram2d", "indices", "mask_indices", "nonzero", "ones", "set_array_function_like_doc", "set_module", "tri", "tril", "tril_indices", "tril_indices_from", "triu", "triu_indices", "triu_indices_from", "vander", "where"]]}, {"name": "numpy.lib.type_check", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\type_check.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_asfarray_dispatcher", "_common_type_dispatcher", "_getmaxmin", "_imag_dispatcher", "_is_type_dispatcher", "_nan_to_num_dispatcher", "_real_dispatcher", "_real_if_close_dispatcher"], ["asfarray", "common_type", "imag", "iscomplex", "iscomplexobj", "isneginf", "isposinf", "isreal", "isrealobj", "mintypecode", "nan_to_num", "real", "real_if_close", "set_module", "typename"]]}, {"name": "numpy.lib.ufunclike", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\ufunclike.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_deprecate_out_named_y", "_dispatcher", "_fix_and_maybe_deprecate_out_named_y", "_fix_out_named_y"], ["array_function_dispatch", "fix", "isneginf", "isposinf"]]}, {"name": "numpy.lib.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\lib\\utils.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.utils"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_get_indent", "_getmembers", "_info", "_lookfor_generate_cache", "_makenamedict", "_median_nancheck", "_opt_info", "_split_line", "byte_bounds", "deprecate", "deprecate_with_doc", "get_include", "safe_eval", "show_runtime", "who"], ["info", "issubclass_", "issubdtype", "issubsctype", "lookfor", "set_module", "source"]]}, {"name": "numpy.linalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\linalg\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["numpy.linalg"], []], "hasfunction": 2, "myfunction": [["cholesky", "cond", "det", "eig", "eigh", "eigvals", "eigvalsh", "inv", "lstsq", "matrix_power", "matrix_rank", "multi_dot", "norm", "pinv", "qr", "slogdet", "solve", "svd", "tensorinv", "tensorsolve"], []]}, {"name": "numpy.linalg._umath_linalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\linalg\\_umath_linalg.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.linalg.lapack_lite", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\linalg\\lapack_lite.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], ["lapack_lite"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.linalg.linalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\linalg\\linalg.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy.linalg", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_assert_2d", "_assert_finite", "_assert_stacked_2d", "_assert_stacked_square", "_commonType", "_complexType", "_cond_dispatcher", "_convertarray", "_eigvalsh_dispatcher", "_is_empty_2d", "_lstsq_dispatcher", "_makearray", "_matrix_power_dispatcher", "_matrix_rank_dispatcher", "_multi_dot", "_multi_dot_matrix_chain_order", "_multi_dot_three", "_multi_svd_norm", "_multidot_dispatcher", "_norm_dispatcher", "_pinv_dispatcher", "_qr_dispatcher", "_raise_linalgerror_eigenvalues_nonconvergence", "_raise_linalgerror_lstsq", "_raise_linalgerror_nonposdef", "_raise_linalgerror_qr", "_raise_linalgerror_singular", "_raise_linalgerror_svd_nonconvergence", "_realType", "_solve_dispatcher", "_svd_dispatcher", "_tensorinv_dispatcher", "_tensorsolve_dispatcher", "_to_native_byte_order", "_unary_dispatcher", "get_linalg_error_extobj", "isComplexType", "transpose"], ["all", "amax", "amin", "argsort", "atleast_2d", "cholesky", "cond", "count_nonzero", "det", "dot", "eig", "eigh", "eigvals", "eigvalsh", "empty_like", "eye", "inv", "lstsq", "matrix_power", "matrix_rank", "moveaxis", "multi_dot", "norm", "pinv", "product", "qr", "set_module", "slogdet", "solve", "sort", "sum", "svd", "swapaxes", "tensorinv", "tensorsolve", "triu"]]}, {"name": "numpy.ma", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\ma\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.ma.core", "numpy.ma.core", "numpy", "numpy.ma.core", "numpy", "numpy.ma.core", "numpy.ma.core"]], "hasfunction": 2, "myfunction": [[], ["allclose", "allequal", "amax", "amin", "append", "apply_along_axis", "apply_over_axes", "argsort", "array", "asanyarray", "asarray", "average", "choose", "clump_masked", "clump_unmasked", "common_fill_value", "compress_cols", "compress_nd", "compress_rowcols", "compress_rows", "compressed", "concatenate", "convolve", "corrcoef", "correlate", "count_masked", "cov", "default_fill_value", "diag", "dot", "ediff1d", "expand_dims", "filled", "fix_invalid", "flatnotmasked_contiguous", "flatnotmasked_edges", "flatten_mask", "flatten_structured_array", "fromflex", "getdata", "getmask", "getmaskarray", "in1d", "inner", "inner", "intersect1d", "isMaskedArray", "isMaskedArray", "is_mask", "is_masked", "isMaskedArray", "isin", "left_shift", "make_mask", "make_mask_descr", "make_mask_none", "mask_cols", "mask_or", "mask_rowcols", "mask_rows", "masked_all", "masked_all_like", "masked_equal", "masked_greater", "masked_greater_equal", "masked_inside", "masked_invalid", "masked_less", "masked_less_equal", "masked_not_equal", "masked_object", "masked_outside", "masked_values", "masked_where", "max", "maximum_fill_value", "median", "min", "minimum_fill_value", "ndenumerate", "ndim", "notmasked_contiguous", "notmasked_edges", "outer", "outer", "polyfit", "power", "ptp", "put", "putmask", "reshape", "resize", "right_shift", "round_", "round_", "set_fill_value", "setdiff1d", "setxor1d", "shape", "size", "sort", "take", "transpose", "union1d", "unique", "vander", "where"]]}, {"name": "numpy.ma.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\ma\\core.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core"], ["numpy", "numpy", "builtins", "builtins", "numpy", "builtins"]], "hasfunction": 2, "myfunction": [["_arraymethod", "_check_fill_value", "_check_mask_axis", "_convolve_or_correlate", "_deprecate_argsort_axis", "_extremum_fill_value", "_get_dtype_of", "_mareconstruct", "_recursive_fill_value", "_recursive_filled", "_recursive_mask_or", "_recursive_printoption", "_recursive_set_fill_value", "_replace_dtype_fields", "_replace_dtype_fields_recursive", "_shrink_mask", "allclose", "allequal", "append", "argsort", "array", "asanyarray", "asarray", "choose", "common_fill_value", "compressed", "concatenate", "convolve", "correlate", "default_fill_value", "diag", "doc_note", "dot", "filled", "fix_invalid", "flatten_mask", "flatten_structured_array", "fromfile", "fromflex", "getdata", "get_fill_value", "getmask", "get_masked_subclass", "get_object_signature", "getdata", "getmask", "getmaskarray", "inner", "inner", "isMaskedArray", "isMaskedArray", "is_mask", "is_masked", "is_string_or_list_of_strings", "isMaskedArray", "left_shift", "make_mask", "make_mask_descr", "make_mask_none", "mask_or", "mask_rowcols", "masked_equal", "masked_greater", "masked_greater_equal", "masked_inside", "masked_invalid", "masked_less", "masked_less_equal", "masked_not_equal", "masked_object", "masked_outside", "masked_values", "masked_where", "max", "maximum_fill_value", "min", "minimum_fill_value", "ndim", "outer", "outer", "power", "ptp", "put", "putmask", "reshape", "resize", "right_shift", "round_", "round_", "set_fill_value", "shape", "size", "sort", "take", "transpose", "where"], ["amax", "amin", "expand_dims", "formatargspec", "getargspec", "iscomplexobj", "normalize_axis_tuple"]]}, {"name": "numpy.ma.extras", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\ma\\extras.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras"], ["numpy.lib.index_tricks", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy"]], "hasfunction": 2, "myfunction": [["_covhelper", "_ezclump", "_median", "apply_along_axis", "apply_over_axes", "average", "clump_masked", "clump_unmasked", "compress_cols", "compress_nd", "compress_rowcols", "compress_rows", "corrcoef", "count_masked", "cov", "ediff1d", "flatnotmasked_contiguous", "flatnotmasked_edges", "flatten_inplace", "in1d", "intersect1d", "isin", "issequence", "mask_cols", "mask_rows", "masked_all", "masked_all_like", "median", "ndenumerate", "notmasked_contiguous", "notmasked_edges", "polyfit", "setdiff1d", "setxor1d", "union1d", "unique", "vander"], ["_ureduce", "array", "asarray", "concatenate", "dot", "filled", "get_masked_subclass", "getdata", "getmask", "getmaskarray", "make_mask_descr", "mask_or", "mask_rowcols", "normalize_axis_tuple", "sort"]]}, {"name": "numpy.polynomial", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.polynomial.chebyshev", "numpy.polynomial.hermite", "numpy.polynomial.hermite_e", "numpy.polynomial.laguerre", "numpy.polynomial.legendre", "numpy.polynomial.polynomial"]], "hasfunction": 2, "myfunction": [["set_default_printstyle"], []]}, {"name": "numpy.polynomial._polybase", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\_polybase.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial._polybase"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.polynomial.chebyshev", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\chebyshev.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.chebyshev"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_cseries_to_zseries", "_zseries_der", "_zseries_div", "_zseries_int", "_zseries_mul", "_zseries_to_cseries", "cheb2poly", "chebadd", "chebcompanion", "chebder", "chebdiv", "chebfit", "chebfromroots", "chebgauss", "chebgrid2d", "chebgrid3d", "chebint", "chebinterpolate", "chebline", "chebmul", "chebmulx", "chebpow", "chebpts1", "chebpts2", "chebroots", "chebsub", "chebval", "chebval2d", "chebval3d", "chebvander", "chebvander2d", "chebvander3d", "chebweight", "poly2cheb"], ["trimcoef"]]}, {"name": "numpy.polynomial.hermite", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\hermite.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.hermite"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_normed_hermite_n", "herm2poly", "hermadd", "hermcompanion", "hermder", "hermdiv", "hermfit", "hermfromroots", "hermgauss", "hermgrid2d", "hermgrid3d", "hermint", "hermline", "hermmul", "hermmulx", "hermpow", "hermroots", "hermsub", "hermval", "hermval2d", "hermval3d", "hermvander", "hermvander2d", "hermvander3d", "hermweight", "poly2herm"], ["trimcoef"]]}, {"name": "numpy.polynomial.hermite_e", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\hermite_e.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.hermite_e"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_normed_hermite_e_n", "herme2poly", "hermeadd", "hermecompanion", "hermeder", "hermediv", "hermefit", "hermefromroots", "hermegauss", "hermegrid2d", "hermegrid3d", "hermeint", "hermeline", "hermemul", "hermemulx", "hermepow", "hermeroots", "hermesub", "hermeval", "hermeval2d", "hermeval3d", "hermevander", "hermevander2d", "hermevander3d", "hermeweight", "poly2herme"], ["trimcoef"]]}, {"name": "numpy.polynomial.laguerre", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\laguerre.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.laguerre"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["lag2poly", "lagadd", "lagcompanion", "lagder", "lagdiv", "lagfit", "lagfromroots", "laggauss", "laggrid2d", "laggrid3d", "lagint", "lagline", "lagmul", "lagmulx", "lagpow", "lagroots", "lagsub", "lagval", "lagval2d", "lagval3d", "lagvander", "lagvander2d", "lagvander3d", "lagweight", "poly2lag"], ["trimcoef"]]}, {"name": "numpy.polynomial.legendre", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\legendre.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.legendre"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["leg2poly", "legadd", "legcompanion", "legder", "legdiv", "legfit", "legfromroots", "leggauss", "leggrid2d", "leggrid3d", "legint", "legline", "legmul", "legmulx", "legpow", "legroots", "legsub", "legval", "legval2d", "legval3d", "legvander", "legvander2d", "legvander3d", "legweight", "poly2leg"], ["trimcoef"]]}, {"name": "numpy.polynomial.polynomial", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\polynomial.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.polynomial"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["polyadd", "polycompanion", "polyder", "polydiv", "polyfit", "polyfromroots", "polygrid2d", "polygrid3d", "polyint", "polyline", "polymul", "polymulx", "polypow", "polyroots", "polysub", "polyval", "polyval2d", "polyval3d", "polyvalfromroots", "polyvander", "polyvander2d", "polyvander3d"], ["trimcoef"]]}, {"name": "numpy.polynomial.polyutils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\polynomial\\polyutils.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.polyutils"], []], "hasfunction": 2, "myfunction": [["_add", "_deprecate_as_int", "_div", "_fit", "_fromroots", "_gridnd", "_nth_slice", "_pow", "_sub", "_valnd", "_vander_nd", "_vander_nd_flat", "as_series", "format_float", "getdomain", "mapdomain", "mapparms", "trimcoef", "trimseq"], []]}, {"name": "numpy.random", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.random.bit_generator", "numpy.random._generator", "numpy.random._mt19937", "numpy.random._pcg64", "numpy.random._pcg64", "numpy.random._philox", "numpy.random.mtrand", "numpy.random._sfc64", "numpy.random.bit_generator"]], "hasfunction": 2, "myfunction": [["__RandomState_ctor"], []]}, {"name": "numpy.random._bounded_integers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_bounded_integers.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._common", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_common.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], ["importlib._bootstrap"]], "hasfunction": 2, "myfunction": [[], ["namedtuple"]]}, {"name": "numpy.random._generator", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_generator.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._generator"], ["numpy.random._pcg64", "collections.abc"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._mt19937", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_mt19937.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._mt19937"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._pcg64", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_pcg64.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._pcg64", "numpy.random._pcg64"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._philox", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_philox.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._philox"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._pickle", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_pickle.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy.random._generator", "numpy.random._mt19937", "numpy.random._pcg64", "numpy.random._pcg64", "numpy.random._philox", "numpy.random.mtrand", "numpy.random._sfc64"]], "hasfunction": 2, "myfunction": [["__bit_generator_ctor", "__generator_ctor", "__randomstate_ctor"], []]}, {"name": "numpy.random._sfc64", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\_sfc64.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._sfc64"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random.bit_generator", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\bit_generator.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator"], ["itertools"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random.mtrand", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\random\\mtrand.cp38-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random.mtrand"], ["collections.abc", "numpy.random._mt19937"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.core.records", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\core\\records.py", "layer": 1, "hasclass": 2, "myclass": [[], ["collections", "numpy", "numpy", "contextlib", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_deprecate_shape_0_as_None", "find_duplicate", "get_remaining_size"], ["_get_legacy_print_mode", "array", "fromarrays", "fromfile", "fromrecords", "fromstring", "set_module"]]}, {"name": "numpy.testing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.testing._private.utils", "numpy.testing._private.utils", "unittest.case", "unittest.case", "numpy.testing._private.nosetester", "numpy.testing._private.utils", "numpy.testing._private.utils"]], "hasfunction": 2, "myfunction": [[], ["<lambda>", "_assert_valid_refcount", "_gen_alignment_data", "assert_", "assert_allclose", "assert_almost_equal", "assert_approx_equal", "assert_array_almost_equal", "assert_array_almost_equal_nulp", "assert_array_compare", "assert_array_equal", "assert_array_less", "assert_array_max_ulp", "assert_equal", "assert_no_gc_cycles", "assert_no_warnings", "assert_raises", "assert_raises_regex", "assert_string_equal", "assert_warns", "break_cycles", "build_err_msg", "decorate_methods", "jiffies", "measure", "memusage", "print_assert_equal", "raises", "run_module_suite", "rundocs", "runstring", "tempdir", "temppath"]]}, {"name": "numpy.testing._private", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\_private\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.testing._private.decorators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\_private\\decorators.py", "layer": 3, "hasclass": 2, "myclass": [[], ["unittest.case"]], "hasfunction": 2, "myfunction": [["skip_decorator", "deprecated", "knownfailureif", "parametrize", "setastest", "skipif", "slow"], ["assert_warns"]]}, {"name": "numpy.testing._private.extbuild", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\_private\\extbuild.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_c_compile", "_convert_str_to_file", "_make_methods", "_make_source", "build", "build_and_import_extension", "compile_extension_module", "get_so_suffix"], []]}, {"name": "numpy.testing._private.nosetester", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\_private\\nosetester.py", "layer": 3, "hasclass": 2, "myclass": [["numpy.testing._private.nosetester"], ["numpy.testing._private.utils"]], "hasfunction": 2, "myfunction": [["_numpy_tester", "get_package_name", "run_module_suite"], ["import_nose"]]}, {"name": "numpy.testing._private.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\testing\\_private\\utils.py", "layer": 3, "hasclass": 2, "myclass": [["numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils"], ["unittest.case", "_io", "warnings", "numpy", "numpy", "numpy", "functools"]], "hasfunction": 2, "myfunction": [["GetPerformanceAttributes", "<lambda>", "_assert_no_gc_cycles_context", "_assert_no_warnings_context", "_assert_valid_refcount", "_assert_warns_context", "_gen_alignment_data", "_get_glibc_version", "_get_mem_available", "<lambda>", "_integer_repr", "_no_tracing", "_parse_size", "assert_", "assert_allclose", "assert_almost_equal", "assert_approx_equal", "assert_array_almost_equal", "assert_array_almost_equal_nulp", "assert_array_compare", "assert_array_equal", "assert_array_less", "assert_array_max_ulp", "assert_equal", "assert_no_gc_cycles", "assert_no_warnings", "assert_raises", "assert_raises_regex", "assert_string_equal", "assert_warns", "break_cycles", "build_err_msg", "check_free_memory", "decorate_methods", "gisfinite", "gisinf", "gisnan", "import_nose", "integer_repr", "jiffies", "measure", "memusage", "nulp_diff", "print_assert_equal", "raises", "requires_memory", "rundocs", "runstring", "tempdir", "temppath"], ["array_repr", "mkdtemp", "mkstemp", "wraps"]]}, {"name": "numpy.version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\numpy\\version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "packaging", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\packaging\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "packaging._structures", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\packaging\\_structures.py", "layer": 1, "hasclass": 2, "myclass": [["packaging._structures", "packaging._structures"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "packaging.version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\packaging\\version.py", "layer": 1, "hasclass": 2, "myclass": [["packaging.version", "packaging.version", "packaging.version", "packaging.version"], ["packaging._structures", "typing", "packaging._structures", "typing"]], "hasfunction": 2, "myfunction": [["_cmpkey", "_parse_letter_version", "_parse_local_version", "parse"], []]}, {"name": "pip", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pip\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "pluggy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["pluggy._result", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._manager", "pluggy._manager", "pluggy._result"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "pluggy._callers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_callers.py", "layer": 1, "hasclass": 2, "myclass": [[], ["pluggy._result", "pluggy._hooks", "pluggy._result"]], "hasfunction": 2, "myfunction": [["_multicall"], ["_raise_wrapfail", "cast"]]}, {"name": "pluggy._hooks", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_hooks.py", "layer": 1, "hasclass": 2, "myclass": [["pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks"], ["builtins", "pluggy._result", "typing", "typing", "builtins"]], "hasfunction": 2, "myfunction": [["normalize_hookimpl_opts", "varnames"], ["final", "overload"]]}, {"name": "pluggy._manager", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_manager.py", "layer": 1, "hasclass": 2, "myclass": [["pluggy._manager", "pluggy._manager", "pluggy._manager"], ["pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._hooks", "pluggy._result", "builtins", "pluggy._hooks"]], "hasfunction": 2, "myfunction": [["_formatdef", "_warn_for_function"], ["_multicall", "cast", "normalize_hookimpl_opts"]]}, {"name": "pluggy._result", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_result.py", "layer": 1, "hasclass": 2, "myclass": [["pluggy._result", "pluggy._result", "pluggy._result"], ["typing", "builtins", "typing"]], "hasfunction": 2, "myfunction": [["_raise_wrapfail"], ["cast", "final"]]}, {"name": "pluggy._tracing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_tracing.py", "layer": 1, "hasclass": 2, "myclass": [["pluggy._tracing", "pluggy._tracing"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "pluggy._version", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pluggy\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "pyparsing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["pyparsing"], ["abc", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "collections.abc", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "enum", "pyparsing.exceptions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "collections.abc", "collections.abc", "pyparsing.core", "pyparsing.util", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "collections.abc", "pyparsing.core", "collections.abc", "collections.abc", "typing", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.actions", "pyparsing.helpers", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.exceptions", "pyparsing.results", "pyparsing.exceptions", "pyparsing.core", "pathlib", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "typing", "pyparsing.core", "pyparsing.core", "typing", "pyparsing.util", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "functools", "pyparsing.common", "collections", "operator", "pyparsing.helpers", "pyparsing.unicode", "pyparsing.common", "pyparsing.testing", "pyparsing.unicode", "pyparsing.testing", "pyparsing.unicode", "pyparsing.unicode"]], "hasfunction": 2, "myfunction": [[], ["RLock", "abstractmethod", "autoname_elements", "cast", "conditionAsParseAction", "condition_as_parse_action", "countedArray", "counted_array", "delimitedList", "delimited_list", "dictOf", "dict_of", "disable_diag", "enable_all_warnings", "enable_diag", "indentedBlock", "infixNotation", "infix_notation", "locatedExpr", "lru_cache", "makeHTMLTags", "makeXMLTags", "make_html_tags", "make_xml_tags", "matchOnlyAtCol", "matchPreviousExpr", "matchPreviousLiteral", "match_only_at_col", "match_previous_expr", "match_previous_literal", "nestedExpr", "nested_expr", "nullDebugAction", "null_debug_action", "oneOf", "one_of", "originalTextFor", "original_text_for", "removeQuotes", "remove_quotes", "replaceHTMLEntity", "replaceWith", "replace_html_entity", "replace_with", "replaced_by_pep8", "srange", "tokenMap", "token_map", "traceParseAction", "trace_parse_action", "ungroup", "withAttribute", "withClass", "with_attribute", "with_class", "wraps"]]}, {"name": "pyparsing.actions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\actions.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.actions"], ["pyparsing.exceptions"]], "hasfunction": 2, "myfunction": [["matchOnlyAtCol", "match_only_at_col", "removeQuotes", "remove_quotes", "replaceWith", "replace_with", "withAttribute", "withClass", "with_attribute", "with_class"], ["replaced_by_pep8"]]}, {"name": "pyparsing.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\core.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core"], ["abc", "enum", "pyparsing.exceptions", "collections.abc", "typing", "pyparsing.actions", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.results", "pyparsing.exceptions", "pathlib", "pyparsing.exceptions", "typing", "pyparsing.util", "pyparsing.util", "pyparsing.results", "pyparsing.util", "pyparsing.util", "builtins", "functools", "collections", "operator", "pyparsing.unicode", "pyparsing.unicode"]], "hasfunction": 2, "myfunction": [["_default_exception_debug_action", "_default_start_debug_action", "_default_success_debug_action", "_should_enable_warnings", "_trim_arity", "autoname_elements", "conditionAsParseAction", "condition_as_parse_action", "disable_diag", "enable_all_warnings", "enable_diag", "nullDebugAction", "null_debug_action", "srange", "tokenMap", "token_map", "traceParseAction", "trace_parse_action"], ["RLock", "_collapse_string_to_ranges", "_escape_regex_range_chars", "_flatten", "abstractmethod", "cast", "matchOnlyAtCol", "match_only_at_col", "removeQuotes", "remove_quotes", "replaceWith", "replace_with", "replaced_by_pep8", "withAttribute", "withClass", "with_attribute", "with_class", "wraps"]]}, {"name": "pyparsing.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\exceptions.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.exceptions", "pyparsing.exceptions"], ["pyparsing.unicode"]], "hasfunction": 2, "myfunction": [[], ["_collapse_string_to_ranges", "replaced_by_pep8"]]}, {"name": "pyparsing.helpers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\helpers.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.helpers", "pyparsing.helpers"], ["abc", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "enum", "pyparsing.exceptions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "collections.abc", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "typing", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.actions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.exceptions", "pyparsing.results", "pyparsing.exceptions", "pyparsing.core", "pathlib", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.exceptions", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "typing", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "pyparsing.core", "functools", "collections", "operator", "pyparsing.unicode", "pyparsing.unicode"]], "hasfunction": 2, "myfunction": [["_makeTags", "countedArray", "counted_array", "dictOf", "dict_of", "indentedBlock", "infixNotation", "infix_notation", "locatedExpr", "makeHTMLTags", "makeXMLTags", "make_html_tags", "make_xml_tags", "matchPreviousExpr", "matchPreviousLiteral", "match_previous_expr", "match_previous_literal", "nestedExpr", "nested_expr", "oneOf", "one_of", "originalTextFor", "original_text_for", "replaceHTMLEntity", "replace_html_entity", "ungroup"], ["RLock", "_escape_regex_range_chars", "_flatten", "abstractmethod", "autoname_elements", "cast", "conditionAsParseAction", "condition_as_parse_action", "delimitedList", "delimited_list", "disable_diag", "enable_all_warnings", "enable_diag", "matchOnlyAtCol", "match_only_at_col", "nullDebugAction", "null_debug_action", "removeQuotes", "remove_quotes", "replaceWith", "replace_with", "replaced_by_pep8", "srange", "tokenMap", "token_map", "traceParseAction", "trace_parse_action", "withAttribute", "withClass", "with_attribute", "with_class", "wraps"]]}, {"name": "pyparsing.results", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\results.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.results", "pyparsing.results"], ["collections.abc", "collections.abc", "collections.abc", "collections.abc", "collections.abc", "collections.abc", "builtins"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "pyparsing.util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pyparsing\\util.py", "layer": 1, "hasclass": 2, "myclass": [["pyparsing.util", "pyparsing.util", "pyparsing.util", "pyparsing.util", "pyparsing.util"], ["typing"]], "hasfunction": 2, "myfunction": [["_collapse_string_to_ranges", "_escape_regex_range_chars", "_flatten", "_make_synonym_function", "replaced_by_pep8"], ["cast", "lru_cache", "wraps"]]}, {"name": "pytest", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\pytest\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest", "pytest"], ["_pytest.cacheprovider", "_pytest.runner", "_pytest.capture", "_pytest.python", "_pytest.reports", "_pytest.nodes", "_pytest.config", "_pytest.doctest", "_pytest._code.code", "_pytest.config", "_pytest.nodes", "_pytest.fixtures", "_pytest.fixtures", "_pytest.python", "_pytest.pytester", "_pytest.nodes", "_pytest.pytester", "_pytest.logging", "_pytest.mark.structures", "_pytest.mark.structures", "_pytest.mark.structures", "_pytest.python", "_pytest.python", "_pytest.monkeypatch", "_pytest.config.argparsing", "_pytest.python", "_pytest.config.argparsing", "_pytest.config", "_pytest.pytester", "_pytest.pytester", "_pytest.pytester", "_pytest.main", "_pytest.stash", "_pytest.stash", "_pytest.tmpdir", "_pytest.legacypath", "_pytest.reports", "_pytest.terminal", "_pytest.legacypath", "_pytest.config.exceptions", "_pytest.recwarn", "_pytest.debugging", "_pytest.config"]], "hasfunction": 2, "myfunction": [["__getattr__"], ["approx", "console_main", "deprecated_call", "exit", "fail", "fixture", "freeze_includes", "importorskip", "main", "param", "raises", "register_assert_rewrite", "skip", "warns", "xfail", "yield_fixture"]]}, {"name": "setuptools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\setuptools\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["setuptools", "setuptools", "setuptools"], ["setuptools.dist", "distutils.errors", "setuptools.extension", "setuptools.dist", "setuptools.depends", "setuptools._deprecation_warning", "distutils.cmd", "builtins", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["_find_all_simple", "_install_setup_requires", "findall", "setup"], ["convert_path", "fnmatchcase"]]}, {"name": "setuptools._deprecation_warning", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\setuptools\\_deprecation_warning.py", "layer": 1, "hasclass": 2, "myclass": [["setuptools._deprecation_warning"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "setuptools._vendor", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\setuptools\\_vendor\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "setuptools._vendor.packaging", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\setuptools\\_vendor\\packaging\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "setuptools._vendor.six", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\setuptools\\_vendor\\six.py", "layer": 2, "hasclass": 2, "myclass": [["setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six", "setuptools._vendor.six"], ["_io", "builtins", "_io", "builtins", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["_add_doc", "_import_module", "add_metaclass", "add_move", "assertCountEqual", "assertRaisesRegex", "assertRegex", "b", "create_unbound_method", "get_unbound_function", "iteritems", "iterkeys", "iterlists", "itervalues", "python_2_unicode_compatible", "raise_from", "remove_move", "reraise", "u", "with_metaclass"], ["wraps"]]}, {"name": "six", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\six.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["six", "six", "six", "six", "six", "six", "six", "six", "six", "six", "six", "six"], ["_io", "builtins", "_io", "builtins", "builtins", "builtins"]], "hasfunction": 2, "myfunction": [["_add_doc", "_import_module", "add_metaclass", "add_move", "assertCountEqual", "assertNotRegex", "assertRaisesRegex", "assertRegex", "b", "create_unbound_method", "ensure_binary", "ensure_str", "ensure_text", "get_unbound_function", "iteritems", "iterkeys", "iterlists", "itervalues", "python_2_unicode_compatible", "raise_from", "remove_move", "reraise", "u", "with_metaclass"], ["spec_from_loader", "wraps"]]}, {"name": "sympy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.calculus.accumulationbounds", "sympy.core.add", "sympy.matrices.expressions.adjoint", "sympy.polys.domains.algebraicfield", "sympy.core.numbers", "sympy.logic.boolalg", "sympy.assumptions.assume", "sympy.tensor.array.dense_ndim_array", "sympy.assumptions.assume", "sympy.core.basic", "sympy.core.expr", "sympy.polys.polyerrors", "sympy.core.basic", "sympy.matrices.expressions.blockmatrix", "sympy.matrices.expressions.blockmatrix", "sympy.polys.rootoftools", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.geometry.ellipse", "sympy.polys.polyerrors", "sympy.sets.sets", "sympy.polys.domains.complexfield", "sympy.sets.fancysets", "sympy.polys.rootoftools", "sympy.polys.polyerrors", "sympy.sets.conditionset", "sympy.sets.contains", "sympy.integrals.transforms", "sympy.geometry.curve", "sympy.matrices.matrices", "sympy.tensor.array.dense_ndim_array", "sympy.core.function", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.core.containers", "sympy.functions.special.delta_functions", "sympy.sets.sets", "sympy.polys.domains.domain", "sympy.polys.polyerrors", "sympy.matrices.expressions.dotproduct", "sympy.core.symbol", "sympy.simplify.epathtools", "sympy.functions.special.error_functions", "sympy.geometry.ellipse", "sympy.core.relational", "sympy.core.relational", "sympy.logic.boolalg", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.core.expr", "sympy.polys.domains.expressiondomain", "sympy.polys.polyerrors", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.pythonfinitefield", "sympy.functions.combinatorial.factorials", "sympy.polys.domains.finitefield", "sympy.sets.sets", "sympy.polys.polyerrors", "sympy.core.numbers", "sympy.integrals.transforms", "sympy.polys.domains.fractionfield", "sympy.core.function", "sympy.core.function", "sympy.matrices.expressions.funcmatrix", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.gmpyrationalfield", "sympy.core.relational", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.geometry.exceptions", "sympy.core.relational", "sympy.polys.polytools", "sympy.core.relational", "sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.hadamard", "sympy.integrals.transforms", "sympy.functions.special.delta_functions", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.logic.boolalg", "sympy.matrices.expressions.special", "sympy.tensor.indexed", "sympy.sets.fancysets", "sympy.matrices.immutable", "sympy.tensor.array.dense_ndim_array", "sympy.matrices.immutable", "sympy.matrices.immutable", "sympy.tensor.array.sparse_ndim_array", "sympy.logic.boolalg", "sympy.tensor.indexed", "sympy.tensor.indexed", "sympy.core.numbers", "sympy.polys.domains.integerring", "sympy.integrals.integrals", "sympy.sets.sets", "sympy.sets.sets", "sympy.matrices.expressions.inverse", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.laplace", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.polys.polyerrors", "sympy.functions.special.tensor_functions", "sympy.matrices.expressions.kronecker", "sympy.core.function", "sympy.functions.elementary.exponential", "sympy.integrals.laplace", "sympy.core.relational", "sympy.core.relational", "sympy.functions.special.tensor_functions", "sympy.functions.special.error_functions", "sympy.series.limits", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.core.relational", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.dense", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.permutation", "sympy.matrices.expressions.slice", "sympy.matrices.expressions.matexpr", "sympy.functions.elementary.miscellaneous", "sympy.integrals.transforms", "sympy.functions.elementary.miscellaneous", "sympy.core.mod", "sympy.polys.monomials", "sympy.core.mul", "sympy.polys.polyerrors", "sympy.matrices.dense", "sympy.tensor.array.dense_ndim_array", "sympy.matrices.dense", "sympy.matrices.sparse", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.ndim_array", "sympy.logic.boolalg", "sympy.core.relational", "sympy.matrices.common", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.core.numbers", "sympy.core.numbers", "sympy.series.order", "sympy.sets.ordinals", "sympy.matrices.expressions.special", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyoptions", "sympy.logic.boolalg", "sympy.series.order", "sympy.sets.ordinals", "sympy.geometry.parabola", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.permutation", "sympy.functions.elementary.piecewise", "sympy.geometry.plane", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.point", "sympy.core.function", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.geometry.polygon", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.polynomialring", "sympy.core.power", "sympy.sets.powerset", "sympy.core.evalf", "sympy.assumptions.assume", "sympy.concrete.products", "sympy.sets.sets", "sympy.polys.polytools", "sympy.polys.domains.pythonfinitefield", "sympy.polys.domains.pythonintegerring", "sympy.external.pythonmpq", "sympy.polys.domains.gmpyrationalfield", "sympy.polys.domains.pythonrationalfield", "sympy.algebras.quaternion", "sympy.sets.fancysets", "sympy.core.numbers", "sympy.polys.domains.rationalfield", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.polys.domains.realfield", "sympy.core.numbers", "sympy.polys.polyerrors", "sympy.geometry.polygon", "sympy.core.relational", "sympy.functions.elementary.miscellaneous", "sympy.functions.combinatorial.factorials", "sympy.polys.rootoftools", "sympy.polys.rootoftools", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.series.sequences", "sympy.series.sequences", "sympy.series.sequences", "sympy.series.sequences", "sympy.sets.sets", "sympy.matrices.common", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.ntheory.generate", "sympy.integrals.transforms", "sympy.functions.special.singularity_functions", "sympy.matrices.sparse", "sympy.tensor.array.sparse_ndim_array", "sympy.printing.str", "sympy.core.relational", "sympy.core.relational", "sympy.core.function", "sympy.concrete.summations", "sympy.core.symbol", "sympy.sets.sets", "sympy.core.sympify", "sympy.printing.tableform", "sympy.matrices.expressions.trace", "sympy.matrices.expressions.transpose", "sympy.geometry.polygon", "sympy.core.containers", "sympy.core.relational", "sympy.core.expr", "sympy.polys.polyerrors", "sympy.sets.sets", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.function", "sympy.logic.boolalg", "sympy.functions.special.spherical_harmonics", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.pythonintegerring", "sympy.matrices.expressions.special", "sympy.functions.special.spherical_harmonics", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.complexes", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.combinatorial.numbers", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "itertools", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.gamma_functions", "sympy.functions.special.zeta_functions", "sympy.ntheory.factor_", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.elementary.integers", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.polynomials", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.combinatorial.numbers", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.special.polynomials", "sympy.functions.special.bessel", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.zeta_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.hyper", "sympy.ntheory.residue_ntheory", "sympy.functions.combinatorial.numbers", "sympy.functions.special.gamma_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.special.gamma_functions", "sympy.functions.special.zeta_functions", "sympy.core.traversal", "sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.generate", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.ntheory.factor_", "sympy.functions.combinatorial.factorials", "sympy.functions.special.zeta_functions", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.zeta_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.ntheory.factor_", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.numbers", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.core.multidimensional", "sympy.functions.special.bessel", "sympy.functions.special.zeta_functions"]], "hasfunction": 2, "myfunction": [["__sympy_debug"], ["E1", "Eijk", "GramSchmidt", "LC", "LM", "LT", "N", "POSform", "SOPform", "Ynm_c", "abundance", "apart", "apart_list", "apply_finite_diff", "approximants", "are_similar", "arity", "ask", "assemble_partfrac_list", "assuming", "banded", "besselsimp", "binomial_coefficients", "binomial_coefficients_list", "block_collapse", "blockcut", "bool_map", "bottom_up", "bspline_basis_set", "func_wrapper", "cancel", "capture", "casoratian", "cbrt", "ccode", "centroid", "chebyshevt_poly", "chebyshevu_poly", "check_assumptions", "checkodesol", "checkpdesol", "checksol", "classify_ode", "classify_pde", "closest_points", "cofactors", "collect", "collect_const", "combsimp", "comp", "compose", "composite", "compositepi", "construct_domain", "content", "continued_fraction", "continued_fraction_convergents", "continued_fraction_iterator", "continued_fraction_periodic", "continued_fraction_reduce", "convex_hull", "convolution", "cosine_transform", "count_ops", "count_roots", "covering_product", "cse", "cxxcode", "cycle_length", "cyclotomic_poly", "decompogen", "decompose", "default_sort_key", "deg", "degree", "degree_list", "denom", "derive_by_array", "det", "det_quick", "diag", "diagonalize_vector", "dict_merge", "diff", "difference_delta", "differentiate_finite", "diophantine", "discrete_log", "discriminant", "div", "divisor_count", "divisors", "dotprint", "dsolve", "egyptian_fraction", "epath", "euler_equations", "evaluate", "expand", "expand_complex", "expand_func", "expand_log", "expand_mul", "expand_multinomial", "expand_power_base", "expand_power_exp", "expand_trig", "exptrigsimp", "exquo", "eye", "factor", "factor_list", "factor_nc", "factor_terms", "factorint", "factorrat", "failing_assumptions", "farthest_points", "fcode", "fft", "field", "field_isomorphism", "filldedent", "finite_diff_weights", "flatten", "fourier_series", "fourier_transform", "fps", "fraction", "fu", "fwht", "galois_group", "gammasimp", "gcd", "gcd_list", "gcd_terms", "gcdex", "get_contraction_structure", "get_indices", "gff", "gff_list", "glsl_code", "groebner", "ground_roots", "group", "gruntz", "hadamard_product", "half_gcdex", "hankel_transform", "has_dups", "has_variety", "hermite_poly", "hermite_prob_poly", "hessian", "homogeneous_order", "horner", "hyperexpand", "hypersimilar", "hypersimp", "idiff", "ifft", "ifwht", "ilcm", "imageset", "init_printing", "init_session", "integer_log", "integer_nthroot", "integrate", "interactive_traversal", "interpolate", "interpolating_poly", "interpolating_spline", "intersecting_product", "intersection", "intervals", "intt", "inv_quick", "inverse_cosine_transform", "inverse_fourier_transform", "inverse_hankel_transform", "inverse_laplace_transform", "inverse_mellin_transform", "inverse_mobius_transform", "inverse_sine_transform", "invert", "is_abundant", "is_amicable", "is_convex", "is_decreasing", "is_deficient", "is_increasing", "is_mersenne_prime", "is_monotonic", "is_nthpow_residue", "is_perfect", "is_primitive_root", "is_quad_residue", "is_strictly_decreasing", "is_strictly_increasing", "is_zero_dimensional", "isolate", "isprime", "itermonomials", "jacobi_normalized", "jacobi_poly", "jacobi_symbol", "jn_zeros", "jordan_cell", "jscode", "julia_code", "kronecker_product", "kroneckersimp", "laguerre_poly", "lambdify", "laplace_transform", "lazy_function", "lcm", "lcm_list", "legendre_poly", "legendre_symbol", "limit", "limit_seq", "line_integrate", "linear_eq_to_matrix", "linsolve", "list2numpy", "logcombine", "maple_code", "mathematica_code", "matrix2numpy", "matrix_multiply_elementwise", "matrix_symbols", "maximum", "mellin_transform", "memoize_property", "mersenne_prime_exponent", "minimal_polynomial", "minimum", "minpoly", "mobius_transform", "mod_inverse", "monic", "multiline_latex", "multinomial_coefficients", "multiplicity", "n_order", "nextprime", "nfloat", "nonlinsolve", "not_empty_in", "npartitions", "nroots", "nsimplify", "nsolve", "nth_power_roots_poly", "nthroot_mod", "ntt", "numbered_symbols", "numer", "octave_code", "ode_order", "ones", "ordered", "pager_print", "parallel_poly_from_expr", "parse_expr", "pde_separate", "pde_separate_add", "pde_separate_mul", "pdiv", "pdsolve", "per", "perfect_power", "periodicity", "permutedims", "pexquo", "piecewise_exclusive", "piecewise_fold", "plot", "plot_implicit", "plot_parametric", "polarify", "pollard_pm1", "pollard_rho", "poly", "poly_from_expr", "posify", "postfixes", "postorder_traversal", "powdenest", "powsimp", "pretty_print", "pretty_try_use_unicode", "pretty_use_unicode", "pquo", "prefixes", "prem", "pretty_print", "preview", "prevprime", "prime", "prime_decomp", "prime_valuation", "primefactors", "primerange", "primitive", "primitive_element", "primitive_root", "primorial", "print_ccode", "print_fcode", "print_glsl", "print_gtk", "print_jscode", "print_latex", "print_maple_code", "print_mathml", "print_python", "print_rcode", "print_tree", "prod", "product", "proper_divisor_count", "proper_divisors", "public", "pycode", "python", "quadratic_congruence", "quadratic_residues", "quo", "rad", "radsimp", "randMatrix", "random_poly", "randprime", "rational_interpolate", "ratsimp", "ratsimpmodprime", "rcode", "rcollect", "real_root", "real_roots", "reduce_abs_inequalities", "reduce_abs_inequality", "reduce_inequalities", "reduced", "refine", "refine_root", "register_handler", "rem", "remove_handler", "reshape", "residue", "resultant", "ring", "root", "rootof", "roots", "rot_axis1", "rot_axis2", "rot_axis3", "rot_ccw_axis1", "rot_ccw_axis2", "rot_ccw_axis3", "rot_givens", "rotations", "round_two", "rsolve", "rsolve_hyper", "rsolve_poly", "rsolve_ratio", "rust_code", "satisfiable", "separatevars", "sequence", "series", "seterr", "sfield", "shape", "sift", "signsimp", "simplify", "simplify_logic", "sine_transform", "singularities", "singularityintegrate", "smtlib_code", "solve", "solve_linear", "solve_linear_system", "solve_linear_system_LU", "solve_poly_inequality", "solve_poly_system", "solve_rational_inequalities", "solve_triangulated", "solve_undetermined_coeffs", "solve_univariate_inequality", "solveset", "sqf", "sqf_list", "sqf_norm", "sqf_part", "sqrt", "sqrt_mod", "sqrt_mod_iter", "sqrtdenest", "sring", "stationary_points", "sturm", "subresultants", "subsets", "substitution", "summation", "swinnerton_dyer_poly", "symarray", "symbols", "symmetric_poly", "symmetrize", "sympify", "take", "tensorcontraction", "tensordiagonal", "tensorproduct", "terms_gcd", "textplot", "threaded", "timed", "to_cnf", "to_dnf", "to_nnf", "to_number_field", "together", "topological_sort", "total_degree", "trace", "trailing", "trigsimp", "trunc", "unbranched_argument", "unflatten", "unpolarify", "use", "var", "variations", "vfield", "viete", "vring", "wronskian", "xfield", "xring", "xthreaded", "zeros"]]}, {"name": "sympy.algebras", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\algebras\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.algebras.quaternion"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.algebras.quaternion", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\algebras\\quaternion.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.algebras.quaternion"], ["sympy.core.expr", "sympy.matrices.dense", "sympy.core.numbers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_check_norm", "_is_extrinsic"], ["_sympify", "fuzzy_not", "fuzzy_or", "integrate", "is_eq", "prec_to_dps", "sqrt", "sympify", "trigsimp"]]}, {"name": "sympy.assumptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.assumptions.relation.binrel", "sympy.assumptions.assume", "sympy.assumptions.assume", "sympy.assumptions.relation.binrel", "sympy.assumptions.assume"]], "hasfunction": 2, "myfunction": [[], ["ask", "assuming", "refine", "register_handler", "remove_handler"]]}, {"name": "sympy.assumptions.ask_generated", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\ask_generated.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.assumptions.cnf"]], "hasfunction": 2, "myfunction": [["get_all_known_facts", "get_known_facts_dict"], ["func_wrapper"]]}, {"name": "sympy.assumptions.assume", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\assume.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.assumptions.assume", "sympy.assumptions.assume", "sympy.assumptions.assume", "sympy.assumptions.assume", "sympy.assumptions.assume"], ["sympy.logic.boolalg", "sympy.multipledispatch.dispatcher", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["assuming"], ["_sympify", "contextmanager", "get_class", "is_sequence", "str_signature", "sympy_deprecation_warning"]]}, {"name": "sympy.assumptions.cnf", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\cnf.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.assumptions.cnf", "sympy.assumptions.cnf", "sympy.assumptions.cnf", "sympy.assumptions.cnf", "sympy.assumptions.cnf"], ["sympy.logic.boolalg", "sympy.assumptions.assume", "sympy.core.relational", "sympy.logic.boolalg", "sympy.core.relational", "sympy.core.relational", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.relational", "sympy.core.relational", "sympy.logic.boolalg", "sympy.core.relational", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.assumptions.assume", "sympy.logic.boolalg", "sympy.logic.boolalg", "itertools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["distribute_AND_over_OR", "to_NNF"], []]}, {"name": "sympy.assumptions.relation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\relation\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.assumptions.relation.binrel", "sympy.assumptions.relation.binrel"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.assumptions.relation.binrel", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\assumptions\\relation\\binrel.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.assumptions.relation.binrel", "sympy.assumptions.relation.binrel"], ["sympy.assumptions.assume", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.logic.boolalg", "sympy.assumptions.assume"]], "hasfunction": 2, "myfunction": [[], ["ask", "conjuncts"]]}, {"name": "sympy.calculus", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\calculus\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.calculus.accumulationbounds"]], "hasfunction": 2, "myfunction": [[], ["apply_finite_diff", "differentiate_finite", "euler_equations", "finite_diff_weights", "is_convex", "is_decreasing", "is_increasing", "is_monotonic", "is_strictly_decreasing", "is_strictly_increasing", "maximum", "minimum", "not_empty_in", "periodicity", "singularities", "stationary_points"]]}, {"name": "sympy.calculus.accumulationbounds", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\calculus\\accumulationbounds.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.calculus.accumulationbounds", "sympy.calculus.accumulationbounds"], ["sympy.core.add", "sympy.logic.boolalg", "sympy.core.basic", "sympy.core.expr", "sympy.sets.sets", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.series.order", "sympy.core.power"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "_sympifyit", "dispatch", "is_ge", "is_gt", "is_le", "is_lt"]]}, {"name": "sympy.calculus.euler", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\calculus\\euler.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.function", "sympy.core.relational", "sympy.core.function", "sympy.core.symbol", "itertools"]], "hasfunction": 2, "myfunction": [["euler_equations"], ["diff", "iterable", "sympify"]]}, {"name": "sympy.calculus.finite_diff", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\calculus\\finite_diff.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.function", "sympy.core.function", "sympy.core.traversal"]], "hasfunction": 2, "myfunction": [["_as_finite_diff", "apply_finite_diff", "differentiate_finite", "finite_diff_weights"], ["iterable", "sympy_deprecation_warning"]]}, {"name": "sympy.calculus.util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\calculus\\util.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.calculus.accumulationbounds", "sympy.calculus.accumulationbounds", "sympy.sets.sets", "sympy.core.symbol", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.mod", "sympy.functions.elementary.piecewise", "sympy.core.power", "sympy.core.relational", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.sets.sets", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_periodicity", "continuous_domain", "function_range", "is_convex", "lcim", "maximum", "minimum", "not_empty_in", "periodicity", "stationary_points"], ["_sympify", "degree", "diff", "equal_valued", "expand_mul", "filldedent", "iterable", "lcm_list", "singularities"]]}, {"name": "sympy.concrete", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.concrete.products", "sympy.concrete.summations"]], "hasfunction": 2, "myfunction": [[], ["product", "summation"]]}, {"name": "sympy.concrete.expr_with_intlimits", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\expr_with_intlimits.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.concrete.expr_with_intlimits", "sympy.concrete.expr_with_intlimits"], ["sympy.core.relational", "sympy.concrete.expr_with_limits"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.concrete.expr_with_limits", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\expr_with_limits.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.concrete.expr_with_limits", "sympy.concrete.expr_with_limits"], ["sympy.core.add", "sympy.core.function", "sympy.logic.boolalg", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.tensor.indexed", "sympy.sets.sets", "sympy.matrices.matrices", "sympy.core.mul", "sympy.functions.elementary.piecewise", "sympy.sets.fancysets", "sympy.core.relational", "sympy.sets.sets", "sympy.core.symbol", "sympy.core.containers", "sympy.core.function"]], "hasfunction": 2, "myfunction": [["_common_new", "_process_limits"], ["flatten", "is_sequence", "piecewise_fold", "sift", "sympify", "sympy_deprecation_warning"]]}, {"name": "sympy.concrete.gosper", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\gosper.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.symbol", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["gosper_normal", "gosper_sum", "gosper_term"], ["factor", "is_sequence", "parallel_poly_from_expr", "symbols"]]}, {"name": "sympy.concrete.products", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\products.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.concrete.products"], ["sympy.core.function", "sympy.core.symbol", "sympy.core.expr", "sympy.concrete.expr_with_intlimits", "sympy.functions.special.tensor_functions", "sympy.core.mul", "sympy.functions.combinatorial.factorials", "sympy.concrete.summations", "sympy.core.symbol", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["product"], ["_dummy_with_inherited_properties_concrete", "factor_terms", "quo", "roots", "summation"]]}, {"name": "sympy.concrete.summations", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\concrete\\summations.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.concrete.summations"], ["sympy.calculus.accumulationbounds", "sympy.core.add", "sympy.concrete.expr_with_limits", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.concrete.expr_with_intlimits", "sympy.sets.sets", "sympy.core.numbers", "sympy.integrals.integrals", "sympy.sets.sets", "sympy.functions.special.tensor_functions", "sympy.core.mul", "sympy.series.order", "sympy.functions.elementary.piecewise", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.containers", "sympy.core.symbol", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "sympy.functions.special.hyper", "sympy.functions.elementary.exponential", "sympy.functions.special.zeta_functions"]], "hasfunction": 2, "myfunction": [["_dummy_with_inherited_properties_concrete", "_eval_matrix_sum", "_eval_sum_hyper", "eval_sum", "eval_sum_direct", "eval_sum_hyper", "eval_sum_residue", "eval_sum_symbolic", "summation", "telescopic", "telescopic_direct"], ["apart", "expand", "factor", "gosper_sum", "is_decreasing", "limit_seq", "ordered", "parallel_poly_from_expr", "residue", "sift", "symbols", "together"]]}, {"name": "sympy.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.numbers", "sympy.core.basic", "sympy.core.expr", "sympy.core.basic", "sympy.core.function", "sympy.core.containers", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.core.function", "sympy.core.function", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.numbers", "sympy.core.function", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.mod", "sympy.core.mul", "sympy.core.relational", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.function", "sympy.core.power", "sympy.core.evalf", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.function", "sympy.core.symbol", "sympy.core.sympify", "sympy.core.containers", "sympy.core.relational", "sympy.core.expr", "sympy.core.symbol", "sympy.core.function", "sympy.core.traversal", "sympy.core.multidimensional"]], "hasfunction": 2, "myfunction": [[], ["N", "arity", "assumptions", "bottom_up", "func_wrapper", "check_assumptions", "common_assumptions", "comp", "count_ops", "default_sort_key", "diff", "evaluate", "expand", "expand_complex", "expand_func", "expand_log", "expand_mul", "expand_multinomial", "expand_power_base", "expand_power_exp", "expand_trig", "factor_nc", "factor_terms", "failing_assumptions", "gcd_terms", "ilcm", "integer_log", "integer_nthroot", "mod_inverse", "nfloat", "ordered", "postorder_traversal", "prod", "seterr", "symbols", "sympify", "use", "var"]]}, {"name": "sympy.core._print_helpers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\_print_helpers.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.printing.defaults"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.add", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\add.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.add"], ["sympy.core.operations", "sympy.core.operations", "sympy.core.basic", "sympy.core.expr", "sympy.core.mul", "sympy.core.numbers", "operator", "collections"]], "hasfunction": 2, "myfunction": [["_addsort", "_could_extract_minus_sign", "_unevaluated_Add"], ["_fuzzy_group", "_keep_coeff", "_unevaluated_Mul", "func_wrapper", "equal_valued", "fuzzy_not", "fuzzy_or", "ilcm", "is_sequence", "sift"]]}, {"name": "sympy.core.alphabets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\alphabets.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.assumptions_generated", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\assumptions_generated.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.basic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\basic.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.basic", "sympy.core.basic"], ["sympy.core.kind", "collections.abc", "sympy.printing.defaults", "sympy.core.sympify", "sympy.core.traversal", "itertools", "collections", "sympy.core.traversal", "itertools"]], "hasfunction": 2, "myfunction": [["_aresame", "_atomic", "_make_find_query", "_ne", "_old_compare", "as_Basic"], ["_prepare_class_assumptions", "_sympify", "func_wrapper", "deprecated", "filldedent", "func_name", "getmro", "iterable", "iterargs", "iterfreeargs", "numbered_symbols", "ordered", "sympify", "sympy_deprecation_warning"]]}, {"name": "sympy.core.cache", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\cache.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.cache"], []], "hasfunction": 2, "myfunction": [["__cacheit", "__cacheit_debug", "__cacheit_nocache", "_getenv", "cached_property", "func_wrapper", "lazy_function"], ["import_module", "lru_cache", "wraps"]]}, {"name": "sympy.core.containers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\containers.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.containers", "sympy.core.containers", "sympy.core.containers", "sympy.core.containers"], ["sympy.core.basic", "sympy.core.kind", "collections.abc", "collections", "sympy.core.sympify"]], "hasfunction": 2, "myfunction": [["tuple_wrapper"], ["_sympify", "as_int", "default_sort_key", "iterable", "ordered", "sympify"]]}, {"name": "sympy.core.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\core.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.core"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.coreerrors", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\coreerrors.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.coreerrors", "sympy.core.coreerrors"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.decorators", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\decorators.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.decorators"], ["sympy.core.sympify"]], "hasfunction": 2, "myfunction": [["__sympifyit", "_sympifyit", "call_highest_priority", "sympify_method_args", "sympify_return"], ["sympify", "wraps"]]}, {"name": "sympy.core.evalf", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\evalf.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.evalf", "sympy.core.evalf"], ["builtins", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [["N", "_create_evalf_table", "_evalf_with_bounded_error", "add_terms", "as_mpmath", "bitcount", "check_convergence", "check_target", "chop_parts", "complex_accuracy", "do_integral", "evalf", "evalf_abs", "evalf_add", "evalf_alg_num", "evalf_atan", "evalf_ceiling", "evalf_exp", "evalf_float", "evalf_floor", "evalf_im", "evalf_integer", "evalf_integral", "evalf_log", "evalf_mul", "evalf_piecewise", "evalf_pow", "evalf_prod", "evalf_rational", "evalf_re", "evalf_subs", "evalf_sum", "evalf_symbol", "evalf_trig", "fastlog", "finalize_complex", "get_abs", "get_complex_part", "get_integer_part", "hypsum", "iszero", "pure_complex", "quad_to_mpmath", "scaled_zero"], ["as_int", "dps_to_prec", "from_int", "from_man_exp", "from_rational", "is_sequence", "lambdify", "mpf_abs", "mpf_add", "mpf_atan", "mpf_atan2", "mpf_cmp", "mpf_cos", "f", "mpf_exp", "mpf_log", "mpf_lt", "python_mpf_mul", "mpf_neg", "f", "mpf_pow", "mpf_pow_int", "mpf_shift", "mpf_sin", "mpf_sqrt", "python_bitcount", "_normalize", "overload", "prec_to_dps", "sympify", "to_int", "to_str"]]}, {"name": "sympy.core.expr", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\expr.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.expr", "sympy.core.expr", "sympy.core.expr", "sympy.core.expr"], ["sympy.core.add", "sympy.core.basic", "sympy.core.basic", "sympy.core.evalf", "sympy.core.numbers", "sympy.core.function", "sympy.core.numbers", "collections.abc", "sympy.core.mod", "sympy.core.mul", "sympy.core.power", "sympy.core.numbers", "collections"]], "hasfunction": 2, "myfunction": [["_corem", "_mag", "unchanged"], ["_derivative_dispatch", "_sympify", "as_int", "func_wrapper", "call_highest_priority", "default_sort_key", "factor_terms", "filldedent", "func_name", "giant_steps", "has_variety", "mpf_log", "prec_to_dps", "pure_complex", "sift", "sympify", "sympify_method_args", "sympify_return", "sympy_deprecation_warning"]]}, {"name": "sympy.core.exprtools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\exprtools.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.exprtools", "sympy.core.exprtools"], ["sympy.core.add", "sympy.core.basic", "sympy.core.containers", "sympy.core.symbol", "sympy.core.expr", "sympy.core.numbers", "sympy.core.mul", "sympy.core.coreerrors", "sympy.core.numbers", "sympy.core.power", "sympy.core.numbers", "sympy.core.containers", "collections", "sympy.core.traversal"]], "hasfunction": 2, "myfunction": [["_factor_sum_int", "_gcd_terms", "_isnumber", "_mask_nc", "_monotonic_sign", "decompose_power", "decompose_power_rat", "factor_nc", "factor_terms", "gcd_terms"], ["_keep_coeff", "common_prefix", "common_suffix", "default_sort_key", "equal_valued", "expand_power_exp", "is_sequence", "iterable", "ordered", "sympify", "variations"]]}, {"name": "sympy.core.facts", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\facts.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.facts", "sympy.core.facts", "sympy.core.facts", "sympy.core.facts", "sympy.core.facts"], ["sympy.core.logic", "sympy.core.logic", "sympy.core.logic", "sympy.core.logic", "collections"]], "hasfunction": 2, "myfunction": [["_as_pair", "_base_fact", "apply_beta_to_alpha_route", "deduce_alpha_implications", "rules_2prereq", "transitive_closure"], []]}, {"name": "sympy.core.function", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\function.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function", "sympy.core.function"], ["sympy.core.add", "sympy.core.expr", "sympy.core.basic", "collections", "sympy.core.containers", "sympy.core.symbol", "sympy.core.expr", "sympy.core.numbers", "sympy.core.numbers", "collections.abc", "sympy.core.operations", "sympy.core.mul", "sympy.core.numbers", "sympy.utilities.exceptions", "sympy.core.symbol", "sympy.core.rules", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["_coeff_isneg", "_derivative_dispatch", "_mexpand", "arity", "count_ops", "diff", "expand", "expand_complex", "expand_func", "expand_log", "expand_mul", "expand_multinomial", "expand_power_base", "expand_power_exp", "expand_trig", "nfloat"], ["_atomic", "_sympify", "_sympifyit", "as_int", "func_wrapper", "default_sort_key", "filldedent", "func_name", "fuzzy_and", "fuzzy_not", "fuzzy_or", "has_dups", "ignore_warnings", "is_sequence", "iterable", "ordered", "prec_to_dps", "pure_complex", "sift", "sympify", "sympy_deprecation_warning", "topological_sort", "uniq"]]}, {"name": "sympy.core.kind", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\kind.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.kind", "sympy.core.kind", "sympy.core.kind", "sympy.core.kind", "sympy.core.kind", "sympy.core.kind"], ["sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher", "collections"]], "hasfunction": 2, "myfunction": [[], ["ambiguity_register_error_ignore_dup", "ambiguity_warn", "func_wrapper", "str_signature"]]}, {"name": "sympy.core.logic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\logic.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.logic", "sympy.core.logic", "sympy.core.logic", "sympy.core.logic", "sympy.core.logic"], []], "hasfunction": 2, "myfunction": [["_fuzzy_group", "_torf", "fuzzy_and", "fuzzy_bool", "fuzzy_nand", "fuzzy_not", "fuzzy_or", "fuzzy_xor"], []]}, {"name": "sympy.core.mod", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\mod.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.mod"], ["sympy.core.add", "sympy.core.function", "sympy.core.mul"]], "hasfunction": 2, "myfunction": [[], ["equal_valued", "fuzzy_and", "fuzzy_not", "gcd_terms"]]}, {"name": "sympy.core.mul", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\mul.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.mul", "sympy.core.mul"], ["sympy.core.add", "sympy.core.operations", "sympy.core.operations", "sympy.core.basic", "sympy.core.expr", "sympy.core.kind", "sympy.core.power", "sympy.core.numbers", "collections", "itertools"]], "hasfunction": 2, "myfunction": [["_keep_coeff", "_mulsort", "_unevaluated_Mul", "expand_2arg", "prod"], ["_fuzzy_group", "_unevaluated_Add", "bottom_up", "func_wrapper", "fuzzy_not", "sift", "sympify"]]}, {"name": "sympy.core.multidimensional", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\multidimensional.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.multidimensional"], []], "hasfunction": 2, "myfunction": [["apply_on_element", "iter_copy", "structure_copy"], ["wraps"]]}, {"name": "sympy.core.numbers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\numbers.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers"], ["sympy.core.add", "sympy.core.expr", "sympy.core.basic", "sympy.core.expr", "builtins", "sympy.core.mul", "sympy.core.power", "sympy.core.singleton", "sympy.core.sympify", "sympy.core.containers", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [["_as_integer_ratio", "_decimal_to_Rational_prec", "_literal_float", "_register_classes", "comp", "equal_valued", "igcd_lehmer", "igcdex", "ilcm", "mod_inverse", "mpf_norm", "seterr", "sympify_complex", "sympify_fractions", "sympify_mpmath", "sympify_mpmath_mpq"], ["_convert_numpy_types", "_is_numpy_instance", "_sympify", "_sympifyit", "as_int", "python_bitcount", "func_wrapper", "debug", "dispatch", "dps_to_prec", "filldedent", "fuzzy_not", "integer_nthroot", "lru_cache", "f", "_normalize", "f", "mpf_pow", "phi_fixed", "prec_to_dps", "pure_complex", "sympify"]]}, {"name": "sympy.core.operations", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\operations.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.operations", "sympy.core.operations", "sympy.core.operations", "sympy.core.operations"], ["sympy.core.basic", "sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher", "operator", "collections"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "ambiguity_register_error_ignore_dup", "func_wrapper", "fuzzy_and", "ordered", "sift", "str_signature", "sympify", "sympy_deprecation_warning"]]}, {"name": "sympy.core.parameters", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\parameters.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.parameters"], ["_thread"]], "hasfunction": 2, "myfunction": [["_exp_is_pow", "distribute", "evaluate"], ["contextmanager"]]}, {"name": "sympy.core.power", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\power.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.power"], ["sympy.core.add", "sympy.multipledispatch.dispatcher", "sympy.core.symbol", "sympy.core.expr", "sympy.core.numbers", "sympy.core.mul", "sympy.core.function", "sympy.core.evalf", "sympy.core.symbol", "itertools"]], "hasfunction": 2, "myfunction": [["_integer_nthroot_python", "integer_log", "integer_nthroot", "isqrt"], ["_keep_coeff", "_mexpand", "_sympify", "as_int", "func_wrapper", "expand_complex", "expand_mul", "expand_multinomial", "fuzzy_and", "fuzzy_bool", "fuzzy_not", "fuzzy_or", "is_gt", "is_lt", "sqrtrem_python", "sift", "symbols", "sympy_deprecation_warning"]]}, {"name": "sympy.core.random", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\random.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_randint", "_randrange", "random_complex_number", "seed", "test_derivative_numerically", "verify_numerically"], ["as_int", "is_sequence"]]}, {"name": "sympy.core.relational", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\relational.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational"], ["sympy.core.function", "sympy.core.basic", "sympy.core.basic", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.evalf", "sympy.core.expr", "sympy.core.symbol", "sympy.core.sympify", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["_canonical", "_canonical_coeff", "_n2", "_nontrivBool", "is_eq", "is_ge", "is_gt", "is_le", "is_lt", "is_neq"], ["_sympify", "dispatch", "filldedent", "fuzzy_and", "fuzzy_bool", "fuzzy_not", "fuzzy_xor", "ordered", "sift"]]}, {"name": "sympy.core.rules", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\rules.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.rules"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.core.singleton", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\singleton.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.singleton", "sympy.core.singleton"], ["sympy.core.basic", "sympy.core.core"]], "hasfunction": 2, "myfunction": [[], ["sympify"]]}, {"name": "sympy.core.sorting", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\sorting.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.sympify", "collections"]], "hasfunction": 2, "myfunction": [["_node_count", "_nodes", "default_sort_key", "ordered"], ["iterable", "sympify", "uniq"]]}, {"name": "sympy.core.symbol", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\symbol.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.symbol", "sympy.core.symbol", "sympy.core.symbol", "sympy.core.symbol"], ["sympy.core.function", "sympy.core.basic", "sympy.core.expr", "sympy.core.basic", "sympy.logic.boolalg", "sympy.core.expr", "sympy.core.function", "sympy.core.assumptions", "sympy.core.containers", "itertools"]], "hasfunction": 2, "myfunction": [["_filter_assumptions", "_symbol", "uniquely_named_symbol", "disambiguate", "symbols", "uniquely_named_symbol", "var"], ["func_wrapper", "filldedent", "fuzzy_bool", "is_sequence", "ordered", "sift", "sympify"]]}, {"name": "sympy.core.traversal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\core\\traversal.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.core.traversal"], ["sympy.core.basic"]], "hasfunction": 2, "myfunction": [["bottom_up", "iterargs", "iterfreeargs", "postorder_traversal", "use", "walk"], ["iterable", "ordered", "sympify"]]}, {"name": "sympy.discrete", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\discrete\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["convolution", "covering_product", "fft", "fwht", "ifft", "ifwht", "intersecting_product", "intt", "inverse_mobius_transform", "mobius_transform", "ntt"]]}, {"name": "sympy.discrete.convolutions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\discrete\\convolutions.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["convolution", "convolution_fft", "convolution_fwht", "convolution_ntt", "convolution_subset", "covering_product", "intersecting_product"], ["as_int", "expand_mul", "fft", "fwht", "ifft", "ifwht", "intt", "inverse_mobius_transform", "iterable", "mobius_transform", "ntt", "sympify"]]}, {"name": "sympy.discrete.transforms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\discrete\\transforms.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_fourier_transform", "_mobius_transform", "_number_theoretic_transform", "_walsh_hadamard_transform", "fft", "fwht", "ifft", "ifwht", "intt", "inverse_mobius_transform", "mobius_transform", "ntt"], ["as_int", "expand_mul", "ibin", "isprime", "iterable", "primitive_root", "sympify"]]}, {"name": "sympy.external", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\external\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["import_module"]]}, {"name": "sympy.external.gmpy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\external\\gmpy.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.external.pythonmpq", "builtins", "sympy.external.pythonmpq"]], "hasfunction": 2, "myfunction": [["<lambda>", "<lambda>"], ["import_module"]]}, {"name": "sympy.external.importtools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\external\\importtools.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["__sympy_debug", "import_module", "version_tuple"], []]}, {"name": "sympy.external.pythonmpq", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\external\\pythonmpq.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.external.pythonmpq"], ["decimal", "fractions"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.delta_functions", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.special.delta_functions", "sympy.functions.special.tensor_functions", "sympy.functions.elementary.exponential", "sympy.functions.special.tensor_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.piecewise", "sympy.functions.elementary.miscellaneous", "sympy.functions.combinatorial.factorials", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.singularity_functions", "sympy.functions.special.spherical_harmonics", "sympy.functions.special.spherical_harmonics", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.complexes", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.combinatorial.numbers", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.gamma_functions", "sympy.functions.special.zeta_functions", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.elementary.integers", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.polynomials", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.combinatorial.numbers", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.special.polynomials", "sympy.functions.special.bessel", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.zeta_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.special.bessel", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.hyper", "sympy.functions.combinatorial.numbers", "sympy.functions.special.gamma_functions", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.special.gamma_functions", "sympy.functions.special.zeta_functions", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.factorials", "sympy.functions.special.zeta_functions", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.zeta_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.numbers", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.bessel", "sympy.functions.special.zeta_functions"]], "hasfunction": 2, "myfunction": [[], ["E1", "Eijk", "Ynm_c", "bspline_basis_set", "cbrt", "interpolating_spline", "jacobi_normalized", "jn_zeros", "piecewise_exclusive", "piecewise_fold", "polarify", "real_root", "root", "sqrt", "unbranched_argument", "unpolarify"]]}, {"name": "sympy.functions.combinatorial", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\combinatorial\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.functions.combinatorial.factorials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\combinatorial\\factorials.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials"], ["sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.function", "sympy.core.numbers", "sympy.core.mod", "sympy.core.function", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [[], ["func_wrapper", "fuzzy_and", "sympify"]]}, {"name": "sympy.functions.combinatorial.numbers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\combinatorial\\numbers.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers"], ["sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.core.numbers", "sympy.core.mul", "sympy.utilities.enumerative", "sympy.functions.elementary.piecewise", "sympy.core.numbers", "sympy.core.symbol", "sympy.functions.combinatorial.factorials", "collections", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials"]], "hasfunction": 2, "myfunction": [["_AOP_product", "_divides", "_eval_stirling1", "_eval_stirling2", "_multiset_histogram", "_nP", "_nT", "_product", "_stirling1", "_stirling2", "nC", "nD", "nP", "nT", "stirling"], ["ifib", "as_int", "bernoulli_poly", "func_wrapper", "euler_poly", "expand_mul", "fuzzy_not", "genocchi_poly", "is_gt", "is_le", "is_square", "isprime", "iterable", "multiset", "multiset_derangements", "recurrence_memo", "sympy_deprecation_warning"]]}, {"name": "sympy.functions.elementary", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.functions.elementary._trigonometric_special", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\_trigonometric_special.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.expr", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["cos_17", "cos_257", "cos_3", "cos_5", "cos_table", "fermat_coords", "ipartfrac", "migcdex"], ["func_wrapper", "igcdex", "sqrt"]]}, {"name": "sympy.functions.elementary.complexes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\complexes.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"], ["sympy.core.add", "sympy.core.function", "sympy.core.function", "sympy.core.basic", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.core.mul", "sympy.functions.elementary.piecewise", "sympy.core.power", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["_polarify", "_unpolarify", "polarify", "unbranched_argument", "unpolarify"], ["expand_mul", "factor_terms", "fuzzy_not", "fuzzy_or", "sqrt", "sympify"]]}, {"name": "sympy.functions.elementary.exponential", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\exponential.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.expr", "sympy.core.function", "sympy.core.function", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.mul", "sympy.core.function", "sympy.core.power", "sympy.core.numbers", "sympy.core.symbol", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.complexes", "itertools", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_log_atan_table", "match_real_imag"], ["func_wrapper", "expand_complex", "expand_log", "expand_mul", "expand_multinomial", "factorint", "fuzzy_and", "fuzzy_not", "fuzzy_or", "multiplicity", "perfect_power", "sqrt", "sympify", "unpolarify"]]}, {"name": "sympy.functions.elementary.hyperbolic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\hyperbolic.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.function", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_acosh_table", "_acsch_table", "_asech_table", "_peeloff_ipi", "_rewrite_hyperbolics_as_exp"], ["_imaginary_unit_as_coefficient", "func_wrapper", "fuzzy_and", "fuzzy_or", "match_real_imag", "nC", "sqrt", "symmetric_poly", "sympify"]]}, {"name": "sympy.functions.elementary.integers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\integers.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.integers", "sympy.functions.elementary.integers", "sympy.functions.elementary.integers", "sympy.functions.elementary.integers"], ["sympy.core.add", "sympy.core.basic", "sympy.core.expr", "sympy.core.function", "sympy.core.relational", "sympy.core.relational", "sympy.core.numbers", "sympy.core.relational", "sympy.core.relational", "sympy.core.evalf", "sympy.core.relational", "sympy.core.symbol", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "dispatch", "fuzzy_or", "get_integer_part", "is_eq"]]}, {"name": "sympy.functions.elementary.miscellaneous", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\miscellaneous.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous"], ["sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.core.numbers", "sympy.core.function", "sympy.core.operations", "sympy.core.mod", "sympy.core.mul", "sympy.logic.boolalg", "sympy.core.power", "sympy.core.numbers", "sympy.core.relational", "sympy.core.operations", "sympy.core.singleton", "sympy.core.rules", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["_minmax_as_Piecewise", "cbrt", "real_root", "root", "sqrt"], ["_torf", "factor_terms", "fuzzy_and", "fuzzy_or", "ordered", "sift", "sympify", "walk"]]}, {"name": "sympy.functions.elementary.piecewise", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\piecewise.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.piecewise", "sympy.functions.elementary.piecewise"], ["sympy.logic.boolalg", "sympy.core.basic", "sympy.logic.boolalg", "sympy.core.symbol", "sympy.core.relational", "sympy.core.function", "sympy.core.relational", "sympy.logic.boolalg", "sympy.core.relational", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.core.relational", "sympy.logic.boolalg", "sympy.core.numbers", "sympy.logic.boolalg", "sympy.core.numbers", "sympy.core.relational", "sympy.core.containers", "itertools"]], "hasfunction": 2, "myfunction": [["<lambda>", "_clip", "_piecewise_collapse_arguments", "_piecewise_simplify_eq_and", "_piecewise_simplify_equal_to_next_segment", "piecewise_exclusive", "piecewise_fold", "piecewise_simplify", "piecewise_simplify_arguments"], ["_canonical", "_canonical_coeff", "as_Basic", "common_prefix", "diff", "distribute_and_over_or", "distribute_or_over_and", "filldedent", "func_name", "ordered", "sift", "simplify_logic", "to_cnf", "uniq"]]}, {"name": "sympy.functions.elementary.trigonometric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\elementary\\trigonometric.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"], ["sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.core.function", "sympy.core.numbers", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mod", "sympy.core.relational", "sympy.functions.elementary.piecewise", "sympy.core.function", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.core.symbol", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_imaginary_unit_as_coefficient", "_peeloff_pi", "_pi_coeff", "_table2"], ["func_wrapper", "cos_table", "equal_valued", "expand_mul", "factorint", "fermat_coords", "fuzzy_and", "fuzzy_not", "fuzzy_or", "ipartfrac", "numbered_symbols", "sqrt", "symmetric_poly", "sympify"]]}, {"name": "sympy.functions.special", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.functions.special.bessel", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\bessel.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.expr", "sympy.core.function", "sympy.core.power", "sympy.core.numbers", "sympy.core.symbol", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.special.gamma_functions", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.special.gamma_functions", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.special.gamma_functions"]], "hasfunction": 2, "myfunction": [["_jn", "_yn", "assume_integer_order", "jn_zeros"], ["_mexpand", "func_wrapper", "cbrt", "fuzzy_not", "fuzzy_or", "root", "spherical_bessel_fn", "sqrt", "sympify", "unpolarify", "wraps"]]}, {"name": "sympy.functions.special.beta_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\beta_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions", "sympy.functions.special.beta_functions"], ["sympy.core.function", "sympy.core.symbol", "sympy.core.function", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.complexes", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions"]], "hasfunction": 2, "myfunction": [["betainc_mpmath_fix"], []]}, {"name": "sympy.functions.special.bsplines", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\bsplines.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.logic.boolalg", "sympy.core.symbol", "sympy.sets.sets", "sympy.functions.elementary.piecewise"]], "hasfunction": 2, "myfunction": [["_add_splines", "_ivl", "bspline_basis_set", "interpolating_spline"], ["lru_cache", "piecewise_fold", "symbols", "sympify"]]}, {"name": "sympy.functions.special.delta_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\delta_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.delta_functions", "sympy.functions.special.delta_functions"], ["sympy.core.function", "sympy.core.relational", "sympy.core.function", "sympy.core.relational", "sympy.functions.elementary.piecewise", "sympy.polys.polyerrors", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["diff", "filldedent", "fuzzy_not", "roots"]]}, {"name": "sympy.functions.special.elliptic_integrals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\elliptic_integrals.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals"], ["sympy.core.function", "sympy.core.symbol", "sympy.core.function", "sympy.core.numbers", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.gamma_functions", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["sqrt"]]}, {"name": "sympy.functions.special.error_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\error_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions"], ["sympy.core.add", "sympy.core.function", "sympy.core.function", "sympy.core.power", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.core.symbol", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.special.hyper", "sympy.functions.elementary.exponential", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["E1", "real_to_real_as_real_imag"], ["func_wrapper", "expand_mul", "is_eq", "root", "sqrt", "sympify", "unpolarify"]]}, {"name": "sympy.functions.special.gamma_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\gamma_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.gamma_functions"], ["sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.functions.special.error_functions", "sympy.core.expr", "sympy.core.function", "sympy.core.function", "sympy.core.power", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.special.zeta_functions"]], "hasfunction": 2, "myfunction": [["intlike"], ["as_int", "expand_func", "fuzzy_and", "fuzzy_not", "prec_to_dps", "sqrt", "unpolarify"]]}, {"name": "sympy.functions.special.hyper", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\hyper.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper", "sympy.functions.special.hyper"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.function", "sympy.core.symbol", "sympy.core.expr", "sympy.core.function", "sympy.core.mod", "sympy.core.mul", "sympy.core.relational", "sympy.logic.boolalg", "sympy.functions.elementary.piecewise", "sympy.functions.combinatorial.factorials", "sympy.core.containers", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_prep_tuple"], ["default_sort_key", "ilcm", "sqrt", "unpolarify"]]}, {"name": "sympy.functions.special.mathieu_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\mathieu_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions", "sympy.functions.special.mathieu_functions"], ["sympy.core.function", "sympy.core.function", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["sqrt"]]}, {"name": "sympy.functions.special.polynomials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\polynomials.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials", "sympy.functions.special.polynomials"], ["sympy.core.function", "sympy.core.symbol", "sympy.core.function", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.special.gamma_functions", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["jacobi_normalized"], ["chebyshevt_poly", "chebyshevu_poly", "gegenbauer_poly", "hermite_poly", "hermite_prob_poly", "jacobi_poly", "laguerre_poly", "legendre_poly", "sqrt"]]}, {"name": "sympy.functions.special.singularity_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\singularity_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.singularity_functions"], ["sympy.core.function", "sympy.core.relational", "sympy.core.function", "sympy.functions.special.delta_functions", "sympy.functions.elementary.piecewise", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["diff", "fuzzy_not"]]}, {"name": "sympy.functions.special.spherical_harmonics", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\spherical_harmonics.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.spherical_harmonics", "sympy.functions.special.spherical_harmonics"], ["sympy.functions.elementary.complexes", "sympy.core.function", "sympy.core.symbol", "sympy.core.expr", "sympy.core.function", "sympy.functions.special.polynomials", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["Ynm_c"], ["sqrt"]]}, {"name": "sympy.functions.special.tensor_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\tensor_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.tensor_functions", "sympy.functions.special.tensor_functions"], ["sympy.core.function", "sympy.core.numbers", "sympy.core.relational", "sympy.functions.elementary.piecewise", "sympy.functions.combinatorial.factorials"]], "hasfunction": 2, "myfunction": [["Eijk", "eval_levicivita"], ["default_sort_key", "fuzzy_not", "has_dups"]]}, {"name": "sympy.functions.special.zeta_functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\functions\\special\\zeta_functions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.functions.special.zeta_functions", "sympy.functions.special.zeta_functions", "sympy.functions.special.zeta_functions", "sympy.functions.special.zeta_functions", "sympy.functions.special.zeta_functions", "sympy.functions.special.zeta_functions"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.function", "sympy.core.numbers", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.integers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.integers", "sympy.functions.combinatorial.numbers", "sympy.functions.combinatorial.numbers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_dilogtable"], ["func_wrapper", "expand_mul", "sqrt", "sympify", "unpolarify"]]}, {"name": "sympy.geometry", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.geometry.ellipse", "sympy.geometry.curve", "sympy.geometry.ellipse", "sympy.geometry.exceptions", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.parabola", "sympy.geometry.plane", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.polygon", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.polygon", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.polygon"]], "hasfunction": 2, "myfunction": [[], ["are_similar", "centroid", "closest_points", "convex_hull", "deg", "farthest_points", "idiff", "intersection", "rad"]]}, {"name": "sympy.geometry.curve", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\curve.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.curve"], ["sympy.geometry.entity", "sympy.geometry.entity", "sympy.matrices.dense", "sympy.geometry.point", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], ["_symbol", "diff", "integrate", "is_sequence", "prec_to_dps", "rot_axis3", "sqrt"]]}, {"name": "sympy.geometry.ellipse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\ellipse.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.ellipse", "sympy.geometry.ellipse"], ["sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.geometry.entity", "sympy.geometry.exceptions", "sympy.geometry.entity", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.functions.elementary.miscellaneous", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.point", "sympy.polys.polytools", "sympy.geometry.polygon", "sympy.polys.polyerrors", "sympy.core.numbers", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.polygon", "sympy.functions.elementary.trigonometric", "sympy.functions.special.elliptic_integrals", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["N", "_not_a_coeff", "_nsort", "_symbol", "filldedent", "find", "func_name", "fuzzy_bool", "idiff", "linear_coeffs", "ordered", "prec_to_dps", "simplify", "solve", "sqrt", "sympify", "trigsimp", "uniquely_named_symbol"]]}, {"name": "sympy.geometry.entity", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\entity.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.entity", "sympy.geometry.entity"], ["sympy.core.basic", "sympy.core.symbol", "sympy.core.evalf", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.containers", "sympy.sets.sets", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["rotate", "scale", "translate"], ["N", "dispatch", "eye", "func_name", "is_sequence", "solve", "sympify"]]}, {"name": "sympy.geometry.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\exceptions.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.geometry.line", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\line.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line"], ["sympy.logic.boolalg", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.geometry.entity", "sympy.geometry.exceptions", "sympy.geometry.entity", "sympy.sets.sets", "sympy.matrices.dense", "sympy.functions.elementary.piecewise", "sympy.geometry.point", "sympy.geometry.point", "sympy.core.numbers", "sympy.core.containers", "sympy.utilities.misc", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["N", "_pi_coeff", "_symbol", "filldedent", "find", "intersection", "linear_coeffs", "ordered", "simplify", "solve", "sympify", "uniquely_named_symbol"]]}, {"name": "sympy.geometry.parabola", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\parabola.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.parabola"], ["sympy.geometry.ellipse", "sympy.geometry.entity", "sympy.geometry.entity", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.line", "sympy.geometry.line", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["_symbol", "ordered", "simplify", "solve", "symbols"]]}, {"name": "sympy.geometry.plane", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\plane.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.plane"], ["sympy.core.symbol", "sympy.geometry.entity", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.matrices.dense", "sympy.geometry.point", "sympy.geometry.point", "sympy.core.numbers", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.geometry.line", "sympy.core.symbol", "sympy.utilities.misc", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["_symbol", "cancel", "filldedent", "func_name", "is_sequence", "linsolve", "prec_to_dps", "solve", "sqrt", "uniq"]]}, {"name": "sympy.geometry.point", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\point.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.point"], ["sympy.core.add", "sympy.core.expr", "sympy.core.numbers", "sympy.geometry.entity", "sympy.geometry.exceptions", "sympy.matrices.dense", "sympy.matrices.expressions.transpose", "sympy.core.containers", "sympy.utilities.misc", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["filldedent", "func_name", "is_sequence", "nsimplify", "prec_to_dps", "simplify", "sqrt", "sympify", "uniq"]]}, {"name": "sympy.geometry.polygon", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\polygon.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.geometry.polygon", "sympy.geometry.polygon", "sympy.geometry.polygon"], ["sympy.logic.boolalg", "sympy.geometry.ellipse", "sympy.core.symbol", "sympy.core.expr", "sympy.geometry.entity", "sympy.geometry.exceptions", "sympy.geometry.entity", "sympy.geometry.line", "sympy.matrices.dense", "sympy.functions.elementary.piecewise", "sympy.geometry.point", "sympy.geometry.line", "sympy.geometry.line", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_asa", "_sas", "_slope", "_sss", "deg", "rad"], ["N", "_symbol", "as_int", "default_sort_key", "func_name", "has_dups", "has_variety", "least_rotation", "ordered", "prec_to_dps", "rotate_left", "simplify", "solve", "sympify", "uniq"]]}, {"name": "sympy.geometry.util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\geometry\\util.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.function", "sympy.geometry.entity", "sympy.geometry.exceptions", "sympy.core.containers", "sympy.geometry.point", "sympy.geometry.point", "sympy.geometry.point", "sympy.core.symbol", "collections"]], "hasfunction": 2, "myfunction": [["_ordered_points", "are_coplanar", "are_similar", "centroid", "closest_points", "convex_hull", "farthest_points", "find", "idiff", "intersection"], ["cancel", "expand_mul", "factor_terms", "is_sequence", "ordered", "sqrt"]]}, {"name": "sympy.integrals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.integrals", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.laplace", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.laplace", "sympy.integrals.transforms", "sympy.integrals.transforms"]], "hasfunction": 2, "myfunction": [[], ["cosine_transform", "fourier_transform", "hankel_transform", "integrate", "inverse_cosine_transform", "inverse_fourier_transform", "inverse_hankel_transform", "inverse_laplace_transform", "inverse_mellin_transform", "inverse_sine_transform", "laplace_transform", "line_integrate", "mellin_transform", "sine_transform", "singularityintegrate"]]}, {"name": "sympy.integrals.deltafunctions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\deltafunctions.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.special.delta_functions", "sympy.functions.special.delta_functions", "sympy.integrals.integrals", "sympy.core.mul"]], "hasfunction": 2, "myfunction": [["change_mul", "deltaintegrate"], ["default_sort_key", "integrate"]]}, {"name": "sympy.integrals.integrals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\integrals.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.integrals.integrals"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.concrete.expr_with_limits", "sympy.core.basic", "sympy.core.symbol", "sympy.core.expr", "sympy.series.formal", "sympy.matrices.matrices", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.core.relational", "sympy.series.order", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.containers", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.integers", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_", "integrate", "line_integrate"], ["debug", "deltaintegrate", "diff", "factor_terms", "filldedent", "fuzzy_bool", "is_sequence", "limit", "meijerint_definite", "meijerint_indefinite", "piecewise_fold", "ratint", "shape", "sqrt", "sympify", "sympy_deprecation_warning", "trigintegrate"]]}, {"name": "sympy.integrals.laplace", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\laplace.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.integrals.laplace", "sympy.integrals.laplace"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.function", "sympy.functions.special.delta_functions", "sympy.core.symbol", "sympy.functions.special.error_functions", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.functions.special.delta_functions", "sympy.integrals.integrals", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.core.function", "sympy.core.relational", "sympy.matrices.matrices", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.logic.boolalg", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.polys.rootoftools", "sympy.utilities.exceptions", "sympy.core.relational", "sympy.core.symbol", "sympy.core.function", "sympy.functions.elementary.complexes", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.gamma_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.exponential", "sympy.functions.special.gamma_functions", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.special.gamma_functions", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_complete_the_square_in_denom", "_fast_inverse_laplace", "_inverse_laplace_apply_prog_rules", "_inverse_laplace_apply_simple_rules", "_inverse_laplace_build_rules", "_inverse_laplace_expand", "_inverse_laplace_rational", "_inverse_laplace_time_diff", "_inverse_laplace_time_shift", "_inverse_laplace_transform", "_inverse_laplace_transform_integration", "_laplace_apply_prog_rules", "_laplace_apply_simple_rules", "_laplace_build_rules", "_laplace_deep_collect", "_laplace_expand", "_laplace_rule_delta", "_laplace_rule_diff", "_laplace_rule_exp", "_laplace_rule_heaviside", "_laplace_rule_sdiff", "_laplace_rule_timescale", "_laplace_rule_trig", "_laplace_transform", "_laplace_transform_integration", "_laplace_trig_expsum", "_laplace_trig_ltex", "_laplace_trig_split", "_simplifyconds", "expand_dirac_delta", "inverse_laplace_transform", "laplace_transform"], ["_canonical", "_lin_eq2dict", "_simplify", "func_wrapper", "conjuncts", "debug", "debugf", "diff", "disjuncts", "expand", "expand_complex", "expand_mul", "expand_trig", "ignore_warnings", "integrate", "ordered", "prod", "roots", "sqrt", "symbols", "sympy_deprecation_warning", "to_cnf", "together"]]}, {"name": "sympy.integrals.meijerint", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\meijerint.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.integrals.meijerint"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.basic", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.delta_functions", "sympy.core.symbol", "sympy.functions.special.error_functions", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.functions.special.delta_functions", "sympy.functions.elementary.hyperbolic", "sympy.integrals.integrals", "sympy.core.mul", "sympy.core.relational", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.functions.elementary.piecewise", "sympy.core.numbers", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.singularity_functions", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.core.containers", "sympy.core.symbol", "sympy.functions.elementary.complexes", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.elliptic_integrals", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.special.error_functions", "sympy.functions.combinatorial.factorials", "sympy.functions.special.error_functions", "sympy.functions.special.error_functions", "sympy.functions.special.gamma_functions", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_check_antecedents", "_check_antecedents_1", "_check_antecedents_inversion", "_condsimp", "_create_lookup_table", "_dummy", "_dummy_", "_eval_cond", "_exponents", "_find_splitting_points", "_flip_g", "_functions", "_get_coeff_exp", "_guess_expansion", "_has", "_inflate_fox_h", "_inflate_g", "_int0oo", "_int0oo_1", "_int_inversion", "_is_analytic", "_meijerint_definite_2", "_meijerint_definite_3", "_meijerint_definite_4", "_meijerint_indefinite_1", "_mul_args", "_mul_as_two_parts", "_my_principal_branch", "_my_unpolarify", "_mytype", "_rewrite1", "_rewrite2", "_rewrite_inversion", "_rewrite_saxena", "_rewrite_saxena_1", "_rewrite_single", "_split_mul", "meijerint_definite", "meijerint_indefinite", "meijerint_inversion"], ["_canonical_coeff", "debug", "debugf", "_rewrite_hyperbolics_as_exp", "func_wrapper", "cancel", "default_sort_key", "expand", "expand_mul", "expand_power_base", "expand_trig", "factor", "factor_terms", "ilcm", "multiset_partitions", "ordered", "piecewise_fold", "polarify", "sqrt", "symbols", "sympify", "decorator", "timethis", "unbranched_argument", "unpolarify"]]}, {"name": "sympy.integrals.rationaltools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\rationaltools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.symbol", "sympy.core.function", "sympy.polys.polytools", "sympy.polys.rootoftools", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["log_to_atan", "log_to_real", "ratint", "ratint_logpart", "ratint_ratpart"], ["cancel", "resultant", "roots", "symbols"]]}, {"name": "sympy.integrals.singularityfunctions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\singularityfunctions.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.special.delta_functions", "sympy.functions.special.singularity_functions"]], "hasfunction": 2, "myfunction": [["singularityintegrate"], ["integrate"]]}, {"name": "sympy.integrals.transforms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\transforms.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms", "sympy.integrals.transforms"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.polys.rootoftools", "sympy.core.symbol", "sympy.core.function", "sympy.functions.special.delta_functions", "sympy.integrals.integrals", "sympy.integrals.laplace", "sympy.integrals.laplace", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.logic.boolalg", "sympy.polys.polytools", "sympy.functions.elementary.complexes", "sympy.functions.special.bessel", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.special.gamma_functions", "sympy.functions.special.hyper", "sympy.functions.elementary.complexes", "itertools", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_default_integrator", "_fourier_transform", "_hankel_transform", "_inverse_mellin_transform", "_mellin_transform", "make_wrapper", "_noconds_", "_rewrite_gamma", "_rewrite_sin", "_simplify", "_sine_cosine_transform", "cosine_transform", "fourier_transform", "hankel_transform", "inverse_cosine_transform", "inverse_fourier_transform", "inverse_hankel_transform", "inverse_mellin_transform", "inverse_sine_transform", "mellin_transform", "sine_transform"], ["_dummy", "conjuncts", "count_ops", "debug", "default_sort_key", "disjuncts", "expand", "expand_mul", "factor", "ilcm", "integrate", "inverse_laplace_transform", "iterable", "laplace_transform", "piecewise_fold", "postorder_traversal", "roots", "sqrt", "to_cnf", "wraps"]]}, {"name": "sympy.integrals.trigonometry", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\integrals\\trigonometry.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.core.symbol", "sympy.core.numbers", "sympy.core.relational", "sympy.functions.elementary.piecewise", "sympy.core.numbers", "sympy.core.symbol", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_cos_pow_integrate", "_integer_instance", "_pat_sincos", "_sin_pow_integrate", "trigintegrate"], ["func_wrapper", "integrate"]]}, {"name": "sympy.interactive", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\interactive\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["init_printing", "init_session", "interactive_traversal"]]}, {"name": "sympy.interactive.printing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\interactive\\printing.py", "layer": 2, "hasclass": 2, "myclass": [[], ["_io", "sympy.printing.defaults"]], "hasfunction": 2, "myfunction": [["_init_ipython_printing", "_init_python_printing", "_is_ipython", "init_printing"], ["debug", "preview", "version_tuple"]]}, {"name": "sympy.interactive.session", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\interactive\\session.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_make_message", "enable_automatic_int_sympification", "enable_automatic_symbols", "init_ipython_session", "init_python_session", "init_session", "int_to_Integer"], ["init_printing", "version_tuple"]]}, {"name": "sympy.interactive.traversal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\interactive\\traversal.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.basic"]], "hasfunction": 2, "myfunction": [["interactive_traversal"], ["pretty_print"]]}, {"name": "sympy.logic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\logic\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg"]], "hasfunction": 2, "myfunction": [[], ["POSform", "SOPform", "bool_map", "gateinputcount", "satisfiable", "simplify_logic", "to_cnf", "to_dnf", "to_nnf"]]}, {"name": "sympy.logic.boolalg", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\logic\\boolalg.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg"], ["sympy.core.add", "sympy.core.function", "sympy.core.basic", "sympy.core.function", "sympy.core.operations", "sympy.core.numbers", "sympy.core.singleton", "sympy.core.containers", "itertools", "itertools", "collections", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["ANFform", "POSform", "SOPform", "_apply_patternbased_simplification", "_apply_patternbased_threeterm_simplification", "_apply_patternbased_twoterm_simplification", "_check_pair", "_convert_to_varsANF", "_convert_to_varsPOS", "_convert_to_varsSOP", "_distribute", "_find_predicates", "_finger", "_get_even_parity_terms", "_get_odd_parity_terms", "_get_truthtable", "_input_to_binlist", "_is_form", "_rem_redundancy", "_simplified_pairs", "_simplify_patterns_and", "_simplify_patterns_and3", "_simplify_patterns_or", "_simplify_patterns_xor", "_sop_form", "anf_coeffs", "as_Boolean", "bool_map", "bool_maxterm", "bool_minterm", "bool_monomial", "conjuncts", "disjuncts", "distribute_and_over_or", "distribute_or_over_and", "distribute_xor_over_and", "eliminate_implications", "gateinputcount", "is_anf", "is_cnf", "is_dnf", "is_literal", "is_nnf", "simplify_logic", "simplify_univariate", "term_to_integer", "to_anf", "to_cnf", "to_dnf", "to_int_repr", "to_nnf", "truth_table"], ["_sympify", "func_wrapper", "filldedent", "ibin", "ibin", "ordered", "sift", "sympify", "sympify_method_args", "sympify_return"]]}, {"name": "sympy.logic.inference", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\logic\\inference.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.logic.inference", "sympy.logic.inference"], ["sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg"]], "hasfunction": 2, "myfunction": [["entails", "literal_symbol", "pl_true", "satisfiable", "valid"], ["conjuncts", "import_module", "ordered", "sympify", "to_cnf"]]}, {"name": "sympy.matrices", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.matrices.expressions.adjoint", "sympy.matrices.expressions.blockmatrix", "sympy.matrices.expressions.blockmatrix", "sympy.matrices.matrices", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.dotproduct", "sympy.matrices.expressions.funcmatrix", "sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.special", "sympy.matrices.immutable", "sympy.matrices.immutable", "sympy.matrices.immutable", "sympy.matrices.expressions.inverse", "sympy.matrices.expressions.kronecker", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.dense", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.matrices.common", "sympy.matrices.expressions.permutation", "sympy.matrices.expressions.sets", "sympy.matrices.expressions.slice", "sympy.matrices.expressions.matexpr", "sympy.matrices.dense", "sympy.matrices.dense", "sympy.matrices.sparse", "sympy.matrices.common", "sympy.matrices.expressions.special", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.permutation", "sympy.matrices.common", "sympy.matrices.sparse", "sympy.matrices.expressions.trace", "sympy.matrices.expressions.transpose", "sympy.matrices.expressions.special"]], "hasfunction": 2, "myfunction": [[], ["GramSchmidt", "banded", "block_collapse", "blockcut", "casoratian", "det", "diag", "diagonalize_vector", "dotprodsimp", "eye", "hadamard_product", "hessian", "jordan_cell", "kronecker_product", "list2numpy", "matrix2numpy", "matrix_multiply_elementwise", "matrix_symbols", "ones", "per", "randMatrix", "rot_axis1", "rot_axis2", "rot_axis3", "rot_ccw_axis1", "rot_ccw_axis2", "rot_ccw_axis3", "rot_givens", "symarray", "trace", "wronskian", "zeros"]]}, {"name": "sympy.matrices.common", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\common.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.core.basic", "collections.abc", "sympy.core.kind", "sympy.core.mod", "sympy.tensor.array.ndim_array", "sympy.polys.polytools", "sympy.core.symbol", "sympy.core.sympify", "collections", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_matrixify", "a2idx", "classof"], ["_dotprodsimp", "_get_intermediate_simp_bool", "_simplify", "as_int", "call_highest_priority", "filldedent", "flatten", "fuzzy_and", "is_sequence", "isfunction", "refine", "sympify"]]}, {"name": "sympy.matrices.decompositions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\decompositions.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.miscellaneous", "sympy.matrices.common", "sympy.matrices.common", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_LDLdecomposition", "_LDLdecomposition_sparse", "_LUdecomposition", "_LUdecompositionFF", "_LUdecomposition_Simple", "_QRdecomposition", "_QRdecomposition_optional", "_cholesky", "_cholesky_sparse", "_liupc", "_rank_decomposition", "_row_structure_symbolic_cholesky", "_singular_value_decomposition", "_upper_hessenberg_decomposition"], ["_find_reasonable_pivot_naive", "_get_intermediate_simp", "_iszero", "expand_mul", "sqrt"]]}, {"name": "sympy.matrices.dense", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\dense.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.dense", "sympy.matrices.dense", "sympy.matrices.dense", "sympy.matrices.dense"], ["sympy.core.basic", "sympy.matrices.matrices", "sympy.matrices.repmatrix", "sympy.matrices.repmatrix", "sympy.matrices.common", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["GramSchmidt", "_force_mutable", "_iszero", "casoratian", "diag", "eye", "hessian", "jordan_cell", "list2numpy", "matrix2numpy", "matrix_multiply_elementwise", "ones", "randMatrix", "rot_axis1", "rot_axis2", "rot_axis3", "rot_ccw_axis1", "rot_ccw_axis2", "rot_ccw_axis3", "rot_givens", "symarray", "wronskian", "zeros"], ["_LDLdecomposition", "_cholesky", "_lower_triangular_solve", "_upper_triangular_solve", "doctest_depends_on", "is_sequence", "sympify", "sympy_deprecation_warning"]]}, {"name": "sympy.matrices.determinant", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\determinant.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.domainmatrix", "sympy.core.numbers", "builtins", "sympy.core.numbers", "sympy.core.mul", "sympy.matrices.common", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["_adjugate", "_berkowitz_toeplitz_matrix", "_berkowitz_vector", "_charpoly", "_cofactor", "_cofactor_matrix", "_det", "_det_DOM", "_det_LU", "_det_bareiss", "_det_berkowitz", "_find_reasonable_pivot", "_find_reasonable_pivot_naive", "_minor", "_minor_submatrix", "_per"], ["_dotprodsimp", "_get_intermediate_simp", "_get_intermediate_simp_bool", "_is_zero_after_expand_mul", "_iszero", "_simplify", "cancel", "nC", "uniquely_named_symbol"]]}, {"name": "sympy.matrices.eigen", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\eigen.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.rootoftools", "collections", "sympy.polys.matrices.domainmatrix", "sympy.core.numbers", "builtins", "sympy.matrices.common", "sympy.matrices.common", "sympy.core.evalf"]], "hasfunction": 2, "myfunction": [["_bidiagonal_decmp_hholder", "_bidiagonal_decomposition", "_bidiagonalize", "_diagonalize", "_eigenspace", "_eigenvals", "_eigenvals_dict", "_eigenvals_eigenvects_mpmath", "_eigenvals_list", "_eigenvals_mpmath", "_eigenvects", "_eigenvects_DOM", "_eigenvects_mpmath", "_eigenvects_sympy", "_eval_bidiag_hholder", "_fuzzy_positive_definite", "_fuzzy_positive_semidefinite", "_householder_vector", "_is_diagonalizable", "_is_diagonalizable_with_eigen", "_is_indefinite", "_is_negative_definite", "_is_negative_semidefinite", "_is_positive_definite", "_is_positive_definite_GE", "_is_positive_semidefinite", "_is_positive_semidefinite_cholesky", "_jordan_form", "_left_eigenvects", "_singular_values"], ["_find_reasonable_pivot", "_iszero", "_simplify", "_sympify", "default_sort_key", "dom_eigenvects", "dom_eigenvects_to_sympy", "fuzzy_and", "fuzzy_or", "gcd", "prec_to_dps", "roots", "sqrt"]]}, {"name": "sympy.matrices.expressions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.matrices.expressions.adjoint", "sympy.matrices.expressions.blockmatrix", "sympy.matrices.expressions.blockmatrix", "sympy.matrices.expressions.companion", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.dotproduct", "sympy.matrices.expressions.funcmatrix", "sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.special", "sympy.matrices.expressions.inverse", "sympy.matrices.expressions.kronecker", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.permutation", "sympy.matrices.expressions.sets", "sympy.matrices.expressions.slice", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.special", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.permutation", "sympy.matrices.expressions.trace", "sympy.matrices.expressions.transpose", "sympy.matrices.expressions.special"]], "hasfunction": 2, "myfunction": [[], ["block_collapse", "blockcut", "combine_kronecker", "det", "diagonalize_vector", "hadamard_power", "hadamard_product", "kronecker_product", "matrix_symbols", "per", "trace"]]}, {"name": "sympy.matrices.expressions._shape", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\_shape.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.matrices.expressions.matexpr", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["is_matadd_valid", "is_matmul_valid", "is_square", "validate_matadd_integer", "validate_matmul_integer"], []]}, {"name": "sympy.matrices.expressions.adjoint", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\adjoint.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.adjoint"], ["sympy.core.basic", "sympy.matrices.expressions.matexpr", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["transpose"]]}, {"name": "sympy.matrices.expressions.blockmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\blockmatrix.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.blockmatrix", "sympy.matrices.expressions.blockmatrix"], ["sympy.core.add", "sympy.core.basic", "sympy.matrices.expressions.determinant", "sympy.matrices.expressions.special", "sympy.matrices.expressions.inverse", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.dense", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.slice", "sympy.core.mul", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.expressions.transpose", "sympy.matrices.expressions.special", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_choose_2x2_inversion_formula", "bc_block_plus_ident", "bc_dist", "bc_inverse", "bc_matadd", "bc_matmul", "bc_transpose", "bc_unpack", "block_collapse", "blockcut", "blockinverse_1x1", "blockinverse_2x2", "bounds", "deblock", "reblock_2x2"], ["_sympify", "ask", "bottom_up", "condition", "det", "do_one", "exhaust", "filldedent", "is_sequence", "sift", "trace", "transpose", "typed", "unpack"]]}, {"name": "sympy.matrices.expressions.companion", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\companion.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.companion"], ["sympy.matrices.expressions.matexpr", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [[], ["_sympify"]]}, {"name": "sympy.matrices.expressions.determinant", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\determinant.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.determinant", "sympy.matrices.expressions.determinant"], ["sympy.core.basic", "sympy.core.expr", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["det", "per", "refine_Determinant"], ["ask", "sympify"]]}, {"name": "sympy.matrices.expressions.diagonal", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\diagonal.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal", "sympy.matrices.expressions.diagonal"], ["sympy.core.relational", "sympy.core.relational", "sympy.functions.special.tensor_functions", "sympy.matrices.expressions.matexpr", "sympy.core.mul"]], "hasfunction": 2, "myfunction": [["diagonalize_vector"], ["_sympify"]]}, {"name": "sympy.matrices.expressions.dotproduct", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\dotproduct.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.dotproduct"], ["sympy.core.basic", "sympy.core.expr"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "transpose"]]}, {"name": "sympy.matrices.expressions.funcmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\funcmatrix.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.funcmatrix"], ["sympy.core.symbol", "sympy.core.function", "sympy.core.function", "sympy.matrices.dense", "sympy.matrices.expressions.matexpr", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "sympify"]]}, {"name": "sympy.matrices.expressions.hadamard", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\hadamard.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.hadamard", "sympy.matrices.expressions.hadamard"], ["sympy.core.add", "collections", "sympy.core.expr", "sympy.matrices.expressions.matexpr", "sympy.core.mul", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["canonicalize", "hadamard_power", "hadamard_product"], ["condition", "default_sort_key", "exhaust", "flatten", "rm_id", "sort", "sympify", "sympy_deprecation_warning", "unpack", "validate_matadd_integer"]]}, {"name": "sympy.matrices.expressions.inverse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\inverse.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.inverse"], ["sympy.core.basic", "sympy.matrices.expressions.matpow", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["refine_Inverse"], ["_sympify", "ask"]]}, {"name": "sympy.matrices.expressions.kronecker", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\kronecker.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.kronecker"], ["sympy.matrices.expressions.special", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.core.mul", "sympy.matrices.common", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_kronecker_dims_key", "combine_kronecker", "explicit_kronecker_product", "extract_commutative", "kronecker_mat_add", "kronecker_mat_mul", "kronecker_mat_pow", "kronecker_product", "matrix_kronecker_product", "validate"], ["bottom_up", "canon", "exhaustive_rl", "condition", "distribute", "do_one", "exhaust", "flatten", "sift", "sympify", "transpose", "typed", "unpack"]]}, {"name": "sympy.matrices.expressions.matadd", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\matadd.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.matadd"], ["sympy.core.add", "sympy.core.basic", "sympy.matrices.expressions.special", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.special", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["combine", "<lambda>", "<lambda>", "merge_explicit"], ["_could_extract_minus_sign", "exhaustive_rl", "condition", "default_sort_key", "do_one", "exhaust", "flatten", "glom", "rm_id", "sift", "sort", "sympify", "sympy_deprecation_warning", "transpose", "unpack", "validate_matadd_integer"]]}, {"name": "sympy.matrices.expressions.matexpr", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\matexpr.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.matexpr"], ["sympy.core.add", "sympy.core.basic", "sympy.matrices.expressions.determinant", "sympy.core.symbol", "sympy.core.expr", "sympy.core.expr", "sympy.matrices.expressions.special", "sympy.core.numbers", "sympy.matrices.expressions.inverse", "sympy.functions.special.tensor_functions", "sympy.matrices.expressions.matadd", "sympy.matrices.expressions.matmul", "sympy.matrices.expressions.matpow", "sympy.matrices.matrices", "sympy.matrices.common", "sympy.core.mul", "sympy.matrices.common", "sympy.core.symbol", "sympy.core.symbol", "sympy.core.sympify", "sympy.matrices.expressions.transpose", "sympy.matrices.expressions.special", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_make_matrix", "_matrix_derivative", "_matrix_derivative_old_algorithm", "_sympifyit", "get_postprocessor", "matrix_symbols"], ["_sympify", "call_highest_priority", "check_assumptions", "dispatch", "filldedent", "symbols", "wraps"]]}, {"name": "sympy.matrices.expressions.matmul", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\matmul.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.matmul"], ["sympy.core.basic", "sympy.core.symbol", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special", "sympy.core.numbers", "sympy.matrices.expressions.inverse", "sympy.matrices.expressions.matpow", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.core.mul", "sympy.matrices.common", "sympy.core.numbers", "sympy.matrices.expressions.special", "sympy.matrices.expressions.permutation", "sympy.matrices.expressions.special", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["any_zeros", "combine_one_matrices", "combine_permutations", "combine_powers", "distribute_monom", "factor_in_front", "merge_explicit", "newmul", "only_squares", "refine_MatMul", "remove_ids"], ["ask", "exhaustive_rl", "do_one", "exhaust", "flatten", "__new__", "rm_id", "sympify", "sympy_deprecation_warning", "transpose", "typed", "unpack", "validate_matmul_integer"]]}, {"name": "sympy.matrices.expressions.matpow", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\matpow.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.matpow"], ["sympy.core.expr", "sympy.matrices.expressions.special", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.matrices.common", "sympy.core.power"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "func_wrapper"]]}, {"name": "sympy.matrices.expressions.permutation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\permutation.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.permutation", "sympy.matrices.expressions.permutation"], ["sympy.matrices.expressions.special", "sympy.functions.special.tensor_functions", "sympy.matrices.expressions.matexpr", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special"]], "hasfunction": 2, "myfunction": [[], ["_sympify"]]}, {"name": "sympy.matrices.expressions.sets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\sets.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.sets"], ["sympy.matrices.expressions.matexpr", "sympy.matrices.common", "sympy.sets.sets", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "check_assumptions", "fuzzy_and"]]}, {"name": "sympy.matrices.expressions.slice", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\slice.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.slice"], ["sympy.core.basic", "sympy.matrices.expressions.matexpr", "sympy.core.containers", "sympy.functions.elementary.integers"]], "hasfunction": 2, "myfunction": [["mat_slice_of_slice", "normalize", "slice_of_slice"], []]}, {"name": "sympy.matrices.expressions.special", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\special.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.special", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special", "sympy.matrices.expressions.special"], ["sympy.core.relational", "sympy.functions.special.tensor_functions", "sympy.matrices.expressions.matexpr", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "ask"]]}, {"name": "sympy.matrices.expressions.transpose", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\expressions\\transpose.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.matrices.expressions.transpose"], ["sympy.core.basic", "sympy.matrices.expressions.matexpr", "sympy.functions.elementary.complexes", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["refine_Transpose", "transpose"], ["ask"]]}, {"name": "sympy.matrices.graph", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\graph.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["_connected_components", "_connected_components_decomposition", "_strongly_connected_components", "_strongly_connected_components_decomposition"], ["connected_components", "flatten", "strongly_connected_components"]]}, {"name": "sympy.matrices.immutable", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\immutable.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.immutable", "sympy.matrices.immutable", "sympy.matrices.immutable", "sympy.matrices.immutable"], ["sympy.core.basic", "sympy.matrices.dense", "sympy.core.containers", "sympy.core.numbers", "sympy.matrices.matrices", "sympy.matrices.expressions.matexpr", "sympy.matrices.repmatrix", "sympy.matrices.sparse", "sympy.core.containers", "mpmath.matrices.matrices"]], "hasfunction": 2, "myfunction": [["sympify_matrix", "sympify_mpmath_matrix"], ["_sympify", "func_wrapper", "dispatch"]]}, {"name": "sympy.matrices.inverse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\inverse.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["_inv", "_inv_ADJ", "_inv_CH", "_inv_GE", "_inv_LDL", "_inv_LU", "_inv_QR", "_inv_block", "_inv_mod", "_pinv", "_pinv_diagonalization", "_pinv_full_rank", "_pinv_rank_decomposition", "_verify_invertible"], ["_iszero", "mod_inverse"]]}, {"name": "sympy.matrices.matrices", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\matrices.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices", "sympy.matrices.matrices"], ["sympy.core.add", "sympy.core.basic", "collections.abc", "sympy.core.symbol", "sympy.core.expr", "sympy.functions.special.tensor_functions", "sympy.functions.special.tensor_functions", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.matrices.common", "sympy.matrices.common", "sympy.utilities.iterables", "sympy.core.power", "sympy.printing.defaults", "sympy.matrices.common", "sympy.printing.str", "sympy.core.symbol", "sympy.core.kind", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [[], ["_LDLdecomposition", "_LDLsolve", "_LUdecomposition", "_LUdecompositionFF", "_LUdecomposition_Simple", "_LUsolve", "_QRdecomposition", "_QRsolve", "_adjugate", "_bidiagonal_decomposition", "_bidiagonalize", "_charpoly", "_cholesky", "_cholesky_solve", "_cofactor", "_cofactor_matrix", "_columnspace", "_connected_components", "_connected_components_decomposition", "_det", "_det_LU", "_det_bareiss", "_det_berkowitz", "_diagonal_solve", "_diagonalize", "_echelon_form", "_eigenvals", "_eigenvects", "_find_reasonable_pivot", "_find_reasonable_pivot_naive", "_gauss_jordan_solve", "_inv", "_inv_ADJ", "_inv_CH", "_inv_GE", "_inv_LDL", "_inv_LU", "_inv_QR", "_inv_block", "_inv_mod", "_is_diagonalizable", "_is_echelon", "_is_indefinite", "_is_negative_definite", "_is_negative_semidefinite", "_is_positive_definite", "_is_positive_semidefinite", "_is_zero_after_expand_mul", "_iszero", "_jordan_form", "_left_eigenvects", "_lower_triangular_solve", "_minor", "_minor_submatrix", "_nullspace", "_orthogonalize", "_per", "_pinv", "_pinv_solve", "_rank", "_rank_decomposition", "_rowspace", "_rref", "_simplify", "_singular_value_decomposition", "_singular_values", "_solve", "_solve_least_squares", "_strongly_connected_components", "_strongly_connected_components_decomposition", "_sympify", "_upper_hessenberg_decomposition", "_upper_triangular_solve", "a2idx", "as_int", "cancel", "diff", "filldedent", "flatten", "is_sequence", "reshape", "sqrt", "sympify", "uniquely_named_symbol"]]}, {"name": "sympy.matrices.reductions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\reductions.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_echelon_form", "_is_echelon", "_rank", "_row_reduce", "_row_reduce_list", "_rref"], ["_dotprodsimp", "_find_reasonable_pivot", "_get_intermediate_simp", "_iszero", "_simplify"]]}, {"name": "sympy.matrices.repmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\repmatrix.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.repmatrix", "sympy.matrices.repmatrix"], ["sympy.polys.matrices.domainmatrix", "sympy.core.expr", "sympy.core.numbers", "sympy.core.kind", "sympy.matrices.matrices", "sympy.matrices.common", "sympy.core.numbers", "sympy.matrices.common", "sympy.core.sympify", "collections"]], "hasfunction": 2, "myfunction": [["_getitem_RepMatrix"], ["_sympify", "classof", "filldedent", "is_sequence", "sympy_deprecation_warning"]]}, {"name": "sympy.matrices.solvers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\solvers.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.symbol", "sympy.matrices.common", "sympy.matrices.common", "sympy.matrices.common"]], "hasfunction": 2, "myfunction": [["_LDLsolve", "_LUsolve", "_QRsolve", "_cholesky_solve", "_diagonal_solve", "_gauss_jordan_solve", "_lower_triangular_solve", "_lower_triangular_solve_sparse", "_pinv_solve", "_solve", "_solve_least_squares", "_upper_triangular_solve", "_upper_triangular_solve_sparse"], ["_fuzzy_positive_definite", "_get_intermediate_simp", "_iszero", "expand_mul", "numbered_symbols", "symbols", "uniquely_named_symbol"]]}, {"name": "sympy.matrices.sparse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\sparse.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.sparse", "sympy.matrices.sparse", "sympy.matrices.sparse"], ["collections.abc", "sympy.core.containers", "sympy.matrices.matrices", "sympy.matrices.repmatrix", "sympy.matrices.repmatrix"]], "hasfunction": 2, "myfunction": [[], ["_LDLdecomposition_sparse", "_cholesky_sparse", "_iszero", "_liupc", "_lower_triangular_solve_sparse", "_row_structure_symbolic_cholesky", "_upper_triangular_solve_sparse", "as_int", "is_sequence", "sympy_deprecation_warning"]]}, {"name": "sympy.matrices.sparsetools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\sparsetools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.containers", "sympy.core.symbol", "sympy.matrices.sparse"]], "hasfunction": 2, "myfunction": [["_csrtodok", "_doktocsr", "banded"], ["as_int", "filldedent", "is_sequence"]]}, {"name": "sympy.matrices.subspaces", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\subspaces.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_columnspace", "_nullspace", "_orthogonalize", "_rowspace"], ["_iszero"]]}, {"name": "sympy.matrices.utilities", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\matrices\\utilities.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.matrices.utilities"], ["_thread"]], "hasfunction": 2, "myfunction": [["_dotprodsimp", "_get_intermediate_simp", "_get_intermediate_simp_bool", "_is_zero_after_expand_mul", "_iszero", "_simplify", "dotprodsimp"], ["contextmanager", "expand_mul"]]}, {"name": "sympy.multipledispatch", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\multipledispatch\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher"]], "hasfunction": 2, "myfunction": [[], ["dispatch", "halt_ordering", "restart_ordering"]]}, {"name": "sympy.multipledispatch.conflict", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\multipledispatch\\conflict.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.multipledispatch.conflict"], []], "hasfunction": 2, "myfunction": [["ambiguities", "ambiguous", "consistent", "edge", "ordering", "super_signature", "supercedes"], ["_toposort", "groupby"]]}, {"name": "sympy.multipledispatch.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\multipledispatch\\core.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher"]], "hasfunction": 2, "myfunction": [["dispatch", "ismethod"], ["ambiguity_warn"]]}, {"name": "sympy.multipledispatch.dispatcher", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\multipledispatch\\dispatcher.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher", "sympy.multipledispatch.dispatcher"], ["sympy.multipledispatch.conflict"]], "hasfunction": 2, "myfunction": [["ambiguity_register_error_ignore_dup", "ambiguity_warn", "halt_ordering", "restart_ordering", "source", "str_signature", "warning_text"], ["ambiguities", "expand_tuples", "ordering", "super_signature"]]}, {"name": "sympy.multipledispatch.utils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\multipledispatch\\utils.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections"]], "hasfunction": 2, "myfunction": [["_toposort", "expand_tuples", "groupby", "reverse_dict"], []]}, {"name": "sympy.ntheory", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.ntheory.generate", "sympy.ntheory.factor_", "sympy.ntheory.residue_ntheory", "sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.generate", "sympy.ntheory.factor_", "sympy.ntheory.factor_"]], "hasfunction": 2, "myfunction": [[], ["abundance", "binomial_coefficients", "binomial_coefficients_list", "composite", "compositepi", "continued_fraction", "continued_fraction_convergents", "continued_fraction_iterator", "continued_fraction_periodic", "continued_fraction_reduce", "count_digits", "cycle_length", "digits", "discrete_log", "divisor_count", "divisors", "dra", "drm", "ecm", "egyptian_fraction", "factorint", "factorrat", "is_abundant", "is_amicable", "is_deficient", "is_gaussian_prime", "is_mersenne_prime", "is_nthpow_residue", "is_palindromic", "is_perfect", "is_primitive_root", "is_quad_residue", "isprime", "jacobi_symbol", "legendre_symbol", "mersenne_prime_exponent", "multinomial_coefficients", "multiplicity", "multiplicity_in_factorial", "n_order", "nextprime", "npartitions", "nthroot_mod", "perfect_power", "pollard_pm1", "pollard_rho", "polynomial_congruence", "prevprime", "prime", "primefactors", "primerange", "primitive_root", "primorial", "proper_divisor_count", "proper_divisors", "qs", "quadratic_congruence", "quadratic_residues", "randprime", "sqrt_mod", "sqrt_mod_iter", "trailing"]]}, {"name": "sympy.ntheory.factor_", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\factor_.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.factor_", "sympy.ntheory.factor_"], ["sympy.core.containers", "sympy.core.expr", "sympy.core.function", "sympy.core.numbers", "sympy.core.mul", "sympy.core.power", "sympy.core.numbers", "collections"]], "hasfunction": 2, "myfunction": [["_antidivisors", "_check_termination", "_divisors", "_factorint_small", "_ismersenneprime", "_isperfect", "_trial", "_udivisors", "abundance", "antidivisor_count", "antidivisors", "core", "divisor_count", "divisors", "dra", "drm", "factorint", "factorrat", "is_abundant", "is_amicable", "is_deficient", "is_mersenne_prime", "is_perfect", "mersenne_prime_exponent", "multiplicity", "multiplicity_in_factorial", "perfect_power", "pollard_pm1", "pollard_rho", "primefactors", "proper_divisor_count", "proper_divisors", "smoothness", "smoothness_p", "trailing", "udivisor_count", "udivisors"], ["_ecm_one_factor", "as_int", "bitcount", "digits", "filldedent", "flatten", "fuzzy_and", "ilcm", "integer_log", "integer_nthroot", "isprime", "nextprime", "primerange", "sympify"]]}, {"name": "sympy.ntheory.generate", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\generate.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.ntheory.generate", "sympy.ntheory.generate"], ["sympy.core.function", "array", "itertools"]], "hasfunction": 2, "myfunction": [["_arange", "_as_int_ceiling", "_aset", "_azeros", "composite", "compositepi", "cycle_length", "nextprime", "prevprime", "prime", "primerange", "primorial", "randprime"], ["as_int", "isprime"]]}, {"name": "sympy.ntheory.modular", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\modular.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["crt", "crt1", "crt2", "solve_congruence", "symmetric_residue"], ["as_int", "gf_crt", "gf_crt1", "gf_crt2", "igcdex", "isprime"]]}, {"name": "sympy.ntheory.multinomial", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\multinomial.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["binomial_coefficients", "binomial_coefficients_list", "multinomial_coefficients", "multinomial_coefficients_iterator"], ["as_int"]]}, {"name": "sympy.ntheory.partitions_", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\partitions_.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_a", "_d", "_pre", "npartitions"], ["_sqrt_mod_prime_power", "python_bitcount", "from_int", "from_rational", "is_quad_residue", "jacobi_symbol", "legendre_symbol", "mpf_add", "mpf_cos", "mpf_cosh_sinh", "mpf_div", "python_mpf_mul", "f", "mpf_sin", "mpf_sqrt", "mpf_sub", "to_int", "to_str"]]}, {"name": "sympy.ntheory.primetest", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\primetest.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_int_tuple", "_lucas_extrastrong_params", "_lucas_selfridge_params", "_lucas_sequence", "_test", "is_euler_pseudoprime", "is_extra_strong_lucas_prp", "is_gaussian_prime", "is_lucas_prp", "is_square", "is_strong_lucas_prp", "isprime", "mr"], ["python_bitcount", "as_int", "integer_nthroot", "sympify"]]}, {"name": "sympy.ntheory.residue_ntheory", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\ntheory\\residue_ntheory.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.ntheory.residue_ntheory"], ["sympy.core.function", "sympy.polys.polytools", "itertools", "itertools", "sympy.ntheory.factor_"]], "hasfunction": 2, "myfunction": [["_diff_poly", "_discrete_log_pohlig_hellman", "_discrete_log_pollard_rho", "_discrete_log_shanks_steps", "_discrete_log_trial_mul", "_help", "_is_nthpow_residue_bign", "_is_nthpow_residue_bign_prime_power", "_nthroot_mod1", "_nthroot_mod2", "_nthroot_mod_composite", "_polynomial_congruence_prime", "_primitive_root_prime_iter", "_product", "_sqrt_mod1", "_sqrt_mod_prime_power", "_sqrt_mod_tonelli_shanks", "_val_poly", "_valid_expr", "discrete_log", "is_nthpow_residue", "is_primitive_root", "is_quad_residue", "jacobi_symbol", "legendre_symbol", "n_order", "nthroot_mod", "polynomial_congruence", "primitive_root", "quadratic_congruence", "quadratic_residues", "sqrt_mod", "sqrt_mod_iter"], ["_randint", "as_int", "factorint", "gf_crt1", "gf_crt2", "igcdex", "isprime", "isqrt", "linear_congruence", "mod_inverse", "multiplicity", "perfect_power", "trailing"]]}, {"name": "sympy.parsing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\parsing\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["parse_expr"]]}, {"name": "sympy.parsing.sympy_parser", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\parsing\\sympy_parser.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.parsing.sympy_parser", "sympy.parsing.sympy_parser", "sympy.parsing.sympy_parser", "sympy.parsing.sympy_parser"], ["sympy.assumptions.ask", "sympy.core.basic", "sympy.core.function", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "_io", "sympy.core.symbol", "tokenize"]], "hasfunction": 2, "myfunction": [["_add_factorial_tokens", "_apply_functions", "_flatten", "_group_parentheses", "_implicit_application", "_implicit_multiplication", "_token_callable", "_token_splittable", "_transform_equals_sign", "auto_number", "auto_symbol", "convert_equals_signs", "convert_xor", "eval_expr", "evaluateFalse", "factorial_notation", "function_exponentiation", "implicit_application", "implicit_multiplication", "implicit_multiplication_application", "lambda_notation", "parse_expr", "rationalize", "repeated_decimals", "_split_symbols", "split_symbols_custom", "stringify_expr"], ["func_name", "generate_tokens", "untokenize"]]}, {"name": "sympy.plotting", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.plotting.plot"]], "hasfunction": 2, "myfunction": [[], ["PygletPlot", "plot", "plot3d", "plot3d_parametric_line", "plot3d_parametric_surface", "plot_contour", "plot_implicit", "plot_parametric", "textplot"]]}, {"name": "sympy.plotting.experimental_lambdify", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\experimental_lambdify.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.plotting.experimental_lambdify", "sympy.plotting.experimental_lambdify", "sympy.plotting.experimental_lambdify"], ["sympy.core.numbers", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["experimental_lambdify"], ["import_module", "numbered_symbols"]]}, {"name": "sympy.plotting.intervalmath", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\intervalmath\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.plotting.intervalmath.interval_arithmetic"]], "hasfunction": 2, "myfunction": [[], ["Abs", "And", "Or", "acos", "acosh", "asin", "asinh", "atan", "atanh", "ceil", "cos", "cosh", "exp", "floor", "imax", "imin", "log", "log10", "sin", "sinh", "sqrt", "tan", "tanh"]]}, {"name": "sympy.plotting.intervalmath.interval_arithmetic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\intervalmath\\interval_arithmetic.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.plotting.intervalmath.interval_arithmetic"], ["sympy.plotting.intervalmath.interval_membership"]], "hasfunction": 2, "myfunction": [["_pow_float", "_pow_int"], ["fuzzy_and", "nsimplify"]]}, {"name": "sympy.plotting.intervalmath.interval_membership", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\intervalmath\\interval_membership.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.plotting.intervalmath.interval_membership"], []], "hasfunction": 2, "myfunction": [[], ["fuzzy_and", "fuzzy_not", "fuzzy_or", "fuzzy_xor"]]}, {"name": "sympy.plotting.intervalmath.lib_interval", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\intervalmath\\lib_interval.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.plotting.intervalmath.interval_arithmetic"]], "hasfunction": 2, "myfunction": [["Abs", "And", "Or", "acos", "acosh", "asin", "asinh", "atan", "atanh", "ceil", "cos", "cosh", "exp", "floor", "imax", "imin", "log", "log10", "sin", "sinh", "sqrt", "tan", "tanh"], ["import_module"]]}, {"name": "sympy.plotting.pygletplot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\plotting\\pygletplot\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["PygletPlot"], ["doctest_depends_on"]]}, {"name": "sympy.polys", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.polys.domains.algebraicfield", "sympy.polys.polyerrors", "sympy.polys.rootoftools", "sympy.polys.polyerrors", "sympy.polys.domains.complexfield", "sympy.polys.rootoftools", "sympy.polys.polyerrors", "sympy.polys.domains.domain", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.expressiondomain", "sympy.polys.polyerrors", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.pythonfinitefield", "sympy.polys.domains.finitefield", "sympy.polys.polyerrors", "sympy.polys.domains.fractionfield", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.gmpyrationalfield", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.integerring", "sympy.polys.polyerrors", "sympy.polys.monomials", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyoptions", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.polynomialring", "sympy.polys.polytools", "sympy.polys.domains.pythonfinitefield", "sympy.polys.domains.pythonintegerring", "sympy.external.pythonmpq", "sympy.polys.domains.gmpyrationalfield", "sympy.polys.domains.pythonrationalfield", "sympy.polys.domains.rationalfield", "sympy.polys.domains.realfield", "sympy.polys.polyerrors", "sympy.polys.rootoftools", "sympy.polys.rootoftools", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.pythonintegerring"]], "hasfunction": 2, "myfunction": [[], ["LC", "LM", "LT", "andre_poly", "apart", "apart_list", "assemble_partfrac_list", "bernoulli_c_poly", "bernoulli_poly", "cancel", "chebyshevt_poly", "chebyshevu_poly", "cofactors", "compose", "construct_domain", "content", "count_roots", "cyclotomic_poly", "decompose", "degree", "degree_list", "discriminant", "div", "euler_poly", "exquo", "factor", "factor_list", "field", "field_isomorphism", "galois_group", "gcd", "gcd_list", "gcdex", "genocchi_poly", "gff", "gff_list", "groebner", "ground_roots", "half_gcdex", "hermite_poly", "hermite_prob_poly", "horner", "interpolate", "interpolating_poly", "intervals", "invert", "is_zero_dimensional", "isolate", "itermonomials", "jacobi_poly", "laguerre_poly", "lcm", "lcm_list", "legendre_poly", "minimal_polynomial", "minpoly", "monic", "nroots", "nth_power_roots_poly", "parallel_poly_from_expr", "pdiv", "pexquo", "poly", "poly_from_expr", "pquo", "prem", "prime_decomp", "prime_valuation", "primitive", "primitive_element", "quo", "random_poly", "rational_interpolate", "real_roots", "reduced", "refine_root", "rem", "resultant", "ring", "rootof", "roots", "round_two", "sfield", "sqf", "sqf_list", "sqf_norm", "sqf_part", "sring", "sturm", "subresultants", "swinnerton_dyer_poly", "symmetric_poly", "symmetrize", "terms_gcd", "to_number_field", "together", "total_degree", "trunc", "vfield", "viete", "vring", "xfield", "xring"]]}, {"name": "sympy.polys.agca", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\agca\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["homomorphism"]]}, {"name": "sympy.polys.agca.extensions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\agca\\extensions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.agca.extensions", "sympy.polys.agca.extensions", "sympy.polys.agca.extensions", "sympy.polys.agca.extensions"], ["sympy.polys.polyerrors", "sympy.printing.defaults", "sympy.polys.domains.domain", "sympy.polys.domains.domainelement", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.agca.homomorphisms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\agca\\homomorphisms.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.agca.homomorphisms", "sympy.polys.agca.homomorphisms", "sympy.polys.agca.homomorphisms", "sympy.polys.agca.homomorphisms"], ["sympy.polys.polyerrors", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules"]], "hasfunction": 2, "myfunction": [["homomorphism"], []]}, {"name": "sympy.polys.agca.ideals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\agca\\ideals.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.agca.ideals", "sympy.polys.agca.ideals"], ["sympy.polys.polyerrors", "sympy.polys.polyutils"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.agca.modules", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\agca\\modules.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules", "sympy.polys.agca.modules"], ["sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.polys.agca.ideals", "sympy.polys.orderings"]], "hasfunction": 2, "myfunction": [["<lambda>", "<lambda>"], ["_aresame", "copy", "iterable", "monomial_key"]]}, {"name": "sympy.polys.appellseqs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\appellseqs.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["andre_poly", "bernoulli_c_poly", "bernoulli_poly", "dup_andre", "dup_bernoulli", "dup_bernoulli_c", "dup_euler", "dup_genocchi", "euler_poly", "genocchi_poly"], ["dup_eval", "dup_integrate", "dup_mul_ground", "dup_quo_ground", "dup_sub_ground", "named_poly", "public"]]}, {"name": "sympy.polys.compatibility", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\compatibility.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.compatibility"], []], "hasfunction": 2, "myfunction": [[], ["poly_LC", "poly_TC", "dmp_abs", "dmp_add", "dmp_add_ground", "dmp_add_mul", "dmp_add_term", "dmp_cancel", "dmp_clear_denoms", "dmp_compose", "dmp_content", "dmp_degree", "dmp_degree_in", "dmp_diff", "dmp_diff_eval_in", "dmp_diff_in", "dmp_discriminant", "dmp_div", "dmp_euclidean_prs", "dmp_eval", "dmp_eval_in", "dmp_eval_tail", "dmp_expand", "dmp_exquo", "dmp_exquo_ground", "dmp_ext_factor", "dmp_factor_list", "dmp_factor_list_include", "dmp_ff_div", "dmp_ff_lcm", "dmp_ff_prs_gcd", "dmp_gcd", "dmp_gcdex", "dmp_gf_factor", "dmp_gf_sqf_list", "dmp_gf_sqf_part", "dmp_gff_list", "dmp_ground_LC", "dmp_ground_TC", "dmp_ground_content", "dmp_ground_extract", "dmp_ground_monic", "dmp_ground_primitive", "dmp_ground_trunc", "dmp_half_gcdex", "dmp_inner_gcd", "dmp_inner_subresultants", "dmp_integrate", "dmp_integrate_in", "dmp_invert", "dmp_irreducible_p", "dmp_l1_norm", "dmp_l2_norm_squared", "dmp_lcm", "dmp_lift", "dmp_max_norm", "dmp_mul", "dmp_mul_ground", "dmp_mul_term", "dmp_neg", "dmp_pdiv", "dmp_pexquo", "dmp_pow", "dmp_pquo", "dmp_prem", "dmp_primitive", "dmp_primitive_prs", "dmp_prs_resultant", "dmp_qq_collins_resultant", "dmp_qq_heu_gcd", "dmp_qq_i_factor", "dmp_quo", "dmp_quo_ground", "dmp_rem", "dmp_resultant", "dmp_rr_div", "dmp_rr_lcm", "dmp_rr_prs_gcd", "dmp_sqf_list", "dmp_sqf_list_include", "dmp_sqf_norm", "dmp_sqf_p", "dmp_sqf_part", "dmp_sqr", "dmp_sub", "dmp_sub_ground", "dmp_sub_mul", "dmp_sub_term", "dmp_subresultants", "dmp_to_dict", "dmp_trial_division", "dmp_trunc", "dmp_zz_collins_resultant", "dmp_zz_diophantine", "dmp_zz_factor", "dmp_zz_heu_gcd", "dmp_zz_i_factor", "dmp_zz_mignotte_bound", "dmp_zz_modular_resultant", "dmp_zz_wang", "dmp_zz_wang_hensel_lifting", "dmp_zz_wang_lead_coeffs", "dmp_zz_wang_non_divisors", "poly_LC", "poly_TC", "dup_abs", "dup_add", "dup_add_ground", "dup_add_mul", "dup_add_term", "dup_cancel", "dup_clear_denoms", "dup_compose", "dup_content", "dup_count_complex_roots", "dup_count_real_roots", "dup_cyclotomic_p", "dup_decompose", "dup_degree", "dup_diff", "dup_discriminant", "dup_div", "dup_euclidean_prs", "dup_eval", "dup_expand", "dup_exquo", "dup_exquo_ground", "dup_ext_factor", "dup_extract", "dup_factor_list", "dup_factor_list_include", "dup_ff_div", "dup_ff_lcm", "dup_ff_prs_gcd", "dup_gcd", "dup_gcdex", "dup_gf_factor", "dup_gf_sqf_list", "dup_gf_sqf_part", "dup_gff_list", "dup_half_gcdex", "dup_inner_gcd", "dup_inner_isolate_negative_roots", "dup_inner_isolate_positive_roots", "dup_inner_isolate_real_roots", "dup_inner_refine_real_root", "dup_inner_subresultants", "dup_integrate", "dup_invert", "dup_irreducible_p", "dup_isolate_all_roots", "dup_isolate_all_roots_sqf", "dup_isolate_complex_roots_sqf", "dup_isolate_real_roots", "dup_isolate_real_roots_list", "dup_isolate_real_roots_sqf", "dup_l1_norm", "dup_l2_norm_squared", "dup_lcm", "dup_lshift", "dup_max_norm", "dup_mirror", "dup_monic", "dup_mul", "dup_mul_ground", "dup_mul_term", "dup_neg", "dup_outer_refine_real_root", "dup_pdiv", "dup_pexquo", "dup_pow", "dup_pquo", "dup_prem", "dup_primitive", "dup_primitive_prs", "dup_prs_resultant", "dup_qq_heu_gcd", "dup_qq_i_factor", "dup_quo", "dup_quo_ground", "dup_real_imag", "dup_refine_real_root", "dup_rem", "dup_resultant", "dup_revert", "dup_root_lower_bound", "dup_root_upper_bound", "dup_rr_div", "dup_rr_lcm", "dup_rr_prs_gcd", "dup_rshift", "dup_scale", "dup_shift", "dup_sign_variations", "dup_sqf_list", "dup_sqf_list_include", "dup_sqf_norm", "dup_sqf_p", "dup_sqf_part", "dup_sqr", "dup_step_refine_real_root", "dup_sturm", "dup_sub", "dup_sub_ground", "dup_sub_mul", "dup_sub_term", "dup_subresultants", "dup_transform", "dup_trial_division", "dup_trunc", "dup_zz_cyclotomic_factor", "dup_zz_cyclotomic_poly", "dup_zz_diophantine", "dup_zz_factor", "dup_zz_factor_sqf", "dup_zz_hensel_lift", "dup_zz_hensel_step", "dup_zz_heu_gcd", "dup_zz_i_factor", "dup_zz_irreducible_p", "dup_zz_mignotte_bound", "dup_zz_zassenhaus", "gf_LC", "gf_Qmatrix", "gf_TC", "gf_add", "gf_add_ground", "gf_add_mul", "gf_berlekamp", "gf_cofactors", "gf_compose", "gf_compose_mod", "gf_ddf_shoup", "gf_ddf_zassenhaus", "gf_degree", "gf_diff", "gf_div", "gf_edf_shoup", "gf_edf_zassenhaus", "gf_eval", "gf_expand", "gf_exquo", "gf_factor", "gf_factor_sqf", "gf_from_dict", "gf_from_int_poly", "gf_gcd", "gf_gcdex", "gf_irred_p_ben_or", "gf_irred_p_rabin", "gf_irreducible", "gf_irreducible_p", "gf_lcm", "gf_lshift", "gf_monic", "gf_mul", "gf_mul_ground", "gf_multi_eval", "gf_neg", "gf_pow", "gf_pow_mod", "gf_quo", "gf_quo_ground", "gf_random", "gf_rem", "gf_rshift", "gf_shoup", "gf_sqf_p", "gf_sqf_part", "gf_sqr", "gf_strip", "gf_sub", "gf_sub_ground", "gf_sub_mul", "gf_to_dict", "gf_to_int_poly", "gf_trace_map", "gf_zassenhaus", "public"]]}, {"name": "sympy.polys.constructor", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\constructor.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.domains.complexfield", "sympy.polys.domains.realfield"]], "hasfunction": 2, "myfunction": [["_construct_algebraic", "_construct_composite", "_construct_expression", "_construct_simple", "construct_domain"], ["build_options", "ordered", "parallel_dict_from_expr", "public", "pure_complex", "sympify"]]}, {"name": "sympy.polys.densearith", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\densearith.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["dmp_abs", "dmp_add", "dmp_add_ground", "dmp_add_mul", "dmp_add_term", "dmp_div", "dmp_expand", "dmp_exquo", "dmp_exquo_ground", "dmp_ff_div", "dmp_l1_norm", "dmp_l2_norm_squared", "dmp_max_norm", "dmp_mul", "dmp_mul_ground", "dmp_mul_term", "dmp_neg", "dmp_pdiv", "dmp_pexquo", "dmp_pow", "dmp_pquo", "dmp_prem", "dmp_quo", "dmp_quo_ground", "dmp_rem", "dmp_rr_div", "dmp_sqr", "dmp_sub", "dmp_sub_ground", "dmp_sub_mul", "dmp_sub_term", "dup_abs", "dup_add", "dup_add_ground", "dup_add_mul", "dup_add_term", "dup_div", "dup_expand", "dup_exquo", "dup_exquo_ground", "dup_ff_div", "dup_l1_norm", "dup_l2_norm_squared", "dup_lshift", "dup_max_norm", "dup_mul", "dup_mul_ground", "dup_mul_term", "dup_neg", "dup_pdiv", "dup_pexquo", "dup_pow", "dup_pquo", "dup_prem", "dup_quo", "dup_quo_ground", "dup_rem", "dup_rr_div", "dup_rshift", "dup_sqr", "dup_sub", "dup_sub_ground", "dup_sub_mul", "dup_sub_term"], ["poly_LC", "dmp_degree", "dmp_ground", "dmp_one", "dmp_one_p", "dmp_strip", "dmp_zero", "dmp_zero_p", "dmp_zeros", "poly_LC", "dup_degree", "dup_slice", "dup_strip"]]}, {"name": "sympy.polys.densebasic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\densebasic.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_rec_degree_in", "_rec_degree_list", "_rec_inflate", "_rec_list_terms", "_rec_strip", "_rec_validate", "poly_LC", "poly_TC", "dmp_apply_pairs", "dmp_convert", "dmp_copy", "dmp_deflate", "dmp_degree", "dmp_degree_in", "dmp_degree_list", "dmp_eject", "dmp_exclude", "dmp_from_dict", "dmp_from_sympy", "dmp_ground", "dmp_ground_LC", "dmp_ground_TC", "dmp_ground_nth", "dmp_ground_p", "dmp_grounds", "dmp_include", "dmp_inflate", "dmp_inject", "dmp_list_terms", "dmp_multi_deflate", "dmp_negative_p", "dmp_nest", "dmp_normal", "dmp_nth", "dmp_one", "dmp_one_p", "dmp_permute", "dmp_positive_p", "dmp_raise", "dmp_slice", "dmp_slice_in", "dmp_strip", "dmp_swap", "dmp_terms_gcd", "dmp_to_dict", "dmp_to_tuple", "dmp_true_LT", "dmp_validate", "dmp_zero", "dmp_zero_p", "dmp_zeros", "poly_LC", "poly_TC", "dup_apply_pairs", "dup_convert", "dup_copy", "dup_deflate", "dup_degree", "dup_from_dict", "dup_from_raw_dict", "dup_from_sympy", "dup_inflate", "dup_multi_deflate", "dup_normal", "dup_nth", "dup_random", "dup_reverse", "dup_slice", "dup_strip", "dup_terms_gcd", "dup_to_dict", "dup_to_raw_dict", "dup_to_tuple", "poly_LC", "poly_TC"], ["monomial_div", "monomial_key", "monomial_min"]]}, {"name": "sympy.polys.densetools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\densetools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_dup_decompose", "_dup_left_decompose", "_dup_right_decompose", "_rec_clear_denoms", "_rec_diff_eval", "_rec_diff_in", "_rec_eval_in", "_rec_eval_tail", "_rec_integrate_in", "dmp_clear_denoms", "dmp_compose", "dmp_diff", "dmp_diff_eval_in", "dmp_diff_in", "dmp_eval", "dmp_eval_in", "dmp_eval_tail", "dmp_ground_content", "dmp_ground_extract", "dmp_ground_monic", "dmp_ground_primitive", "dmp_ground_trunc", "dmp_integrate", "dmp_integrate_in", "dmp_lift", "dmp_revert", "dmp_trunc", "dup_clear_denoms", "dup_compose", "dup_content", "dup_decompose", "dup_diff", "dup_eval", "dup_extract", "dup_integrate", "dup_mirror", "dup_monic", "dup_primitive", "dup_real_imag", "dup_revert", "dup_scale", "dup_shift", "dup_sign_variations", "dup_transform", "dup_trunc"], ["poly_LC", "poly_TC", "dmp_add", "dmp_add_term", "dmp_convert", "dmp_degree", "dmp_expand", "dmp_exquo_ground", "dmp_from_dict", "dmp_ground", "dmp_ground_LC", "dmp_mul", "dmp_mul_ground", "dmp_quo_ground", "dmp_rem", "dmp_strip", "dmp_sub", "dmp_to_dict", "dmp_zero", "dmp_zero_p", "dmp_zeros", "poly_LC", "poly_TC", "dup_add", "dup_add_term", "dup_convert", "dup_degree", "dup_div", "dup_exquo_ground", "dup_from_raw_dict", "dup_lshift", "dup_mul", "dup_mul_ground", "dup_quo_ground", "dup_rem", "dup_sqr", "dup_strip", "dup_sub", "dup_to_raw_dict", "variations"]]}, {"name": "sympy.polys.domainmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domainmatrix.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.domainmatrix"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.domains", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.domains.algebraicfield", "sympy.polys.domains.complexfield", "sympy.polys.domains.domain", "sympy.polys.domains.expressiondomain", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.pythonfinitefield", "sympy.polys.domains.finitefield", "sympy.polys.domains.fractionfield", "sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyfinitefield", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.gmpyrationalfield", "sympy.polys.domains.integerring", "sympy.polys.domains.polynomialring", "sympy.polys.domains.pythonfinitefield", "sympy.polys.domains.pythonintegerring", "sympy.external.pythonmpq", "sympy.polys.domains.pythonrationalfield", "sympy.polys.domains.gmpyrationalfield", "sympy.polys.domains.pythonrationalfield", "sympy.polys.domains.rationalfield", "sympy.polys.domains.realfield", "sympy.polys.domains.gmpyintegerring", "sympy.polys.domains.pythonintegerring"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.domains.algebraicfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\algebraicfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.algebraicfield"], ["sympy.polys.polyclasses", "sympy.core.add", "sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.polys.polyerrors", "sympy.core.mul", "sympy.polys.polyerrors", "sympy.polys.domains.simpledomain"]], "hasfunction": 2, "myfunction": [["_make_converter"], ["public"]]}, {"name": "sympy.polys.domains.characteristiczero", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\characteristiczero.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.characteristiczero"], ["sympy.polys.domains.domain"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.complexfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\complexfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.complexfield"], ["sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.core.numbers", "sympy.polys.domains.mpelements", "sympy.polys.domains.simpledomain"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.compositedomain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\compositedomain.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.compositedomain"], ["sympy.polys.domains.domain", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.domain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\domain.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.domain"], ["sympy.core.numbers", "sympy.core.basic", "sympy.polys.polyerrors", "sympy.polys.domains.domainelement", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [[], ["_not_a_coeff", "_unify_gens", "default_sort_key", "is_sequence", "ordered", "public", "sympify"]]}, {"name": "sympy.polys.domains.domainelement", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\domainelement.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.domainelement"], []], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.expressiondomain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\expressiondomain.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.expressiondomain"], ["sympy.polys.domains.characteristiczero", "sympy.polys.domains.field", "sympy.polys.polyutils", "sympy.polys.domains.simpledomain", "sympy.core.sympify"]], "hasfunction": 2, "myfunction": [[], ["public", "sympify"]]}, {"name": "sympy.polys.domains.expressionrawdomain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\expressionrawdomain.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.expressionrawdomain"], ["sympy.core.add", "sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "sympy.core.expr", "sympy.polys.domains.field", "sympy.polys.domains.simpledomain"]], "hasfunction": 2, "myfunction": [[], ["public", "sympify"]]}, {"name": "sympy.polys.domains.field", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\field.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.field"], ["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.domains.ring"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.finitefield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\finitefield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.finitefield", "sympy.polys.domains.finitefield", "sympy.polys.domains.finitefield"], ["sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.polys.domains.simpledomain", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["ModularIntegerFactory", "public"]]}, {"name": "sympy.polys.domains.fractionfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\fractionfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.fractionfield"], ["sympy.polys.polyerrors", "sympy.polys.domains.compositedomain", "sympy.polys.domains.field", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.gaussiandomains", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\gaussiandomains.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.gaussiandomains", "sympy.polys.domains.gaussiandomains", "sympy.polys.domains.gaussiandomains", "sympy.polys.domains.gaussiandomains", "sympy.polys.domains.gaussiandomains", "sympy.polys.domains.gaussiandomains"], ["sympy.polys.domains.algebraicfield", "sympy.polys.polyerrors", "sympy.polys.domains.domain", "sympy.polys.domains.domainelement", "sympy.polys.domains.field", "sympy.polys.domains.ring"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.domains.gmpyfinitefield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\gmpyfinitefield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.gmpyfinitefield"], ["sympy.polys.domains.finitefield", "sympy.polys.domains.gmpyintegerring"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.gmpyintegerring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\gmpyintegerring.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.gmpyintegerring"], ["sympy.polys.polyerrors", "sympy.polys.domains.groundtypes", "sympy.polys.domains.integerring", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["<lambda>", "<lambda>", "public"]]}, {"name": "sympy.polys.domains.gmpyrationalfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\gmpyrationalfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.gmpyrationalfield"], ["sympy.polys.polyerrors", "sympy.polys.domains.groundtypes", "sympy.polys.domains.rationalfield", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["<lambda>", "public"]]}, {"name": "sympy.polys.domains.groundtypes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\groundtypes.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.groundtypes", "sympy.polys.domains.groundtypes", "sympy.polys.domains.groundtypes", "sympy.polys.domains.groundtypes"], ["builtins", "builtins", "sympy.external.pythonmpq", "builtins", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["<lambda>", "igcdex", "ilcm", "igcdex", "ilcm", "<lambda>"]]}, {"name": "sympy.polys.domains.integerring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\integerring.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.integerring"], ["sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "builtins", "sympy.polys.domains.ring", "sympy.polys.domains.simpledomain", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["<lambda>", "igcdex", "ilcm", "public", "<lambda>"]]}, {"name": "sympy.polys.domains.modularinteger", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\modularinteger.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.modularinteger"], ["sympy.polys.polyerrors", "sympy.polys.domains.domainelement", "sympy.polys.polyutils"]], "hasfunction": 2, "myfunction": [["ModularIntegerFactory"], ["public"]]}, {"name": "sympy.polys.domains.mpelements", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\mpelements.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.mpelements", "sympy.polys.domains.mpelements", "sympy.polys.domains.mpelements"], ["sympy.polys.domains.domainelement", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python", "mpmath.rational"]], "hasfunction": 2, "myfunction": [[], ["from_float", "from_int", "from_str", "python_mpf_mul", "public", "repr_dps", "to_rational"]]}, {"name": "sympy.polys.domains.polynomialring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\polynomialring.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.polynomialring"], ["sympy.polys.polyerrors", "sympy.polys.domains.compositedomain", "sympy.polys.polyerrors", "sympy.polys.domains.ring"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.pythonfinitefield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\pythonfinitefield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.pythonfinitefield"], ["sympy.polys.domains.finitefield", "sympy.polys.domains.pythonintegerring"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.pythonintegerring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\pythonintegerring.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.pythonintegerring"], ["sympy.polys.polyerrors", "sympy.polys.domains.integerring", "builtins", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["public", "<lambda>", "igcdex", "ilcm", "<lambda>"]]}, {"name": "sympy.polys.domains.pythonrational", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\pythonrational.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.external.pythonmpq", "sympy.external.pythonmpq", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["sympify_pythonrational"], ["public"]]}, {"name": "sympy.polys.domains.pythonrationalfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\pythonrationalfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.pythonrationalfield"], ["sympy.polys.polyerrors", "builtins", "sympy.external.pythonmpq", "sympy.polys.domains.rationalfield", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.rationalfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\rationalfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.rationalfield"], ["sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.external.pythonmpq", "sympy.polys.domains.simpledomain", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.realfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\realfield.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.realfield"], ["sympy.polys.domains.characteristiczero", "sympy.polys.polyerrors", "sympy.polys.domains.field", "sympy.core.numbers", "sympy.polys.domains.mpelements", "sympy.polys.domains.simpledomain"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.ring", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\ring.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.ring"], ["sympy.polys.domains.domain", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.domains.simpledomain", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\domains\\simpledomain.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.domains.simpledomain"], ["sympy.polys.domains.domain"]], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.euclidtools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\euclidtools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_collins_crt", "_dmp_ff_trivial_gcd", "_dmp_inner_gcd", "_dmp_rr_trivial_gcd", "_dmp_simplify_gcd", "_dmp_zz_gcd_interpolate", "_dup_ff_trivial_gcd", "_dup_rr_trivial_gcd", "_dup_zz_gcd_interpolate", "dmp_cancel", "dmp_content", "dmp_discriminant", "dmp_euclidean_prs", "dmp_ff_lcm", "dmp_ff_prs_gcd", "dmp_gcd", "dmp_gcdex", "dmp_half_gcdex", "dmp_inner_gcd", "dmp_inner_subresultants", "dmp_invert", "dmp_lcm", "dmp_primitive", "dmp_primitive_prs", "dmp_prs_resultant", "dmp_qq_collins_resultant", "dmp_qq_heu_gcd", "dmp_resultant", "dmp_rr_lcm", "dmp_rr_prs_gcd", "dmp_subresultants", "dmp_zz_collins_resultant", "dmp_zz_heu_gcd", "dmp_zz_modular_resultant", "dup_cancel", "dup_discriminant", "dup_euclidean_prs", "dup_ff_lcm", "dup_ff_prs_gcd", "dup_gcd", "dup_gcdex", "dup_half_gcdex", "dup_inner_gcd", "dup_inner_subresultants", "dup_invert", "dup_lcm", "dup_primitive_prs", "dup_prs_resultant", "dup_qq_heu_gcd", "dup_resultant", "dup_rr_lcm", "dup_rr_prs_gcd", "dup_subresultants", "dup_zz_heu_gcd"], ["poly_LC", "dmp_add", "dmp_apply_pairs", "dmp_clear_denoms", "dmp_convert", "dmp_degree", "dmp_degree_in", "dmp_diff", "dmp_div", "dmp_eval", "dmp_eval_in", "dmp_ground", "dmp_ground_LC", "dmp_ground_extract", "dmp_ground_monic", "dmp_ground_primitive", "dmp_ground_trunc", "dmp_inflate", "dmp_max_norm", "dmp_mul", "dmp_mul_ground", "dmp_mul_term", "dmp_multi_deflate", "dmp_neg", "dmp_one", "dmp_one_p", "dmp_pow", "dmp_prem", "dmp_quo", "dmp_quo_ground", "dmp_raise", "dmp_sub", "dmp_zero", "dmp_zero_p", "dmp_zeros", "poly_LC", "dup_clear_denoms", "dup_convert", "dup_degree", "dup_diff", "dup_div", "dup_eval", "dup_extract", "dup_max_norm", "dup_monic", "dup_mul", "dup_mul_ground", "dup_neg", "dup_prem", "dup_primitive", "dup_quo", "dup_quo_ground", "dup_rem", "dup_strip", "dup_sub_mul", "dup_trunc", "gf_crt", "gf_int", "query"]]}, {"name": "sympy.polys.factortools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\factortools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_dup_cyclotomic_decompose", "_test_pl", "dmp_ext_factor", "dmp_factor_list", "dmp_factor_list_include", "dmp_gf_factor", "dmp_irreducible_p", "dmp_qq_i_factor", "dmp_trial_division", "dmp_zz_diophantine", "dmp_zz_factor", "dmp_zz_i_factor", "dmp_zz_mignotte_bound", "dmp_zz_wang", "dmp_zz_wang_hensel_lifting", "dmp_zz_wang_lead_coeffs", "dmp_zz_wang_non_divisors", "dmp_zz_wang_test_points", "dup_cyclotomic_p", "dup_ext_factor", "dup_factor_list", "dup_factor_list_include", "dup_gf_factor", "dup_irreducible_p", "dup_qq_i_factor", "dup_trial_division", "dup_zz_cyclotomic_factor", "dup_zz_cyclotomic_poly", "dup_zz_diophantine", "dup_zz_factor", "dup_zz_factor_sqf", "dup_zz_hensel_lift", "dup_zz_hensel_step", "dup_zz_i_factor", "dup_zz_irreducible_p", "dup_zz_mignotte_bound", "dup_zz_zassenhaus"], ["_randint", "_sort_factors", "poly_LC", "dmp_add", "dmp_add_mul", "dmp_clear_denoms", "dmp_compose", "dmp_convert", "dmp_degree", "dmp_degree_in", "dmp_degree_list", "dmp_diff_eval_in", "dmp_div", "dmp_eject", "dmp_eval_in", "dmp_eval_tail", "dmp_exclude", "dmp_expand", "dmp_from_dict", "dmp_ground", "dmp_ground_LC", "dmp_ground_monic", "dmp_ground_primitive", "dmp_ground_trunc", "dmp_include", "dmp_inject", "dmp_inner_gcd", "dmp_max_norm", "dmp_mul", "dmp_mul_ground", "dmp_neg", "dmp_nest", "dmp_one", "dmp_pow", "dmp_primitive", "dmp_quo", "dmp_quo_ground", "dmp_raise", "dmp_sqf_norm", "dmp_sqf_part", "dmp_sub", "dmp_sub_mul", "dmp_terms_gcd", "dmp_zero_p", "poly_LC", "poly_TC", "dup_add", "dup_clear_denoms", "dup_content", "dup_convert", "dup_degree", "dup_div", "dup_inflate", "dup_inner_gcd", "dup_l1_norm", "dup_lshift", "dup_max_norm", "dup_mirror", "dup_monic", "dup_mul", "dup_mul_ground", "dup_neg", "dup_primitive", "dup_quo", "dup_quo_ground", "dup_shift", "dup_sqf_norm", "dup_sqf_p", "dup_sqf_part", "dup_sqr", "dup_strip", "dup_sub", "dup_sub_mul", "dup_terms_gcd", "dup_trunc", "gf_add_mul", "gf_div", "gf_factor", "gf_factor_sqf", "gf_from_int_poly", "gf_gcdex", "gf_lshift", "gf_mul", "gf_rem", "gf_sqf_p", "gf_to_int_poly", "query", "subsets"]]}, {"name": "sympy.polys.fglmtools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\fglmtools.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_basis", "_identity_matrix", "_incr_k", "_matrix_mul", "_representing_matrices", "_update", "matrix_fglm"], ["monomial_div", "monomial_mul"]]}, {"name": "sympy.polys.fields", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\fields.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.fields", "sympy.polys.fields"], ["sympy.core.sympify", "sympy.polys.polyerrors", "sympy.printing.defaults", "sympy.polys.domains.domainelement", "sympy.core.numbers", "sympy.functions.elementary.exponential", "sympy.core.expr", "sympy.polys.domains.fractionfield", "sympy.core.mod", "sympy.polys.rings", "sympy.polys.domains.polynomialring", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["field", "sfield", "vfield", "xfield"], ["_parallel_dict_from_expr", "build_options", "construct_domain", "is_sequence", "pollute", "public", "sympify"]]}, {"name": "sympy.polys.galoistools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\galoistools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_gf_pow_pnm1d2", "_gf_trace_map", "_raise_mod_power", "csolve_prime", "gf_LC", "gf_Qbasis", "gf_Qmatrix", "gf_TC", "gf_add", "gf_add_ground", "gf_add_mul", "gf_berlekamp", "gf_cofactors", "gf_compose", "gf_compose_mod", "gf_crt", "gf_crt1", "gf_crt2", "gf_csolve", "gf_ddf_shoup", "gf_ddf_zassenhaus", "gf_degree", "gf_diff", "gf_div", "gf_edf_shoup", "gf_edf_zassenhaus", "gf_eval", "gf_expand", "gf_exquo", "gf_factor", "gf_factor_sqf", "gf_frobenius_map", "gf_frobenius_monomial_base", "gf_from_dict", "gf_from_int_poly", "gf_gcd", "gf_gcdex", "gf_int", "gf_irred_p_ben_or", "gf_irred_p_rabin", "gf_irreducible", "gf_irreducible_p", "gf_lcm", "gf_lshift", "gf_monic", "gf_mul", "gf_mul_ground", "gf_multi_eval", "gf_neg", "gf_normal", "gf_pow", "gf_pow_mod", "gf_quo", "gf_quo_ground", "gf_random", "gf_rem", "gf_rshift", "gf_shoup", "gf_sqf_list", "gf_sqf_p", "gf_sqf_part", "gf_sqr", "gf_strip", "gf_sub", "gf_sub_ground", "gf_sub_mul", "gf_to_dict", "gf_to_int_poly", "gf_trace_map", "gf_trunc", "gf_value", "gf_zassenhaus", "linear_congruence"], ["_sort_factors", "query"]]}, {"name": "sympy.polys.groebnertools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\groebnertools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["Num", "Polyn", "Sign", "_buchberger", "_f5b", "cp_cmp", "cp_key", "critical_pair", "f5_reduce", "groebner", "groebner_gcd", "groebner_lcm", "is_groebner", "is_minimal", "is_reduced", "is_rewritable_or_comparable", "lbp", "lbp_cmp", "lbp_key", "lbp_mul_term", "lbp_sub", "red_groebner", "s_poly", "sig", "sig_cmp", "sig_key", "sig_mult", "spoly"], ["monomial_divides", "monomial_lcm", "monomial_mul", "query", "term_div"]]}, {"name": "sympy.polys.heuristicgcd", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\heuristicgcd.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_gcd_interpolate", "heugcd"], []]}, {"name": "sympy.polys.matrices", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.domainmatrix"]], "hasfunction": 2, "myfunction": [[], ["DM"]]}, {"name": "sympy.polys.matrices._typing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\_typing.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices._typing"], ["typing", "typing"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.matrices.ddm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\ddm.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices.ddm"], ["sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.sdm", "itertools"]], "hasfunction": 2, "myfunction": [[], ["ddm_berk", "ddm_iadd", "ddm_idet", "ddm_iinv", "ddm_ilu_solve", "ddm_ilu_split", "ddm_imatmul", "ddm_imul", "ddm_ineg", "ddm_irmul", "ddm_irref", "ddm_isub", "ddm_lll", "ddm_lll_transform", "ddm_transpose"]]}, {"name": "sympy.polys.matrices.dense", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\dense.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices._typing", "typing"]], "hasfunction": 2, "myfunction": [["ddm_berk", "ddm_iadd", "ddm_idet", "ddm_iinv", "ddm_ilu", "ddm_ilu_solve", "ddm_ilu_split", "ddm_imatmul", "ddm_imul", "ddm_ineg", "ddm_irmul", "ddm_irref", "ddm_isub", "ddm_transpose"], []]}, {"name": "sympy.polys.matrices.domainmatrix", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\domainmatrix.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices.domainmatrix"], ["sympy.polys.matrices.ddm", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.domains.domain", "sympy.polys.matrices.domainscalar", "sympy.polys.matrices.sdm"]], "hasfunction": 2, "myfunction": [["DM"], ["_sympify", "construct_domain"]]}, {"name": "sympy.polys.matrices.domainscalar", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\domainscalar.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices.domainscalar"], ["sympy.polys.domains.domain"]], "hasfunction": 2, "myfunction": [[], ["construct_domain"]]}, {"name": "sympy.polys.matrices.eigen", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\eigen.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.polys.rootoftools", "sympy.polys.matrices.domainmatrix", "sympy.core.symbol", "sympy.polys.agca.extensions", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["dom_eigenvects", "dom_eigenvects_to_sympy"], ["dup_factor_list", "roots"]]}, {"name": "sympy.polys.matrices.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\exceptions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.matrices.linsolve", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\linsolve.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.mul", "sympy.polys.solvers", "sympy.polys.matrices.sdm", "collections"]], "hasfunction": 2, "myfunction": [["_lin_eq2dict", "_linear_eq_to_dict", "_linsolve", "sympy_dict_to_dm"], ["construct_domain", "filldedent", "sdm_irref", "sdm_nullspace_from_rref", "sdm_particular_from_rref"]]}, {"name": "sympy.polys.matrices.lll", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\lll.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions"]], "hasfunction": 2, "myfunction": [["_ddm_lll", "ddm_lll", "ddm_lll_transform"], []]}, {"name": "sympy.polys.matrices.normalforms", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\normalforms.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.domainmatrix", "collections"]], "hasfunction": 2, "myfunction": [["_gcdex", "_hermite_normal_form", "_hermite_normal_form_modulo_D", "add_columns", "hermite_normal_form", "invariant_factors", "smith_normal_form"], ["symmetric_residue"]]}, {"name": "sympy.polys.matrices.sdm", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\matrices\\sdm.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.matrices.sdm"], ["sympy.polys.matrices.ddm", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.exceptions", "collections"]], "hasfunction": 2, "myfunction": [["binop_dict", "sdm_irref", "sdm_matmul", "sdm_matmul_exraw", "sdm_nullspace_from_rref", "sdm_particular_from_rref", "sdm_transpose", "unop_dict"], ["_strongly_connected_components", "ddm_lll", "ddm_lll_transform"]]}, {"name": "sympy.polys.monomials", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\monomials.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.monomials", "sympy.polys.monomials"], ["sympy.polys.polyerrors", "sympy.core.mul", "sympy.polys.polyutils", "sympy.core.containers", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["itermonomials", "monomial_count", "monomial_deg", "monomial_div", "monomial_divides", "monomial_gcd", "monomial_lcm", "monomial_ldiv", "monomial_max", "monomial_min", "monomial_mul", "monomial_pow", "term_div"], ["dedent", "dict_from_expr", "is_sequence", "iterable", "public", "sympify"]]}, {"name": "sympy.polys.numberfields", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["field_isomorphism", "galois_group", "isolate", "minimal_polynomial", "minpoly", "prime_decomp", "prime_valuation", "primitive_element", "round_two", "to_number_field"]]}, {"name": "sympy.polys.numberfields.basis", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\basis.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.polys.domains.algebraicfield", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.polytools", "sympy.polys.numberfields.modules"]], "hasfunction": 2, "myfunction": [["_apply_Dedekind_criterion", "_second_enlargement", "nilradical_mod_p", "round_two"], ["extract_fundamental_discriminant", "public"]]}, {"name": "sympy.polys.numberfields.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\exceptions.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.exceptions", "sympy.polys.numberfields.exceptions", "sympy.polys.numberfields.exceptions"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.numberfields.galois_resolvents", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\galois_resolvents.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.galois_resolvents", "sympy.polys.numberfields.galois_resolvents", "sympy.polys.numberfields.galois_resolvents"], ["sympy.core.symbol", "mpmath.ctx_mp", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["define_resolvents", "generate_lambda_lookup", "get_resolvent_by_lookup", "s_vars", "sparse_symmetrize_resolvent_coeffs", "wrap"], ["_evalf_with_bounded_error", "dup_eval", "evalf", "fastlog", "lambdify", "prec_to_dps", "preprocess_roots", "quad_to_mpmath", "symbols", "symmetric_poly", "xring"]]}, {"name": "sympy.polys.numberfields.galoisgroups", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\galoisgroups.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.galoisgroups"], ["sympy.polys.polyerrors", "sympy.core.symbol", "sympy.polys.numberfields.galois_resolvents", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.polys.numberfields.galois_resolvents", "collections"]], "hasfunction": 2, "myfunction": [["_galois_group_degree_3", "_galois_group_degree_4_lookup", "_galois_group_degree_4_root_approx", "_galois_group_degree_5_hybrid", "_galois_group_degree_5_lookup_ext_factor", "_galois_group_degree_6_lookup", "galois_group", "has_square_disc", "tschirnhausen_transformation"], ["coeff_search", "define_resolvents", "dup_discriminant", "dup_eval", "dup_factor_list", "dup_irreducible_p", "dup_random", "dup_sqf_p", "get_resolvent_by_lookup", "is_square", "poly_from_expr", "public", "symbols"]]}, {"name": "sympy.polys.numberfields.modules", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\modules.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules", "sympy.polys.numberfields.modules"], ["sympy.polys.polyclasses", "sympy.polys.numberfields.utilities", "sympy.polys.domains.algebraicfield", "sympy.polys.numberfields.exceptions", "sympy.polys.polyerrors", "sympy.polys.matrices.exceptions", "sympy.polys.matrices.domainmatrix", "sympy.core.symbol", "sympy.polys.domains.finitefield", "sympy.polys.polyutils", "sympy.polys.numberfields.exceptions", "sympy.polys.polytools", "sympy.polys.numberfields.exceptions", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["find_min_poly", "is_sq_maxrank_HNF", "make_mod_elt", "to_col"], ["dup_clear_denoms", "get_num_denom", "hermite_normal_form", "ilcm", "is_rat"]]}, {"name": "sympy.polys.numberfields.primes", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\primes.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.primes"], ["sympy.polys.polyerrors", "sympy.polys.matrices.domainmatrix", "sympy.polys.domains.finitefield", "sympy.polys.polyutils", "sympy.polys.numberfields.modules", "sympy.polys.polytools", "sympy.polys.numberfields.exceptions"]], "hasfunction": 2, "myfunction": [["_check_formal_conditions_for_maximal_order", "_compute_test_factor", "_prime_decomp_compute_kernel", "_prime_decomp_easy_case", "_prime_decomp_maximal_ideal", "_prime_decomp_split_ideal", "_two_elt_rep", "prime_decomp", "prime_valuation"], ["coeff_search", "find_min_poly", "nilradical_mod_p", "public", "round_two", "supplement_a_subspace"]]}, {"name": "sympy.polys.numberfields.resolvent_lookup", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\resolvent_lookup.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.polys.numberfields.subfield", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\subfield.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.numbers", "sympy.core.symbol", "sympy.polys.polyerrors", "mpmath.ctx_mp", "sympy.polys.polytools", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["_linsolve", "_switch_domain", "field_isomorphism", "field_isomorphism_factor", "field_isomorphism_pslq", "is_isomorphism_possible", "primitive_element", "to_number_field"], ["_choose_factor", "_sympify", "dup_eval", "factor_list", "minimal_polynomial", "public", "sympify"]]}, {"name": "sympy.polys.numberfields.utilities", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\numberfields\\utilities.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.polys.numberfields.utilities"], ["sympy.polys.matrices.exceptions", "sympy.printing.lambdarepr"]], "hasfunction": 2, "myfunction": [["coeff_search", "extract_fundamental_discriminant", "get_num_denom", "is_int", "is_rat", "isolate", "supplement_a_subspace"], ["factorint", "lambdify", "minpoly", "public", "sympify"]]}, {"name": "sympy.polys.orderings", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\orderings.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.orderings", "sympy.polys.orderings", "sympy.polys.orderings", "sympy.polys.orderings", "sympy.polys.orderings", "sympy.polys.orderings", "sympy.polys.orderings"], ["sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["build_product_order", "monomial_key"], ["iterable"]]}, {"name": "sympy.polys.orthopolys", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\orthopolys.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["chebyshevt_poly", "chebyshevu_poly", "dup_chebyshevt", "dup_chebyshevu", "dup_gegenbauer", "dup_hermite", "dup_hermite_prob", "dup_jacobi", "dup_laguerre", "dup_legendre", "dup_spherical_bessel_fn", "dup_spherical_bessel_fn_minus", "gegenbauer_poly", "hermite_poly", "hermite_prob_poly", "jacobi_poly", "laguerre_poly", "legendre_poly", "spherical_bessel_fn"], ["dup_add", "dup_lshift", "dup_mul", "dup_mul_ground", "dup_sub", "named_poly", "public"]]}, {"name": "sympy.polys.partfrac", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\partfrac.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.symbol", "sympy.core.function", "sympy.core.function", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.polys.rootoftools", "sympy.core.traversal"]], "hasfunction": 2, "myfunction": [["apart", "apart_full_decomposition", "apart_list", "apart_list_full_decomposition", "apart_undetermined_coeffs", "assemble_partfrac_list"], ["allowed_flags", "cancel", "factor", "numbered_symbols", "parallel_poly_from_expr", "public", "set_defaults", "sympify", "take", "xthreaded"]]}, {"name": "sympy.polys.polyclasses", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyclasses.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polyclasses", "sympy.polys.polyclasses", "sympy.polys.polyclasses", "sympy.polys.polyclasses"], ["sympy.core.sympify", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyutils", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["init_normal_ANP", "init_normal_DMF", "init_normal_DMP"], ["dmp_abs", "dmp_add", "dmp_add_ground", "dmp_add_mul", "dmp_cancel", "dmp_clear_denoms", "dmp_compose", "dmp_convert", "dmp_deflate", "dmp_degree_in", "dmp_degree_list", "dmp_diff_in", "dmp_discriminant", "dmp_div", "dmp_eject", "dmp_eval_in", "dmp_exclude", "dmp_exquo", "dmp_exquo_ground", "dmp_factor_list", "dmp_factor_list_include", "dmp_from_dict", "dmp_from_sympy", "dmp_gcd", "dmp_ground", "dmp_ground_LC", "dmp_ground_TC", "dmp_ground_content", "dmp_ground_monic", "dmp_ground_nth", "dmp_ground_p", "dmp_ground_primitive", "dmp_ground_trunc", "dmp_inject", "dmp_inner_gcd", "dmp_integrate_in", "dmp_irreducible_p", "dmp_l1_norm", "dmp_l2_norm_squared", "dmp_lcm", "dmp_lift", "dmp_list_terms", "dmp_max_norm", "dmp_mul", "dmp_mul_ground", "dmp_neg", "dmp_negative_p", "dmp_norm", "dmp_normal", "dmp_one", "dmp_one_p", "dmp_pdiv", "dmp_permute", "dmp_pexquo", "dmp_pow", "dmp_pquo", "dmp_prem", "dmp_quo", "dmp_quo_ground", "dmp_rem", "dmp_resultant", "dmp_slice_in", "dmp_sqf_list", "dmp_sqf_list_include", "dmp_sqf_norm", "dmp_sqf_p", "dmp_sqf_part", "dmp_sqr", "dmp_sub", "dmp_sub_ground", "dmp_sub_mul", "dmp_subresultants", "dmp_terms_gcd", "dmp_to_dict", "dmp_to_tuple", "dmp_validate", "dmp_zero_p", "poly_LC", "poly_TC", "dup_add", "dup_cauchy_lower_bound", "dup_cauchy_upper_bound", "dup_convert", "dup_count_complex_roots", "dup_count_real_roots", "dup_cyclotomic_p", "dup_decompose", "dup_degree", "dup_from_dict", "dup_gcdex", "dup_gff_list", "dup_half_gcdex", "dup_invert", "dup_isolate_all_roots", "dup_isolate_all_roots_sqf", "dup_isolate_real_roots", "dup_isolate_real_roots_sqf", "dup_mignotte_sep_bound_squared", "dup_mul", "dup_neg", "dup_normal", "dup_pow", "dup_refine_real_root", "dup_rem", "dup_revert", "dup_shift", "dup_strip", "dup_sturm", "dup_sub", "dup_transform"]]}, {"name": "sympy.polys.polyconfig", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyconfig.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["configure", "query", "setup", "using"], ["contextmanager"]]}, {"name": "sympy.polys.polyerrors", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyerrors.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"], []], "hasfunction": 2, "myfunction": [[], ["public"]]}, {"name": "sympy.polys.polyfuncs", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyfuncs.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.basic", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["horner", "interpolate", "rational_interpolate", "symmetrize", "viete"], ["allowed_flags", "build_options", "interpolating_poly", "numbered_symbols", "poly_from_expr", "public", "sring", "symbols", "symmetric_poly", "take"]]}, {"name": "sympy.polys.polyoptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyoptions.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions", "sympy.polys.polyoptions"], ["sympy.core.basic", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["allowed_flags", "build_options", "set_defaults"], ["has_dups", "is_sequence", "numbered_symbols", "public", "sympify", "topological_sort"]]}, {"name": "sympy.polys.polyquinticconst", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyquinticconst.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polyquinticconst"], ["sympy.polys.polytools", "sympy.core.numbers", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [[], ["N", "public", "sqrt"]]}, {"name": "sympy.polys.polyroots", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyroots.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.relational", "sympy.polys.polyerrors", "sympy.core.mul", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.polys.polyquinticconst", "sympy.polys.polyerrors", "sympy.core.power", "sympy.core.numbers", "sympy.core.symbol", "sympy.polys.polyerrors", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_integer_basis", "_inv_totient_estimate", "_quintic_simplify", "_roots_quartic_euler", "preprocess_roots", "root_factors", "roots", "roots_binomial", "roots_cubic", "roots_cyclotomic", "roots_linear", "roots_quadratic", "roots_quartic", "roots_quintic"], ["_mexpand", "cancel", "comp", "cyclotomic_poly", "discriminant", "divisors", "expand_2arg", "factor", "factor_terms", "filldedent", "fuzzy_not", "gcd_list", "isprime", "nextprime", "ordered", "public", "root", "sqrt", "symbols", "sympify", "together"]]}, {"name": "sympy.polys.polytools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polytools.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polytools", "sympy.polys.polytools", "sympy.polys.polytools"], ["sympy.polys.polyclasses", "sympy.core.add", "sympy.core.basic", "sympy.logic.boolalg", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyclasses", "sympy.polys.polyclasses", "sympy.core.function", "sympy.polys.domains.domainelement", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.relational", "sympy.polys.polyerrors", "sympy.core.expr", "sympy.polys.domains.finitefield", "sympy.core.exprtools", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.core.numbers", "sympy.polys.monomials", "sympy.core.mul", "sympy.polys.polyerrors", "mpmath.libmp.libhyper", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.core.relational", "sympy.core.symbol", "sympy.core.containers", "sympy.polys.polyerrors", "sympy.core.traversal"]], "hasfunction": 2, "myfunction": [["LC", "LM", "LT", "_factors_product", "_generic_factor", "_generic_factor_list", "_parallel_poly_from_expr", "_polifyit", "_poly_from_expr", "_sorted_factors", "_symbolic_factor", "_symbolic_factor_list", "_torational_factor_list", "_update_args", "cancel", "cofactors", "compose", "content", "count_roots", "decompose", "degree", "degree_list", "discriminant", "div", "exquo", "factor", "factor_list", "gcd", "gcd_list", "gcdex", "gff", "gff_list", "groebner", "ground_roots", "half_gcdex", "intervals", "invert", "is_zero_dimensional", "lcm", "lcm_list", "monic", "named_poly", "nroots", "nth_power_roots_poly", "parallel_poly_from_expr", "pdiv", "pexquo", "poly", "poly_from_expr", "pquo", "prem", "primitive", "quo", "real_roots", "reduced", "refine_root", "rem", "resultant", "sqf", "sqf_list", "sqf_norm", "sqf_part", "sturm", "subresultants", "terms_gcd", "to_rational_coeffs", "total_degree", "trunc"], ["_dict_from_expr", "_dict_reorder", "_evalf_with_bounded_error", "groebner", "_keep_coeff", "_parallel_dict_from_expr", "_sort_gens", "_sympify", "_sympifyit", "_unify_gens", "expr_from_dict", "bottom_up", "construct_domain", "dup_isolate_real_roots_list", "equal_valued", "evalf", "factor_nc", "factor_terms", "fastlog", "filldedent", "group", "ilcm", "iterable", "matrix_fglm", "monomial_key", "ordered", "public", "pure_complex", "quad_to_mpmath", "sift", "sympify", "sympy_deprecation_warning", "together", "wraps"]]}, {"name": "sympy.polys.polyutils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\polyutils.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.polyutils", "sympy.polys.polyutils"], ["sympy.core.add", "sympy.core.relational", "sympy.core.expr", "sympy.polys.polyerrors", "sympy.core.mul", "sympy.polys.polyerrors", "sympy.core.power"]], "hasfunction": 2, "myfunction": [["_analyze_gens", "_dict_from_expr", "_dict_from_expr_if_gens", "_dict_from_expr_no_gens", "_dict_reorder", "_not_a_coeff", "_nsort", "_parallel_dict_from_expr", "_parallel_dict_from_expr_if_gens", "_parallel_dict_from_expr_no_gens", "_sort_factors", "_sort_gens", "_unify_gens", "expr_from_dict", "dict_from_expr", "dict_from_expr", "expr_from_dict", "parallel_dict_from_expr", "parallel_dict_from_expr"], ["build_options", "decompose_power", "decompose_power_rat", "expand_mul", "expand_multinomial"]]}, {"name": "sympy.polys.rationaltools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\rationaltools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.basic"]], "hasfunction": 2, "myfunction": [["together"], ["gcd_terms", "iterable", "public", "sympify"]]}, {"name": "sympy.polys.ring_series", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\ring_series.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.core.expr", "sympy.core.function", "sympy.core.function", "sympy.polys.rings", "sympy.core.numbers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_atan", "_atanh", "_check_series_var", "_coefficient_t", "_exp1", "_get_constant_term", "_giant_steps", "_has_constant_term", "_invert_monoms", "_nth_root1", "_rs_series", "_series_inversion1", "_tan1", "_tanh", "mul_xin", "pow_xin", "rs_LambertW", "rs_asin", "rs_atan", "rs_atanh", "rs_compose_add", "rs_cos", "rs_cos_sin", "rs_cosh", "rs_cot", "rs_diff", "rs_exp", "rs_fun", "rs_hadamard_exp", "rs_integrate", "rs_is_puiseux", "rs_log", "rs_min_pow", "rs_mul", "rs_newton", "rs_nth_root", "rs_pow", "rs_puiseux", "rs_puiseux2", "rs_series", "rs_series_from_list", "rs_series_inversion", "rs_series_reversion", "rs_sin", "rs_sinh", "rs_square", "rs_subs", "rs_tan", "rs_tanh", "rs_trunc"], ["as_int", "giant_steps", "ifac", "monomial_div", "monomial_ldiv", "monomial_min", "monomial_mul", "ring", "sring"]]}, {"name": "sympy.polys.rings", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\rings.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.rings", "sympy.polys.rings"], ["sympy.core.sympify", "sympy.polys.polyerrors", "sympy.printing.defaults", "sympy.polys.domains.domainelement", "sympy.polys.polyoptions", "sympy.polys.polyerrors", "sympy.core.expr", "builtins", "sympy.polys.polyerrors", "sympy.polys.compatibility", "sympy.polys.monomials", "sympy.polys.polyerrors", "sympy.polys.polyoptions", "sympy.polys.domains.polynomialring", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["_parse_symbols", "ring", "sring", "vring", "xring"], ["_dict_reorder", "_parallel_dict_from_expr", "symbols", "build_options", "construct_domain", "dmp_from_dict", "dmp_to_dict", "expr_from_dict", "heugcd", "is_sequence", "multinomial_coefficients", "pollute", "public", "subsets", "sympify"]]}, {"name": "sympy.polys.rootisolation", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\rootisolation.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.rootisolation", "sympy.polys.rootisolation"], ["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["_classify_point", "_depth_first_select", "_discard_if_outside_interval", "_disjoint_p", "_horizontal_bisection", "_intervals_to_quadrants", "_isolate_zero", "_mobius_from_interval", "_mobius_to_interval", "_real_isolate_and_disjoin", "_rectangle_small_p", "_reverse_intervals", "_traverse_quadrants", "_vertical_bisection", "_winding_number", "dup_cauchy_lower_bound", "dup_cauchy_upper_bound", "dup_count_complex_roots", "dup_count_real_roots", "dup_inner_isolate_negative_roots", "dup_inner_isolate_positive_roots", "dup_inner_isolate_real_roots", "dup_inner_refine_real_root", "dup_isolate_all_roots", "dup_isolate_all_roots_sqf", "dup_isolate_complex_roots_sqf", "dup_isolate_real_roots", "dup_isolate_real_roots_list", "dup_isolate_real_roots_sqf", "dup_mignotte_sep_bound_squared", "dup_outer_refine_real_root", "dup_refine_real_root", "dup_root_lower_bound", "dup_root_upper_bound", "dup_step_refine_real_root", "dup_sturm"], ["dmp_eval_in", "poly_LC", "poly_TC", "dup_clear_denoms", "dup_convert", "dup_degree", "dup_diff", "dup_discriminant", "dup_eval", "dup_factor_list", "dup_l2_norm_squared", "dup_mirror", "dup_neg", "dup_real_imag", "dup_rem", "dup_reverse", "dup_rshift", "dup_scale", "dup_shift", "dup_sign_variations", "dup_sqf_list", "dup_sqf_part", "dup_strip", "dup_terms_gcd", "dup_transform"]]}, {"name": "sympy.polys.rootoftools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\rootoftools.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.rootoftools", "sympy.polys.rootoftools", "sympy.polys.rootoftools", "sympy.polys.rootoftools", "sympy.polys.rootoftools"], ["sympy.core.add", "sympy.core.basic", "sympy.polys.polyerrors", "sympy.core.symbol", "sympy.core.expr", "sympy.core.numbers", "sympy.polys.polyerrors", "sympy.core.numbers", "sympy.core.function", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.polys.polytools", "sympy.core.numbers", "itertools", "mpmath.ctx_mp_python", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [["_imag_count_of_factor", "_pure_factors", "rootof"], ["func_wrapper", "dispatch", "dps_to_prec", "dup_isolate_complex_roots_sqf", "dup_isolate_real_roots_sqf", "factor", "is_le", "lambdify", "numbered_symbols", "ordered", "prec_to_dps", "preprocess_roots", "public", "roots", "roots_binomial", "roots_linear", "roots_quadratic", "sift", "symbols", "symmetrize", "sympify", "together", "viete"]]}, {"name": "sympy.polys.solvers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\solvers.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.polys.solvers", "sympy.polys.solvers"], ["sympy.polys.matrices.domainmatrix", "sympy.core.numbers", "sympy.matrices.dense", "sympy.polys.polyerrors", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["_solve_lin_sys", "_solve_lin_sys_component", "eqs_to_matrix", "solve_lin_sys", "sympy_eqs_to_ring"], ["connected_components", "sring", "sympify", "sympy_deprecation_warning"]]}, {"name": "sympy.polys.specialpolys", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\specialpolys.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.polys.polyclasses", "sympy.core.symbol", "sympy.core.mul", "sympy.polys.polytools", "sympy.polys.polytools", "sympy.core.symbol", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["_f_0", "_f_1", "_f_2", "_f_3", "_f_4", "_f_5", "_f_6", "_w_1", "_w_2", "cyclotomic_poly", "dmp_fateman_poly_F_1", "dmp_fateman_poly_F_2", "dmp_fateman_poly_F_3", "f_polys", "fateman_poly_F_1", "fateman_poly_F_2", "fateman_poly_F_3", "interpolating_poly", "random_poly", "swinnerton_dyer_poly", "symmetric_poly", "w_polys"], ["_analyze_gens", "dmp_add_term", "dmp_ground", "dmp_mul", "dmp_neg", "dmp_one", "dmp_raise", "dmp_sqr", "dmp_zero", "dup_from_raw_dict", "dup_random", "dup_zz_cyclotomic_poly", "filldedent", "nextprime", "public", "ring", "subsets", "symbols", "sympify"]]}, {"name": "sympy.polys.sqfreetools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\polys\\sqfreetools.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.polys.polyerrors", "sympy.polys.polyerrors"]], "hasfunction": 2, "myfunction": [["dmp_gf_sqf_list", "dmp_gf_sqf_part", "dmp_gff_list", "dmp_norm", "dmp_sqf_list", "dmp_sqf_list_include", "dmp_sqf_norm", "dmp_sqf_p", "dmp_sqf_part", "dup_gf_sqf_list", "dup_gf_sqf_part", "dup_gff_list", "dup_sqf_list", "dup_sqf_list_include", "dup_sqf_norm", "dup_sqf_p", "dup_sqf_part"], ["dmp_compose", "dmp_degree", "dmp_diff", "dmp_diff_in", "dmp_gcd", "dmp_ground", "dmp_ground_LC", "dmp_ground_monic", "dmp_ground_primitive", "dmp_inject", "dmp_inner_gcd", "dmp_mul_ground", "dmp_neg", "dmp_quo", "dmp_raise", "dmp_resultant", "dmp_sub", "dmp_zero_p", "poly_LC", "dup_convert", "dup_degree", "dup_diff", "dup_gcd", "dup_inner_gcd", "dup_monic", "dup_mul", "dup_mul_ground", "dup_neg", "dup_primitive", "dup_quo", "dup_shift", "dup_strip", "dup_sub", "gf_sqf_list", "gf_sqf_part"]]}, {"name": "sympy.printing", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.printing.str", "sympy.printing.tableform"]], "hasfunction": 2, "myfunction": [[], ["ccode", "cxxcode", "dotprint", "fcode", "glsl_code", "jscode", "julia_code", "maple_code", "mathematica_code", "multiline_latex", "octave_code", "pager_print", "pretty_print", "pretty_try_use_unicode", "pretty_use_unicode", "pretty_print", "preview", "print_ccode", "print_fcode", "print_glsl", "print_gtk", "print_jscode", "print_latex", "print_maple_code", "print_mathml", "print_python", "print_rcode", "print_tree", "pycode", "python", "rcode", "rust_code", "smtlib_code"]]}, {"name": "sympy.printing.codeprinter", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\codeprinter.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.codeprinter", "sympy.printing.codeprinter", "sympy.printing.codeprinter"], ["sympy.core.add", "sympy.core.basic", "sympy.core.numbers", "sympy.core.function", "sympy.core.mul", "sympy.core.power", "sympy.printing.str", "sympy.core.symbol", "sympy.core.expr", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_convert_python_lists", "ccode", "cxxcode", "fcode", "print_ccode", "print_fcode"], ["_keep_coeff", "default_sort_key", "precedence", "sympify", "wraps"]]}, {"name": "sympy.printing.conventions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\conventions.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.function", "collections.abc"]], "hasfunction": 2, "myfunction": [["requires_partial", "split_super_sub"], []]}, {"name": "sympy.printing.defaults", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\defaults.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.defaults", "sympy.printing.defaults"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.printing.dot", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\dot.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.basic", "sympy.core.expr", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["attrprint", "dotedges", "dotnode", "dotprint", "purestr", "styleof"], []]}, {"name": "sympy.printing.glsl", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\glsl.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.glsl"], ["sympy.core.basic", "sympy.printing.codeprinter", "sympy.core.function"]], "hasfunction": 2, "myfunction": [["glsl_code", "print_glsl"], ["equal_valued", "precedence"]]}, {"name": "sympy.printing.gtk", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\gtk.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["print_gtk"], ["c2p"]]}, {"name": "sympy.printing.julia", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\julia.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.julia"], ["sympy.printing.codeprinter", "sympy.core.mul", "sympy.core.power", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["julia_code", "print_julia_code"], ["_keep_coeff", "equal_valued", "precedence", "search"]]}, {"name": "sympy.printing.lambdarepr", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\lambdarepr.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.lambdarepr", "sympy.printing.lambdarepr", "sympy.printing.lambdarepr"], ["sympy.printing.pycode", "sympy.printing.numpy", "sympy.printing.pycode"]], "hasfunction": 2, "myfunction": [["lambdarepr"], ["default_sort_key"]]}, {"name": "sympy.printing.maple", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\maple.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.maple"], ["sympy.printing.codeprinter", "sympy.core.numbers", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["maple_code", "print_maple_code"], ["equal_valued", "precedence"]]}, {"name": "sympy.printing.mathematica", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\mathematica.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.mathematica"], ["sympy.core.basic", "sympy.printing.codeprinter", "sympy.core.expr", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["mathematica_code"], ["default_sort_key", "precedence"]]}, {"name": "sympy.printing.numpy", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\numpy.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.numpy", "sympy.printing.numpy", "sympy.printing.numpy", "sympy.printing.numpy"], ["sympy.printing.pycode", "sympy.printing.codeprinter", "sympy.core.function", "sympy.core.power", "sympy.printing.pycode"]], "hasfunction": 2, "myfunction": [[], ["_print_known_const", "_print_known_func", "_unpack_integral_limits"]]}, {"name": "sympy.printing.octave", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\octave.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.octave"], ["sympy.printing.codeprinter", "sympy.core.mul", "sympy.core.power", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["octave_code", "print_octave_code"], ["_keep_coeff", "equal_valued", "precedence", "search"]]}, {"name": "sympy.printing.precedence", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\precedence.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["precedence", "precedence_Float", "precedence_FracElement", "precedence_Integer", "precedence_Mul", "precedence_PolyElement", "precedence_Rational", "precedence_UnevaluatedExpr", "precedence_traditional"], []]}, {"name": "sympy.printing.printer", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\printer.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.printer", "sympy.printing.printer"], ["sympy.core.add", "sympy.core.function", "sympy.core.basic", "sympy.core.function", "sympy.core.function"]], "hasfunction": 2, "myfunction": [["print_function", "printer_context"], ["contextmanager", "update_wrapper"]]}, {"name": "sympy.printing.repr", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\repr.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.repr"], ["sympy.core.function", "sympy.core.mul", "sympy.printing.printer"]], "hasfunction": 2, "myfunction": [[], ["to_str", "print_function", "repr_dps"]]}, {"name": "sympy.printing.rust", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\rust.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.rust"], ["sympy.printing.codeprinter", "sympy.core.numbers", "sympy.core.function", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [["print_rust_code", "rust_code"], ["equal_valued"]]}, {"name": "sympy.printing.smtlib", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\smtlib.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.smtlib"], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.basic", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.core.function", "sympy.core.relational", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.numbers", "sympy.sets.sets", "sympy.core.relational", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.mul", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.functions.elementary.piecewise", "sympy.core.power", "sympy.printing.printer", "sympy.core.numbers", "sympy.core.relational", "sympy.core.relational", "sympy.core.relational", "sympy.core.symbol", "sympy.core.function", "sympy.core.relational", "sympy.logic.boolalg", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_auto_assert_smtlib", "_auto_declare_smtlib", "_auto_infer_smtlib_types", "smtlib_code"], []]}, {"name": "sympy.printing.str", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\str.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.str", "sympy.printing.str"], ["sympy.core.basic", "sympy.core.mul", "sympy.core.numbers", "sympy.core.power", "sympy.printing.printer", "sympy.core.numbers", "sympy.core.relational", "sympy.core.sympify"]], "hasfunction": 2, "myfunction": [[], ["_keep_coeff", "default_sort_key", "to_str", "prec_to_dps", "precedence", "print_function", "sift"]]}, {"name": "sympy.printing.tableform", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\tableform.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.printing.tableform"], ["builtins", "sympy.core.symbol", "sympy.core.sympify", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.printing.tree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\printing\\tree.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["pprint_nodes", "print_node", "print_tree", "tree"], []]}, {"name": "sympy.release", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\release.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.sets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.conditionset", "sympy.sets.contains", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.ordinals", "sympy.sets.ordinals", "sympy.sets.powerset", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["imageset"]]}, {"name": "sympy.sets.conditionset", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\conditionset.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.conditionset"], ["sympy.logic.boolalg", "sympy.core.function", "sympy.core.basic", "sympy.sets.contains", "sympy.core.symbol", "sympy.core.relational", "sympy.sets.sets", "sympy.core.function", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.containers", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "as_Boolean", "flatten", "fuzzy_bool", "has_dups", "sift", "sympy_deprecation_warning"]]}, {"name": "sympy.sets.contains", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\contains.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.contains"], ["sympy.logic.boolalg", "sympy.core.relational", "sympy.core.relational", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["func_name"]]}, {"name": "sympy.sets.fancysets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\fancysets.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets"], ["sympy.logic.boolalg", "sympy.core.basic", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.function", "sympy.core.mod", "sympy.logic.boolalg", "sympy.sets.sets", "sympy.core.numbers", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.singleton", "sympy.core.symbol", "sympy.core.containers", "sympy.sets.sets", "sympy.functions.elementary.integers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.integers", "itertools", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["normalize_theta_set"], ["_sympify", "filldedent", "fuzzy_and", "fuzzy_not", "fuzzy_or", "is_eq", "symbols", "sympify"]]}, {"name": "sympy.sets.handlers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\handlers\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.sets.handlers.comparison", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\handlers\\comparison.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.logic.boolalg", "sympy.core.basic", "sympy.core.relational", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["dispatch", "fuzzy_and", "fuzzy_bool", "is_eq"]]}, {"name": "sympy.sets.handlers.intersection", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\handlers\\intersection.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.sets.fancysets", "sympy.sets.conditionset", "sympy.multipledispatch.dispatcher", "sympy.core.symbol", "sympy.sets.sets", "sympy.core.relational", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.function", "sympy.core.mul", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.functions.elementary.integers", "sympy.functions.elementary.integers", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_", "_intlike_interval"], ["expand_complex", "ilcm", "imageset", "numer", "ordered", "symbols"]]}, {"name": "sympy.sets.handlers.union", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\handlers\\union.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.sets.fancysets", "sympy.multipledispatch.dispatcher", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.fancysets", "sympy.sets.fancysets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [["_"], ["sympify"]]}, {"name": "sympy.sets.ordinals", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\ordinals.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.ordinals", "sympy.sets.ordinals", "sympy.sets.ordinals", "sympy.sets.ordinals"], ["sympy.core.basic", "sympy.core.numbers"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.sets.powerset", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\powerset.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.powerset"], ["sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "_sympifyit", "fuzzy_bool"]]}, {"name": "sympy.sets.sets", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\sets\\sets.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets", "sympy.sets.sets"], ["sympy.logic.boolalg", "sympy.core.basic", "sympy.core.symbol", "sympy.core.relational", "sympy.core.evalf", "sympy.core.expr", "sympy.core.numbers", "sympy.core.numbers", "sympy.core.kind", "sympy.core.function", "sympy.core.operations", "sympy.functions.elementary.miscellaneous", "sympy.functions.elementary.miscellaneous", "sympy.core.relational", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.singleton", "sympy.core.symbol", "sympy.core.containers", "sympy.core.containers", "sympy.logic.boolalg", "collections", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "mpmath.ctx_mp_python"]], "hasfunction": 2, "myfunction": [["_apply_operation", "_handle_finite_sets", "imageset", "is_function_invertible_in_set", "set_add", "set_div", "set_function", "set_mul", "set_pow", "set_sub", "simplify_intersection", "simplify_union"], ["_sympify", "deprecated", "filldedent", "func_name", "fuzzy_and", "fuzzy_bool", "fuzzy_not", "fuzzy_or", "iproduct", "is_lt", "iterable", "ordered", "prec_to_dps", "roundrobin", "sift", "subsets", "symbols", "sympify", "sympify_method_args", "sympify_return", "sympy_deprecation_warning", "uniquely_named_symbol"]]}, {"name": "sympy.solvers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["check_assumptions", "checkodesol", "checkpdesol", "checksol", "classify_ode", "classify_pde", "decompogen", "det_quick", "diophantine", "dsolve", "failing_assumptions", "homogeneous_order", "inv_quick", "linear_eq_to_matrix", "linsolve", "nonlinsolve", "nsolve", "ode_order", "pde_separate", "pde_separate_add", "pde_separate_mul", "pdsolve", "reduce_abs_inequalities", "reduce_abs_inequality", "reduce_inequalities", "rsolve", "rsolve_hyper", "rsolve_poly", "rsolve_ratio", "solve", "solve_linear", "solve_linear_system", "solve_linear_system_LU", "solve_poly_inequality", "solve_poly_system", "solve_rational_inequalities", "solve_triangulated", "solve_undetermined_coeffs", "solve_univariate_inequality", "solveset", "substitution"]]}, {"name": "sympy.solvers.bivariate", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\bivariate.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.symbol", "sympy.functions.elementary.exponential", "sympy.polys.polytools", "sympy.core.power", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["_filtered_gens", "_lambert", "_linab", "_mostfunc", "_solve_lambert", "bivariate_type"], ["_invert", "_mexpand", "collect", "expand_log", "factor", "factor_terms", "ordered", "powsimp", "root", "roots", "separatevars", "solve", "uniq"]]}, {"name": "sympy.solvers.deutils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\deutils.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.function", "sympy.core.function", "sympy.core.relational", "sympy.core.power", "sympy.core.symbol"]], "hasfunction": 2, "myfunction": [["_desolve", "_preprocess", "ode_order"], []]}, {"name": "sympy.solvers.inequalities", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\inequalities.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.logic.boolalg", "sympy.core.symbol", "sympy.core.relational", "sympy.sets.sets", "sympy.core.relational", "sympy.sets.sets", "sympy.sets.sets", "sympy.core.relational", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.core.relational", "sympy.core.symbol", "sympy.sets.sets", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["_pt", "_reduce_inequalities", "_solve_inequality", "reduce_abs_inequalities", "reduce_abs_inequality", "reduce_inequalities", "reduce_rational_inequalities", "solve_poly_inequalities", "solve_poly_inequality", "solve_rational_inequalities", "solve_univariate_inequality"], ["_nsort", "continuous_domain", "expand_mul", "factor_terms", "filldedent", "function_range", "iterable", "parallel_poly_from_expr", "periodicity", "sift", "solveset", "solvify", "sympify"]]}, {"name": "sympy.solvers.ode", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["canonical_odes", "checkinfsol", "checkodesol", "classify_ode", "constantsimp", "dsolve", "homogeneous_order", "infinitesimals", "linear_ode_to_matrix", "linodesolve"]]}, {"name": "sympy.solvers.ode.hypergeometric", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\hypergeometric.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.relational", "sympy.integrals.integrals", "sympy.core.power", "sympy.core.symbol", "sympy.core.symbol", "sympy.functions.elementary.exponential", "sympy.functions.special.hyper"]], "hasfunction": 2, "myfunction": [["equivalence", "equivalence_hypergeometric", "get_sol_2F1_hypergeometric", "match_2nd_2F1_hypergeometric", "match_2nd_hypergeometric"], ["cancel", "collect", "expand", "factor", "gcd", "get_numbered_constants", "logcombine", "powdenest", "roots", "simplify", "sqrt"]]}, {"name": "sympy.solvers.ode.lie_group", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\lie_group.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.core.function", "sympy.core.mul", "sympy.polys.polytools", "sympy.core.power", "sympy.core.symbol", "sympy.core.symbol", "sympy.functions.elementary.exponential", "itertools", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["_lie_group_remove", "_ode_lie_group", "_ode_lie_group_try_heuristic", "infinitesimals", "lie_heuristic_abaco1_product", "lie_heuristic_abaco1_simple", "lie_heuristic_abaco2_similar", "lie_heuristic_abaco2_unique_general", "lie_heuristic_abaco2_unique_unknown", "lie_heuristic_bivariate", "lie_heuristic_chi", "lie_heuristic_function_sum", "lie_heuristic_linear"], ["_preprocess", "cancel", "checkinfsol", "collect", "div", "expand", "factor_terms", "integrate", "numbered_symbols", "ode_order", "pdsolve", "powsimp", "separatevars", "simplify", "solve", "symbols"]]}, {"name": "sympy.solvers.ode.nonhomogeneous", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\nonhomogeneous.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.symbol", "sympy.core.relational", "sympy.integrals.integrals", "sympy.polys.polytools", "sympy.polys.rootoftools", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic", "collections", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.hyperbolic"]], "hasfunction": 2, "myfunction": [["_get_const_characteristic_eq_sols", "_get_euler_characteristic_eq_sols", "_get_simplified_sol", "_solve_undetermined_coefficients", "_solve_variation_of_parameters", "_test_term", "_undetermined_coefficients_match"], ["_mexpand", "collect", "default_sort_key", "diff", "expand", "expand_mul", "get_numbered_constants", "numbered_symbols", "powsimp", "rootof", "roots", "separatevars", "simplify", "solve", "sub_func_doit", "trigsimp", "wronskian"]]}, {"name": "sympy.solvers.ode.ode", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\ode.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.function", "sympy.core.expr", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.integrals.integrals", "sympy.core.mul", "sympy.core.numbers", "sympy.series.order", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.core.power", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.core.function", "sympy.core.symbol", "sympy.core.containers", "sympy.core.symbol", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.exponential", "sympy.core.traversal", "sympy.core.multidimensional"]], "hasfunction": 2, "myfunction": [["__remove_linear_redundancies", "_extract_funcs", "_frobenius", "_get_constant_subexpressions", "_handle_Integral", "_helper_simplify", "_is_special_case_of", "_linear_2eq_order1_type6", "_linear_2eq_order1_type7", "_nonlinear_2eq_order1_type1", "_nonlinear_2eq_order1_type2", "_nonlinear_2eq_order1_type3", "_nonlinear_2eq_order1_type4", "_nonlinear_2eq_order1_type5", "_nonlinear_3eq_order1_type1", "_nonlinear_3eq_order1_type2", "_nonlinear_3eq_order1_type3", "_nonlinear_3eq_order1_type4", "_nonlinear_3eq_order1_type5", "_remove_redundant_solutions", "check_linear_2eq_order1", "check_nonlinear_2eq_order1", "check_nonlinear_2eq_order2", "check_nonlinear_3eq_order1", "check_nonlinear_3eq_order2", "checkinfsol", "classify_ode", "classify_sysode", "constant_renumber", "constantsimp", "dsolve", "get_numbered_constants", "homogeneous_order", "iter_numbered_constants", "ode_1st_power_series", "ode_2nd_power_series_ordinary", "ode_2nd_power_series_regular", "ode_sol_simplicity", "odesimp", "solve_ics", "sysode_linear_2eq_order1", "sysode_nonlinear_2eq_order1", "sysode_nonlinear_3eq_order1"], ["_desolve", "_preprocess", "cancel", "checksol", "collect", "collect_const", "cse", "default_sort_key", "diff", "expand", "expand_mul", "iterable", "lcm", "logcombine", "numbered_symbols", "ode_order", "ordered", "powsimp", "separatevars", "series", "sift", "simplify", "solve", "sqrt", "symbols", "sympify", "terms_gcd", "uniq"]]}, {"name": "sympy.solvers.ode.riccati", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\riccati.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.symbol", "sympy.core.relational", "sympy.core.numbers", "sympy.integrals.integrals", "sympy.polys.polytools", "sympy.core.symbol", "sympy.functions.elementary.exponential", "itertools", "sympy.functions.elementary.complexes"]], "hasfunction": 2, "myfunction": [["check_necessary_conds", "compute_m_ybar", "construct_c", "construct_c_case_1", "construct_c_case_2", "construct_c_case_3", "construct_d", "construct_d_case_4", "construct_d_case_5", "construct_d_case_6", "get_gen_sol_from_part_sol", "inverse_transform_poly", "limit_at_inf", "linsolve_dict", "match_riccati", "rational_laurent_series", "remove_redundant_sols", "riccati_inverse_normal", "riccati_normal", "riccati_reduced", "solve_aux_eq", "solve_riccati", "val_at_inf"], ["count_ops", "linsolve", "roots", "sqrt", "symbols"]]}, {"name": "sympy.solvers.ode.single", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\single.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single", "sympy.solvers.ode.single"], ["sympy.core.add", "sympy.core.function", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.core.expr", "sympy.core.function", "sympy.integrals.integrals", "sympy.core.mul", "sympy.polys.polytools", "sympy.polys.solvers", "sympy.core.power", "sympy.core.numbers", "sympy.core.function", "sympy.core.symbol", "sympy.core.symbol", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.special.bessel", "sympy.functions.elementary.exponential", "sympy.functions.elementary.exponential", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [[], ["_get_const_characteristic_eq_sols", "_get_euler_characteristic_eq_sols", "_get_simplified_sol", "_lin_eq2dict", "_mexpand", "_ode_lie_group", "_preprocess", "_solve_undetermined_coefficients", "_solve_variation_of_parameters", "_test_term", "_undetermined_coefficients_match", "cached_property", "cancel", "cbrt", "collect", "degree", "diff", "dsolve", "equivalence_hypergeometric", "expand", "factor", "factor_terms", "fraction", "get_sol_2F1_hypergeometric", "homogeneous_order", "logcombine", "match_2nd_2F1_hypergeometric", "match_2nd_hypergeometric", "match_riccati", "numbered_symbols", "ode_order", "ode_sol_simplicity", "odesimp", "posify", "separatevars", "simplify", "solve", "solve_riccati", "sqrt"]]}, {"name": "sympy.solvers.ode.subscheck", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\subscheck.py", "layer": 3, "hasclass": 2, "myclass": [[], ["sympy.core.function", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.series.order", "sympy.core.power", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["checkodesol", "checksysodesol", "sub_func_doit"], ["_preprocess", "besselsimp", "diff", "is_sequence", "iterable", "ode_order", "posify", "simplify", "solve", "sqrtdenest", "sympify", "trigsimp"]]}, {"name": "sympy.solvers.ode.systems", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\ode\\systems.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.solvers.ode.systems", "sympy.solvers.ode.systems"], ["sympy.core.add", "sympy.core.function", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.relational", "sympy.sets.sets", "sympy.core.function", "sympy.integrals.integrals", "sympy.matrices.dense", "sympy.matrices.matrices", "sympy.core.mul", "sympy.matrices.common", "sympy.solvers.solveset", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.core.function", "sympy.core.symbol", "sympy.core.containers", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.exponential", "sympy.functions.combinatorial.factorials", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_classify_linear_system", "_combine_type1_subsystems", "_component_division", "_component_solver", "_dict2graph", "_eqs2dict", "_factor_matrix", "_first_order_type5_6_subs", "_get_func_order", "_get_funcs_from_canon", "_get_poly_coeffs", "_higher_order_ode_solver", "_higher_order_to_first_order", "_higher_order_type2_to_sub_systems", "_is_commutative_anti_derivative", "_is_euler_system", "_is_second_order_type2", "_is_type1", "_linear_ode_solver", "_match_second_order_type", "_matrix_is_constant", "_preprocess_eqs", "_second_order_subs_type1", "_second_order_subs_type2", "_second_order_to_first_order", "_select_equations", "_simpsol", "_solsimp", "_strong_component_solver", "_weak_component_solver", "canonical_odes", "dsolve_system", "linear_ode_to_matrix", "linodesolve", "linodesolve_type", "matrix_exp", "matrix_exp_jordan_form", "simpsol"], ["collect", "connected_components", "default_sort_key", "expand", "expand_mul", "eye", "factor_terms", "filldedent", "integrate", "iterable", "ode_order", "ordered", "piecewise_fold", "powdenest", "powsimp", "radsimp", "ratsimp", "signsimp", "simplify", "solveset", "sqrt", "strongly_connected_components", "together", "zeros"]]}, {"name": "sympy.solvers.pde", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\pde.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.function", "sympy.core.relational", "sympy.core.relational", "sympy.core.function", "sympy.integrals.integrals", "sympy.core.function", "sympy.core.symbol", "sympy.core.symbol", "itertools", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["_handle_Integral", "_helper_simplify", "_separate", "_simplify_variable_coeff", "checkpdesol", "classify_pde", "pde_1st_linear_constant_coeff", "pde_1st_linear_constant_coeff_homogeneous", "pde_1st_linear_variable_coeff", "pde_separate", "pde_separate_add", "pde_separate_mul", "pdsolve"], ["_desolve", "_preprocess", "collect", "expand", "filldedent", "has_dups", "integrate", "is_sequence", "ode_order", "simplify", "solve", "symbols"]]}, {"name": "sympy.solvers.polysys", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\polysys.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.solvers.polysys"], ["sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polyerrors", "sympy.polys.polytools"]], "hasfunction": 2, "myfunction": [["solve_biquadratic", "solve_generic", "solve_poly_system", "solve_triangulated"], ["default_sort_key", "filldedent", "groebner", "parallel_poly_from_expr", "postfixes", "rcollect", "roots"]]}, {"name": "sympy.solvers.recurr", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\recurr.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.add", "sympy.core.symbol", "sympy.core.relational", "sympy.functions.combinatorial.factorials", "sympy.matrices.dense", "sympy.core.mul", "sympy.polys.polytools", "sympy.core.numbers", "sympy.functions.combinatorial.factorials", "sympy.core.symbol", "sympy.core.symbol", "sympy.functions.combinatorial.factorials", "collections", "sympy.functions.combinatorial.factorials"]], "hasfunction": 2, "myfunction": [["rsolve", "rsolve_hyper", "rsolve_poly", "rsolve_ratio"], ["casoratian", "default_sort_key", "gcd", "hypersimilar", "hypersimp", "lcm", "numbered_symbols", "product", "quo", "resultant", "roots", "simplify", "solve", "solve_undetermined_coeffs", "sympify"]]}, {"name": "sympy.solvers.solvers", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\solvers\\solvers.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.functions.elementary.complexes", "sympy.core.add", "sympy.logic.boolalg", "sympy.core.function", "sympy.logic.boolalg", "sympy.core.function", "sympy.core.symbol", "sympy.core.relational", "sympy.core.expr", "sympy.core.numbers", "sympy.core.function", "builtins", "sympy.polys.polyerrors", "sympy.functions.elementary.hyperbolic", "sympy.integrals.integrals", "sympy.functions.elementary.exponential", "sympy.matrices.dense", "sympy.core.mul", "sympy.core.relational", "sympy.matrices.common", "sympy.functions.elementary.piecewise", "sympy.polys.polytools", "sympy.polys.polyerrors", "sympy.core.power", "sympy.core.numbers", "sympy.core.symbol", "sympy.functions.elementary.trigonometric", "sympy.core.function", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric", "sympy.functions.combinatorial.factorials", "itertools", "sympy.functions.elementary.trigonometric", "collections", "sympy.functions.elementary.exponential", "sympy.functions.elementary.complexes", "sympy.functions.elementary.exponential", "sympy.core.traversal", "itertools", "sympy.functions.elementary.complexes", "sympy.functions.elementary.trigonometric", "sympy.functions.elementary.trigonometric"]], "hasfunction": 2, "myfunction": [["_invert", "_ispow", "_remove_duplicate_solutions", "_simple_dens", "_solve", "_solve_system", "_solve_undetermined", "_tsolve", "_vsolve", "checksol", "denoms", "det_minor", "det_perm", "det_quick", "inv_quick", "minsolve_linear_system", "nsolve", "recast_to_symbols", "solve", "solve_linear", "solve_linear_system", "solve_linear_system_LU", "solve_undetermined_coeffs", "unrad"], ["TR1", "TR2i", "_filtered_gens", "_mexpand", "_solve_lambert", "_sympify", "bivariate_type", "cancel", "check_assumptions", "collect", "connected_components", "conserve_mpmath_dps", "debugf", "default_sort_key", "denom", "divisors", "expand", "expand_func", "expand_log", "expand_mul", "expand_power_exp", "factor", "factor_terms", "filldedent", "flatten", "fraction", "fuzzy_not", "generate_bell", "ilcm", "integer_log", "is_sequence", "iterable", "lambdify", "logcombine", "nfloat", "nsimplify", "ordered", "piecewise_fold", "posify", "powdenest", "powsimp", "roots", "separatevars", "simplify", "solve_lin_sys", "solve_poly_system", "sqrt", "sqrt_depth", "sqrtdenest", "subsets", "sympify", "sympy_eqs_to_ring", "uniq", "zeros"]]}, {"name": "sympy.strategies", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["canon", "chain", "condition", "debug", "distribute", "do_one", "exhaust", "flatten", "glom", "minimize", "__new__", "null_safe", "rebuild", "rm_id", "sort", "tryit", "typed", "unpack"]]}, {"name": "sympy.strategies.branch", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\branch\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], ["canon", "chain", "condition", "debug", "do_one", "exhaust", "identity", "multiplex", "notempty", "onaction", "sfilter", "yieldify"]]}, {"name": "sympy.strategies.branch.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\branch\\core.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["chain", "condition", "debug", "do_one", "exhaust", "identity", "multiplex", "notempty", "onaction", "sfilter", "yieldify"], []]}, {"name": "sympy.strategies.branch.tools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\branch\\tools.py", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["canon"], ["exhaust", "multiplex", "top_down"]]}, {"name": "sympy.strategies.branch.traverse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\branch\\traverse.py", "layer": 3, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [["sall", "top_down"], ["chain", "do_one", "identity"]]}, {"name": "sympy.strategies.core", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\core.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections.abc", "collections.abc", "typing"]], "hasfunction": 2, "myfunction": [["_identity", "chain", "condition", "debug", "do_one", "exhaust", "identity", "memoize", "minimize", "null_safe", "switch", "tryit"], []]}, {"name": "sympy.strategies.rl", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\rl.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["distribute", "flatten", "glom", "rebuild", "rm_id", "sort", "subs", "unpack"], ["__new__", "sift"]]}, {"name": "sympy.strategies.tools", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\tools.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["canon", "subs", "typed"], ["do_one", "exhaust", "switch", "top_down"]]}, {"name": "sympy.strategies.traverse", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\traverse.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["bottom_up", "bottom_up_once", "sall", "top_down", "top_down_once"], ["chain", "do_one"]]}, {"name": "sympy.strategies.tree", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\tree.py", "layer": 2, "hasclass": 2, "myclass": [[], ["functools"]], "hasfunction": 2, "myfunction": [["allresults", "brute", "greedy", "treeapply"], ["chain", "identity", "minimize", "yieldify"]]}, {"name": "sympy.strategies.util", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\strategies\\util.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.core.basic"]], "hasfunction": 2, "myfunction": [["assoc"], ["__new__"]]}, {"name": "sympy.tensor", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.indexed", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.indexed", "sympy.tensor.indexed", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.ndim_array", "sympy.tensor.array.sparse_ndim_array"]], "hasfunction": 2, "myfunction": [[], ["derive_by_array", "get_contraction_structure", "get_indices", "permutedims", "shape", "tensorcontraction", "tensordiagonal", "tensorproduct"]]}, {"name": "sympy.tensor.array", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], ["sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.array_comprehension", "sympy.tensor.array.array_comprehension", "sympy.tensor.array.ndim_array", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.ndim_array", "sympy.tensor.array.sparse_ndim_array"]], "hasfunction": 2, "myfunction": [[], ["derive_by_array", "permutedims", "tensorcontraction", "tensordiagonal", "tensorproduct"]]}, {"name": "sympy.tensor.array.array_comprehension", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\array_comprehension.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.array_comprehension", "sympy.tensor.array.array_comprehension"], ["sympy.core.basic", "sympy.core.expr", "sympy.tensor.array.dense_ndim_array", "sympy.core.numbers", "sympy.core.symbol", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["isLambda"], ["_sympify", "sympify"]]}, {"name": "sympy.tensor.array.arrayop", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\arrayop.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.arrayop"], ["sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.dense_ndim_array", "collections.abc", "sympy.tensor.array.ndim_array", "sympy.printing.defaults", "sympy.tensor.array.sparse_ndim_array", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [["_arrayfy", "_util_contraction_diagonal", "derive_by_array", "permutedims", "tensorcontraction", "tensordiagonal", "tensorproduct"], ["_sympify", "diff"]]}, {"name": "sympy.tensor.array.dense_ndim_array", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\dense_ndim_array.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.dense_ndim_array", "sympy.tensor.array.dense_ndim_array"], ["sympy.tensor.array.ndim_array", "sympy.core.basic", "sympy.tensor.array.ndim_array", "sympy.tensor.array.mutable_ndim_array", "sympy.tensor.array.ndim_array", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "flatten"]]}, {"name": "sympy.tensor.array.mutable_ndim_array", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\mutable_ndim_array.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.mutable_ndim_array"], ["sympy.tensor.array.ndim_array"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "sympy.tensor.array.ndim_array", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\ndim_array.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.ndim_array", "sympy.tensor.array.ndim_array", "sympy.tensor.array.ndim_array"], ["sympy.core.basic", "sympy.core.containers", "sympy.core.expr", "sympy.core.numbers", "collections.abc", "sympy.core.kind", "sympy.printing.defaults", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], ["sympify"]]}, {"name": "sympy.tensor.array.sparse_ndim_array", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\array\\sparse_ndim_array.py", "layer": 3, "hasclass": 2, "myclass": [["sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.sparse_ndim_array", "sympy.tensor.array.sparse_ndim_array"], ["sympy.core.basic", "sympy.core.containers", "sympy.tensor.array.ndim_array", "sympy.tensor.array.mutable_ndim_array", "sympy.tensor.array.ndim_array", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], ["_sympify", "flatten"]]}, {"name": "sympy.tensor.functions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\functions.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.tensor.functions", "sympy.tensor.functions"], ["sympy.core.expr", "collections.abc", "sympy.core.mul"]], "hasfunction": 2, "myfunction": [["shape"], ["singledispatch", "sympify"]]}, {"name": "sympy.tensor.index_methods", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\index_methods.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.tensor.index_methods"], ["sympy.core.function", "sympy.tensor.indexed", "sympy.tensor.indexed", "collections", "sympy.functions.elementary.piecewise", "sympy.functions.elementary.exponential"]], "hasfunction": 2, "myfunction": [["_get_indices_Add", "_get_indices_Mul", "_get_indices_Pow", "_remove_repeated", "_unique_and_repeated", "get_contraction_structure", "get_indices"], ["sift"]]}, {"name": "sympy.tensor.indexed", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\tensor\\indexed.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.tensor.indexed", "sympy.tensor.indexed", "sympy.tensor.indexed", "sympy.tensor.indexed"], ["sympy.core.expr", "collections.abc", "sympy.functions.special.tensor_functions", "sympy.utilities.iterables", "sympy.core.numbers", "sympy.core.assumptions", "sympy.core.symbol", "sympy.core.containers"]], "hasfunction": 2, "myfunction": [[], ["_filter_assumptions", "_sympify", "dispatch", "filldedent", "fuzzy_bool", "fuzzy_not", "is_sequence", "sympify"]]}, {"name": "sympy.utilities", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["itertools"]], "hasfunction": 2, "myfunction": [[], ["capture", "dict_merge", "filldedent", "flatten", "group", "has_dups", "has_variety", "lambdify", "memoize_property", "numbered_symbols", "postfixes", "prefixes", "public", "reshape", "rotations", "sift", "subsets", "take", "threaded", "timed", "topological_sort", "unflatten", "variations", "xthreaded"]]}, {"name": "sympy.utilities.decorator", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\decorator.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.utilities.decorator"], []], "hasfunction": 2, "myfunction": [["conserve_mpmath_dps", "deprecated", "doctest_depends_on", "memoize_property", "public", "threaded", "threaded_factory", "xthreaded"], ["sympy_deprecation_warning", "update_wrapper", "wraps"]]}, {"name": "sympy.utilities.enumerative", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\enumerative.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.utilities.enumerative", "sympy.utilities.enumerative"], []], "hasfunction": 2, "myfunction": [["factoring_visitor", "list_visitor", "multiset_partitions_taocp", "part_key"], []]}, {"name": "sympy.utilities.exceptions", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\exceptions.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.utilities.exceptions"], []], "hasfunction": 2, "myfunction": [["ignore_warnings", "sympy_deprecation_warning"], ["dedent"]]}, {"name": "sympy.utilities.iterables", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\iterables.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.utilities.iterables"], ["collections", "sympy.utilities.enumerative", "collections", "itertools", "itertools", "itertools", "itertools", "itertools", "collections", "itertools", "itertools", "itertools", "itertools"]], "hasfunction": 2, "myfunction": [["_iproduct2", "_partition", "_set_derangements", "_set_partitions", "_strongly_connected_components", "binary_partitions", "bracelets", "capture", "common_prefix", "common_suffix", "connected_components", "default_sort_key", "dict_merge", "filter_symbols", "flatten", "generate_bell", "generate_derangements", "generate_involutions", "generate_oriented_forest", "group", "has_dups", "has_variety", "ibin", "interactive_traversal", "iproduct", "is_palindromic", "is_sequence", "iterable", "kbins", "least_rotation", "minlex", "multiset", "multiset_combinations", "multiset_derangements", "multiset_partitions", "multiset_permutations", "necklaces", "numbered_symbols", "ordered", "ordered_partitions", "partitions", "permute_signs", "postfixes", "postorder_traversal", "prefixes", "random_derangement", "reshape", "rotate_left", "rotate_right", "rotations", "roundrobin", "runs", "sequence_partitions", "sequence_partitions_empty", "sift", "signed_permutations", "strongly_connected_components", "subsets", "take", "topological_sort", "unflatten", "uniq", "variations"], ["as_int", "deprecated", "list_visitor", "multiset_partitions_taocp"]]}, {"name": "sympy.utilities.magic", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\magic.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["pollute"], []]}, {"name": "sympy.utilities.mathml", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\mathml\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["add_mathml_headers", "apply_xsl", "c2p"], ["doctest_depends_on", "get_resource"]]}, {"name": "sympy.utilities.memoization", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\memoization.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["assoc_recurrence_memo", "recurrence_memo"], ["wraps"]]}, {"name": "sympy.utilities.misc", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\misc.py", "layer": 2, "hasclass": 2, "myclass": [["sympy.utilities.misc"], []], "hasfunction": 2, "myfunction": [["_replace", "as_int", "debug", "debug_decorator", "debugf", "filldedent", "find_executable", "func_name", "ordinal", "rawlines", "replace", "strlines", "translate"], ["dedent", "fill"]]}, {"name": "sympy.utilities.pkgdata", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\pkgdata.py", "layer": 2, "hasclass": 2, "myclass": [[], ["_io"]], "hasfunction": 2, "myfunction": [["get_resource"], []]}, {"name": "sympy.utilities.source", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\source.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_class", "get_mod_func"], []]}, {"name": "sympy.utilities.timeutils", "file": "C:\\Users\\27704\\AppData\\Local\\Programs\\Python\\Python38\\lib\\site-packages\\sympy\\utilities\\timeutils.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["__do_timings", "_print_timestack", "timed", "timethis"], []]}], "links": [{"source": 0, "target": 1}, {"source": 0, "target": 2}, {"source": 0, "target": 3}, {"source": 4, "target": 5}, {"source": 4, "target": 6}, {"source": 4, "target": 7}, {"source": 4, "target": 8}, {"source": 4, "target": 9}, {"source": 4, "target": 10}, {"source": 4, "target": 11}, {"source": 4, "target": 12}, {"source": 4, "target": 13}, {"source": 4, "target": 14}, {"source": 4, "target": 15}, {"source": 7, "target": 14}, {"source": 16, "target": 17}, {"source": 16, "target": 18}, {"source": 16, "target": 19}, {"source": 16, "target": 20}, {"source": 16, "target": 21}, {"source": 21, "target": 20}, {"source": 22, "target": 23}, {"source": 22, "target": 24}, {"source": 22, "target": 25}, {"source": 22, "target": 26}, {"source": 28, "target": 29}, {"source": 28, "target": 30}, {"source": 28, "target": 31}, {"source": 28, "target": 32}, {"source": 33, "target": 34}, {"source": 33, "target": 35}, {"source": 33, "target": 36}, {"source": 33, "target": 37}, {"source": 33, "target": 38}, {"source": 33, "target": 39}, {"source": 40, "target": 41}, {"source": 40, "target": 42}, {"source": 40, "target": 43}, {"source": 40, "target": 44}, {"source": 40, "target": 45}, {"source": 40, "target": 46}, {"source": 40, "target": 47}, {"source": 40, "target": 48}, {"source": 40, "target": 51}, {"source": 40, "target": 52}, {"source": 40, "target": 56}, {"source": 40, "target": 57}, {"source": 40, "target": 58}, {"source": 40, "target": 59}, {"source": 40, "target": 60}, {"source": 41, "target": 43}, {"source": 41, "target": 59}, {"source": 45, "target": 59}, {"source": 48, "target": 49}, {"source": 48, "target": 50}, {"source": 52, "target": 53}, {"source": 52, "target": 54}, {"source": 52, "target": 55}, {"source": 53, "target": 59}, {"source": 54, "target": 59}, {"source": 55, "target": 59}, {"source": 60, "target": 48}, {"source": 61, "target": 62}, {"source": 61, "target": 63}, {"source": 61, "target": 64}, {"source": 61, "target": 65}, {"source": 61, "target": 66}, {"source": 61, "target": 67}, {"source": 61, "target": 68}, {"source": 61, "target": 69}, {"source": 61, "target": 70}, {"source": 61, "target": 71}, {"source": 61, "target": 72}, {"source": 61, "target": 73}, {"source": 65, "target": 61}, {"source": 74, "target": 75}, {"source": 74, "target": 76}, {"source": 77, "target": 78}, {"source": 77, "target": 79}, {"source": 77, "target": 80}, {"source": 77, "target": 81}, {"source": 77, "target": 82}, {"source": 77, "target": 83}, {"source": 77, "target": 84}, {"source": 85, "target": 86}, {"source": 85, "target": 87}, {"source": 88, "target": 89}, {"source": 88, "target": 90}, {"source": 88, "target": 92}, {"source": 88, "target": 93}, {"source": 88, "target": 94}, {"source": 88, "target": 95}, {"source": 88, "target": 96}, {"source": 88, "target": 97}, {"source": 88, "target": 98}, {"source": 88, "target": 99}, {"source": 88, "target": 100}, {"source": 88, "target": 101}, {"source": 88, "target": 102}, {"source": 88, "target": 103}, {"source": 88, "target": 104}, {"source": 88, "target": 105}, {"source": 88, "target": 106}, {"source": 88, "target": 107}, {"source": 88, "target": 108}, {"source": 88, "target": 109}, {"source": 88, "target": 110}, {"source": 88, "target": 111}, {"source": 88, "target": 112}, {"source": 88, "target": 116}, {"source": 88, "target": 117}, {"source": 88, "target": 118}, {"source": 88, "target": 119}, {"source": 88, "target": 120}, {"source": 88, "target": 121}, {"source": 88, "target": 122}, {"source": 88, "target": 123}, {"source": 88, "target": 124}, {"source": 88, "target": 125}, {"source": 88, "target": 126}, {"source": 88, "target": 127}, {"source": 88, "target": 128}, {"source": 88, "target": 129}, {"source": 88, "target": 130}, {"source": 88, "target": 131}, {"source": 88, "target": 132}, {"source": 88, "target": 133}, {"source": 88, "target": 134}, {"source": 88, "target": 135}, {"source": 88, "target": 136}, {"source": 88, "target": 137}, {"source": 88, "target": 138}, {"source": 88, "target": 139}, {"source": 88, "target": 140}, {"source": 88, "target": 141}, {"source": 88, "target": 142}, {"source": 88, "target": 143}, {"source": 88, "target": 144}, {"source": 88, "target": 145}, {"source": 88, "target": 146}, {"source": 88, "target": 147}, {"source": 88, "target": 150}, {"source": 88, "target": 151}, {"source": 88, "target": 152}, {"source": 88, "target": 153}, {"source": 88, "target": 154}, {"source": 88, "target": 155}, {"source": 88, "target": 156}, {"source": 88, "target": 157}, {"source": 88, "target": 159}, {"source": 88, "target": 160}, {"source": 88, "target": 161}, {"source": 88, "target": 162}, {"source": 88, "target": 163}, {"source": 88, "target": 164}, {"source": 88, "target": 165}, {"source": 88, "target": 174}, {"source": 88, "target": 175}, {"source": 90, "target": 91}, {"source": 97, "target": 90}, {"source": 97, "target": 111}, {"source": 97, "target": 102}, {"source": 97, "target": 164}, {"source": 98, "target": 90}, {"source": 99, "target": 98}, {"source": 100, "target": 90}, {"source": 102, "target": 145}, {"source": 102, "target": 88}, {"source": 103, "target": 90}, {"source": 103, "target": 122}, {"source": 103, "target": 88}, {"source": 107, "target": 90}, {"source": 109, "target": 90}, {"source": 109, "target": 111}, {"source": 109, "target": 88}, {"source": 111, "target": 90}, {"source": 111, "target": 122}, {"source": 111, "target": 88}, {"source": 112, "target": 113}, {"source": 112, "target": 114}, {"source": 112, "target": 115}, {"source": 112, "target": 122}, {"source": 112, "target": 88}, {"source": 112, "target": 124}, {"source": 112, "target": 126}, {"source": 112, "target": 128}, {"source": 112, "target": 136}, {"source": 112, "target": 143}, {"source": 112, "target": 138}, {"source": 112, "target": 140}, {"source": 112, "target": 141}, {"source": 112, "target": 145}, {"source": 112, "target": 146}, {"source": 112, "target": 88}, {"source": 112, "target": 151}, {"source": 112, "target": 155}, {"source": 112, "target": 156}, {"source": 112, "target": 159}, {"source": 112, "target": 161}, {"source": 112, "target": 163}, {"source": 112, "target": 164}, {"source": 112, "target": 165}, {"source": 112, "target": 174}, {"source": 113, "target": 90}, {"source": 113, "target": 98}, {"source": 113, "target": 122}, {"source": 113, "target": 88}, {"source": 113, "target": 124}, {"source": 113, "target": 126}, {"source": 113, "target": 128}, {"source": 113, "target": 136}, {"source": 113, "target": 143}, {"source": 113, "target": 138}, {"source": 113, "target": 140}, {"source": 113, "target": 141}, {"source": 113, "target": 145}, {"source": 113, "target": 146}, {"source": 113, "target": 88}, {"source": 113, "target": 151}, {"source": 113, "target": 155}, {"source": 113, "target": 156}, {"source": 113, "target": 159}, {"source": 113, "target": 161}, {"source": 113, "target": 163}, {"source": 113, "target": 164}, {"source": 113, "target": 165}, {"source": 113, "target": 174}, {"source": 114, "target": 90}, {"source": 114, "target": 98}, {"source": 114, "target": 122}, {"source": 114, "target": 132}, {"source": 114, "target": 111}, {"source": 114, "target": 116}, {"source": 114, "target": 124}, {"source": 114, "target": 126}, {"source": 114, "target": 136}, {"source": 114, "target": 140}, {"source": 114, "target": 145}, {"source": 114, "target": 88}, {"source": 114, "target": 154}, {"source": 114, "target": 159}, {"source": 114, "target": 161}, {"source": 114, "target": 163}, {"source": 114, "target": 164}, {"source": 114, "target": 144}, {"source": 115, "target": 90}, {"source": 115, "target": 98}, {"source": 115, "target": 163}, {"source": 116, "target": 90}, {"source": 116, "target": 122}, {"source": 116, "target": 111}, {"source": 116, "target": 126}, {"source": 116, "target": 140}, {"source": 116, "target": 88}, {"source": 116, "target": 153}, {"source": 116, "target": 161}, {"source": 116, "target": 163}, {"source": 116, "target": 164}, {"source": 116, "target": 174}, {"source": 117, "target": 90}, {"source": 117, "target": 98}, {"source": 117, "target": 108}, {"source": 117, "target": 122}, {"source": 117, "target": 126}, {"source": 117, "target": 88}, {"source": 117, "target": 161}, {"source": 117, "target": 119}, {"source": 117, "target": 164}, {"source": 117, "target": 175}, {"source": 118, "target": 90}, {"source": 118, "target": 119}, {"source": 118, "target": 122}, {"source": 118, "target": 175}, {"source": 119, "target": 90}, {"source": 119, "target": 122}, {"source": 119, "target": 88}, {"source": 120, "target": 90}, {"source": 121, "target": 90}, {"source": 121, "target": 163}, {"source": 121, "target": 174}, {"source": 122, "target": 90}, {"source": 122, "target": 93}, {"source": 122, "target": 88}, {"source": 123, "target": 90}, {"source": 123, "target": 122}, {"source": 123, "target": 126}, {"source": 123, "target": 88}, {"source": 123, "target": 153}, {"source": 124, "target": 90}, {"source": 124, "target": 98}, {"source": 124, "target": 105}, {"source": 124, "target": 111}, {"source": 124, "target": 122}, {"source": 124, "target": 123}, {"source": 124, "target": 126}, {"source": 124, "target": 135}, {"source": 124, "target": 140}, {"source": 124, "target": 146}, {"source": 124, "target": 88}, {"source": 124, "target": 164}, {"source": 125, "target": 90}, {"source": 125, "target": 98}, {"source": 125, "target": 122}, {"source": 125, "target": 123}, {"source": 125, "target": 124}, {"source": 125, "target": 126}, {"source": 125, "target": 128}, {"source": 125, "target": 111}, {"source": 125, "target": 145}, {"source": 125, "target": 146}, {"source": 125, "target": 88}, {"source": 125, "target": 154}, {"source": 125, "target": 164}, {"source": 125, "target": 163}, {"source": 126, "target": 90}, {"source": 126, "target": 94}, {"source": 126, "target": 122}, {"source": 126, "target": 88}, {"source": 126, "target": 153}, {"source": 127, "target": 122}, {"source": 128, "target": 90}, {"source": 128, "target": 98}, {"source": 128, "target": 122}, {"source": 128, "target": 123}, {"source": 128, "target": 132}, {"source": 128, "target": 124}, {"source": 128, "target": 126}, {"source": 128, "target": 145}, {"source": 128, "target": 146}, {"source": 128, "target": 88}, {"source": 128, "target": 164}, {"source": 128, "target": 163}, {"source": 129, "target": 90}, {"source": 129, "target": 122}, {"source": 129, "target": 88}, {"source": 129, "target": 163}, {"source": 129, "target": 174}, {"source": 130, "target": 90}, {"source": 130, "target": 122}, {"source": 131, "target": 90}, {"source": 131, "target": 92}, {"source": 131, "target": 98}, {"source": 131, "target": 117}, {"source": 131, "target": 125}, {"source": 131, "target": 122}, {"source": 131, "target": 136}, {"source": 131, "target": 138}, {"source": 131, "target": 88}, {"source": 131, "target": 147}, {"source": 132, "target": 89}, {"source": 132, "target": 90}, {"source": 132, "target": 122}, {"source": 132, "target": 133}, {"source": 132, "target": 88}, {"source": 134, "target": 90}, {"source": 134, "target": 106}, {"source": 134, "target": 109}, {"source": 134, "target": 88}, {"source": 135, "target": 90}, {"source": 136, "target": 90}, {"source": 136, "target": 101}, {"source": 136, "target": 122}, {"source": 136, "target": 123}, {"source": 136, "target": 111}, {"source": 136, "target": 126}, {"source": 136, "target": 88}, {"source": 137, "target": 88}, {"source": 138, "target": 90}, {"source": 138, "target": 98}, {"source": 138, "target": 126}, {"source": 138, "target": 139}, {"source": 138, "target": 88}, {"source": 138, "target": 144}, {"source": 139, "target": 90}, {"source": 139, "target": 122}, {"source": 139, "target": 124}, {"source": 140, "target": 90}, {"source": 140, "target": 98}, {"source": 140, "target": 105}, {"source": 140, "target": 122}, {"source": 140, "target": 126}, {"source": 140, "target": 88}, {"source": 141, "target": 90}, {"source": 141, "target": 122}, {"source": 141, "target": 88}, {"source": 142, "target": 90}, {"source": 142, "target": 103}, {"source": 142, "target": 88}, {"source": 143, "target": 90}, {"source": 143, "target": 98}, {"source": 143, "target": 122}, {"source": 144, "target": 90}, {"source": 144, "target": 98}, {"source": 144, "target": 111}, {"source": 144, "target": 146}, {"source": 144, "target": 88}, {"source": 144, "target": 161}, {"source": 144, "target": 164}, {"source": 145, "target": 90}, {"source": 145, "target": 98}, {"source": 145, "target": 111}, {"source": 145, "target": 122}, {"source": 145, "target": 126}, {"source": 145, "target": 135}, {"source": 145, "target": 140}, {"source": 145, "target": 88}, {"source": 145, "target": 164}, {"source": 146, "target": 90}, {"source": 146, "target": 105}, {"source": 146, "target": 88}, {"source": 147, "target": 98}, {"source": 147, "target": 112}, {"source": 147, "target": 148}, {"source": 147, "target": 149}, {"source": 148, "target": 90}, {"source": 148, "target": 116}, {"source": 148, "target": 88}, {"source": 148, "target": 154}, {"source": 149, "target": 90}, {"source": 149, "target": 122}, {"source": 149, "target": 116}, {"source": 149, "target": 141}, {"source": 149, "target": 145}, {"source": 149, "target": 88}, {"source": 149, "target": 163}, {"source": 149, "target": 164}, {"source": 150, "target": 90}, {"source": 150, "target": 98}, {"source": 150, "target": 106}, {"source": 150, "target": 122}, {"source": 150, "target": 123}, {"source": 150, "target": 88}, {"source": 150, "target": 143}, {"source": 150, "target": 152}, {"source": 150, "target": 157}, {"source": 151, "target": 90}, {"source": 151, "target": 98}, {"source": 151, "target": 122}, {"source": 151, "target": 111}, {"source": 151, "target": 124}, {"source": 151, "target": 161}, {"source": 151, "target": 164}, {"source": 152, "target": 90}, {"source": 152, "target": 122}, {"source": 153, "target": 90}, {"source": 153, "target": 98}, {"source": 153, "target": 88}, {"source": 154, "target": 90}, {"source": 154, "target": 98}, {"source": 154, "target": 145}, {"source": 154, "target": 146}, {"source": 154, "target": 88}, {"source": 154, "target": 164}, {"source": 155, "target": 90}, {"source": 156, "target": 90}, {"source": 156, "target": 123}, {"source": 156, "target": 124}, {"source": 156, "target": 126}, {"source": 156, "target": 140}, {"source": 156, "target": 88}, {"source": 156, "target": 145}, {"source": 157, "target": 158}, {"source": 158, "target": 90}, {"source": 158, "target": 98}, {"source": 158, "target": 88}, {"source": 159, "target": 90}, {"source": 159, "target": 98}, {"source": 160, "target": 90}, {"source": 160, "target": 122}, {"source": 160, "target": 130}, {"source": 160, "target": 88}, {"source": 161, "target": 90}, {"source": 161, "target": 98}, {"source": 161, "target": 111}, {"source": 161, "target": 122}, {"source": 161, "target": 88}, {"source": 162, "target": 90}, {"source": 162, "target": 107}, {"source": 162, "target": 130}, {"source": 163, "target": 90}, {"source": 163, "target": 122}, {"source": 163, "target": 88}, {"source": 163, "target": 164}, {"source": 164, "target": 90}, {"source": 165, "target": 166}, {"source": 165, "target": 167}, {"source": 165, "target": 168}, {"source": 165, "target": 169}, {"source": 165, "target": 170}, {"source": 165, "target": 171}, {"source": 165, "target": 172}, {"source": 165, "target": 173}, {"source": 166, "target": 90}, {"source": 167, "target": 98}, {"source": 168, "target": 90}, {"source": 169, "target": 90}, {"source": 170, "target": 90}, {"source": 171, "target": 122}, {"source": 171, "target": 140}, {"source": 172, "target": 90}, {"source": 172, "target": 88}, {"source": 173, "target": 90}, {"source": 174, "target": 122}, {"source": 175, "target": 90}, {"source": 175, "target": 98}, {"source": 175, "target": 119}, {"source": 175, "target": 122}, {"source": 175, "target": 124}, {"source": 175, "target": 126}, {"source": 175, "target": 88}, {"source": 175, "target": 161}, {"source": 175, "target": 163}, {"source": 175, "target": 164}, {"source": 176, "target": 177}, {"source": 176, "target": 179}, {"source": 176, "target": 189}, {"source": 176, "target": 190}, {"source": 176, "target": 191}, {"source": 176, "target": 177}, {"source": 176, "target": 178}, {"source": 176, "target": 192}, {"source": 176, "target": 193}, {"source": 176, "target": 207}, {"source": 176, "target": 208}, {"source": 176, "target": 217}, {"source": 176, "target": 218}, {"source": 176, "target": 224}, {"source": 176, "target": 225}, {"source": 176, "target": 226}, {"source": 177, "target": 178}, {"source": 177, "target": 192}, {"source": 177, "target": 208}, {"source": 177, "target": 224}, {"source": 178, "target": 192}, {"source": 178, "target": 224}, {"source": 179, "target": 180}, {"source": 179, "target": 181}, {"source": 179, "target": 182}, {"source": 179, "target": 183}, {"source": 179, "target": 184}, {"source": 179, "target": 185}, {"source": 179, "target": 186}, {"source": 179, "target": 187}, {"source": 179, "target": 188}, {"source": 189, "target": 208}, {"source": 190, "target": 192}, {"source": 190, "target": 208}, {"source": 190, "target": 217}, {"source": 191, "target": 208}, {"source": 193, "target": 194}, {"source": 193, "target": 195}, {"source": 193, "target": 196}, {"source": 193, "target": 197}, {"source": 193, "target": 198}, {"source": 193, "target": 199}, {"source": 193, "target": 200}, {"source": 193, "target": 201}, {"source": 193, "target": 202}, {"source": 193, "target": 203}, {"source": 193, "target": 204}, {"source": 193, "target": 205}, {"source": 193, "target": 206}, {"source": 208, "target": 209}, {"source": 208, "target": 210}, {"source": 208, "target": 211}, {"source": 208, "target": 212}, {"source": 208, "target": 213}, {"source": 208, "target": 214}, {"source": 208, "target": 215}, {"source": 208, "target": 216}, {"source": 218, "target": 219}, {"source": 218, "target": 220}, {"source": 218, "target": 221}, {"source": 218, "target": 222}, {"source": 218, "target": 223}, {"source": 227, "target": 228}, {"source": 227, "target": 229}, {"source": 227, "target": 230}, {"source": 227, "target": 231}, {"source": 227, "target": 232}, {"source": 227, "target": 233}, {"source": 227, "target": 247}, {"source": 227, "target": 253}, {"source": 227, "target": 254}, {"source": 227, "target": 413}, {"source": 227, "target": 255}, {"source": 227, "target": 414}, {"source": 227, "target": 415}, {"source": 227, "target": 256}, {"source": 227, "target": 416}, {"source": 227, "target": 257}, {"source": 227, "target": 258}, {"source": 227, "target": 259}, {"source": 227, "target": 260}, {"source": 227, "target": 261}, {"source": 227, "target": 273}, {"source": 227, "target": 274}, {"source": 227, "target": 275}, {"source": 227, "target": 294}, {"source": 227, "target": 295}, {"source": 227, "target": 417}, {"source": 227, "target": 427}, {"source": 227, "target": 296}, {"source": 227, "target": 276}, {"source": 227, "target": 297}, {"source": 227, "target": 428}, {"source": 227, "target": 298}, {"source": 227, "target": 301}, {"source": 227, "target": 302}, {"source": 227, "target": 313}, {"source": 227, "target": 314}, {"source": 227, "target": 318}, {"source": 227, "target": 429}, {"source": 227, "target": 430}, {"source": 227, "target": 328}, {"source": 227, "target": 418}, {"source": 227, "target": 249}, {"source": 227, "target": 329}, {"source": 227, "target": 277}, {"source": 227, "target": 278}, {"source": 227, "target": 279}, {"source": 227, "target": 330}, {"source": 227, "target": 331}, {"source": 227, "target": 431}, {"source": 227, "target": 332}, {"source": 227, "target": 333}, {"source": 227, "target": 280}, {"source": 227, "target": 432}, {"source": 227, "target": 334}, {"source": 227, "target": 335}, {"source": 227, "target": 419}, {"source": 227, "target": 433}, {"source": 227, "target": 336}, {"source": 227, "target": 337}, {"source": 227, "target": 338}, {"source": 227, "target": 339}, {"source": 227, "target": 434}, {"source": 227, "target": 440}, {"source": 227, "target": 340}, {"source": 227, "target": 341}, {"source": 227, "target": 441}, {"source": 227, "target": 342}, {"source": 227, "target": 442}, {"source": 227, "target": 281}, {"source": 227, "target": 343}, {"source": 227, "target": 443}, {"source": 227, "target": 444}, {"source": 227, "target": 420}, {"source": 227, "target": 344}, {"source": 227, "target": 282}, {"source": 227, "target": 421}, {"source": 227, "target": 445}, {"source": 227, "target": 356}, {"source": 227, "target": 447}, {"source": 227, "target": 462}, {"source": 227, "target": 463}, {"source": 227, "target": 422}, {"source": 227, "target": 464}, {"source": 227, "target": 357}, {"source": 227, "target": 358}, {"source": 227, "target": 465}, {"source": 227, "target": 466}, {"source": 227, "target": 423}, {"source": 227, "target": 283}, {"source": 227, "target": 284}, {"source": 227, "target": 359}, {"source": 227, "target": 360}, {"source": 227, "target": 361}, {"source": 227, "target": 448}, {"source": 227, "target": 362}, {"source": 227, "target": 363}, {"source": 227, "target": 450}, {"source": 227, "target": 467}, {"source": 227, "target": 285}, {"source": 227, "target": 286}, {"source": 227, "target": 470}, {"source": 227, "target": 451}, {"source": 227, "target": 435}, {"source": 227, "target": 471}, {"source": 227, "target": 472}, {"source": 227, "target": 473}, {"source": 227, "target": 452}, {"source": 227, "target": 371}, {"source": 227, "target": 373}, {"source": 227, "target": 287}, {"source": 227, "target": 374}, {"source": 227, "target": 375}, {"source": 227, "target": 376}, {"source": 227, "target": 378}, {"source": 227, "target": 250}, {"source": 227, "target": 474}, {"source": 227, "target": 379}, {"source": 227, "target": 424}, {"source": 227, "target": 425}, {"source": 227, "target": 476}, {"source": 227, "target": 453}, {"source": 227, "target": 251}, {"source": 227, "target": 380}, {"source": 227, "target": 468}, {"source": 227, "target": 436}, {"source": 227, "target": 437}, {"source": 227, "target": 438}, {"source": 227, "target": 439}, {"source": 227, "target": 381}, {"source": 227, "target": 372}, {"source": 227, "target": 252}, {"source": 227, "target": 477}, {"source": 227, "target": 288}, {"source": 227, "target": 384}, {"source": 227, "target": 385}, {"source": 227, "target": 386}, {"source": 227, "target": 382}, {"source": 227, "target": 454}, {"source": 227, "target": 455}, {"source": 227, "target": 289}, {"source": 227, "target": 478}, {"source": 227, "target": 387}, {"source": 227, "target": 481}, {"source": 227, "target": 426}, {"source": 227, "target": 388}, {"source": 227, "target": 290}, {"source": 227, "target": 315}, {"source": 227, "target": 389}, {"source": 227, "target": 392}, {"source": 227, "target": 393}, {"source": 227, "target": 456}, {"source": 227, "target": 394}, {"source": 227, "target": 395}, {"source": 227, "target": 457}, {"source": 227, "target": 479}, {"source": 227, "target": 396}, {"source": 227, "target": 475}, {"source": 227, "target": 458}, {"source": 227, "target": 316}, {"source": 227, "target": 397}, {"source": 227, "target": 291}, {"source": 227, "target": 459}, {"source": 227, "target": 398}, {"source": 227, "target": 399}, {"source": 227, "target": 480}, {"source": 227, "target": 400}, {"source": 227, "target": 401}, {"source": 227, "target": 402}, {"source": 227, "target": 460}, {"source": 227, "target": 409}, {"source": 227, "target": 292}, {"source": 227, "target": 383}, {"source": 227, "target": 390}, {"source": 227, "target": 482}, {"source": 227, "target": 410}, {"source": 227, "target": 411}, {"source": 227, "target": 293}, {"source": 227, "target": 317}, {"source": 227, "target": 391}, {"source": 227, "target": 412}, {"source": 228, "target": 227}, {"source": 229, "target": 227}, {"source": 230, "target": 227}, {"source": 231, "target": 232}, {"source": 231, "target": 233}, {"source": 231, "target": 247}, {"source": 231, "target": 253}, {"source": 231, "target": 254}, {"source": 231, "target": 255}, {"source": 231, "target": 256}, {"source": 231, "target": 257}, {"source": 231, "target": 258}, {"source": 231, "target": 259}, {"source": 231, "target": 260}, {"source": 231, "target": 261}, {"source": 231, "target": 273}, {"source": 231, "target": 274}, {"source": 231, "target": 275}, {"source": 231, "target": 294}, {"source": 231, "target": 295}, {"source": 231, "target": 296}, {"source": 231, "target": 276}, {"source": 231, "target": 297}, {"source": 231, "target": 298}, {"source": 231, "target": 301}, {"source": 231, "target": 302}, {"source": 231, "target": 313}, {"source": 231, "target": 314}, {"source": 231, "target": 318}, {"source": 231, "target": 328}, {"source": 231, "target": 249}, {"source": 231, "target": 329}, {"source": 231, "target": 277}, {"source": 231, "target": 278}, {"source": 231, "target": 279}, {"source": 231, "target": 330}, {"source": 231, "target": 331}, {"source": 231, "target": 332}, {"source": 231, "target": 333}, {"source": 231, "target": 280}, {"source": 231, "target": 334}, {"source": 231, "target": 335}, {"source": 231, "target": 336}, {"source": 231, "target": 337}, {"source": 231, "target": 338}, {"source": 231, "target": 339}, {"source": 231, "target": 340}, {"source": 231, "target": 341}, {"source": 231, "target": 342}, {"source": 231, "target": 281}, {"source": 231, "target": 343}, {"source": 231, "target": 344}, {"source": 231, "target": 282}, {"source": 231, "target": 356}, {"source": 231, "target": 357}, {"source": 231, "target": 358}, {"source": 231, "target": 283}, {"source": 231, "target": 284}, {"source": 231, "target": 359}, {"source": 231, "target": 360}, {"source": 231, "target": 361}, {"source": 231, "target": 362}, {"source": 231, "target": 363}, {"source": 231, "target": 285}, {"source": 231, "target": 286}, {"source": 231, "target": 371}, {"source": 231, "target": 373}, {"source": 231, "target": 287}, {"source": 231, "target": 374}, {"source": 231, "target": 375}, {"source": 231, "target": 376}, {"source": 231, "target": 378}, {"source": 231, "target": 250}, {"source": 231, "target": 379}, {"source": 231, "target": 251}, {"source": 231, "target": 380}, {"source": 231, "target": 381}, {"source": 231, "target": 372}, {"source": 231, "target": 252}, {"source": 231, "target": 288}, {"source": 231, "target": 384}, {"source": 231, "target": 385}, {"source": 231, "target": 386}, {"source": 231, "target": 382}, {"source": 231, "target": 289}, {"source": 231, "target": 387}, {"source": 231, "target": 388}, {"source": 231, "target": 290}, {"source": 231, "target": 315}, {"source": 231, "target": 389}, {"source": 231, "target": 392}, {"source": 231, "target": 393}, {"source": 231, "target": 394}, {"source": 231, "target": 395}, {"source": 231, "target": 396}, {"source": 231, "target": 316}, {"source": 231, "target": 397}, {"source": 231, "target": 291}, {"source": 231, "target": 398}, {"source": 231, "target": 399}, {"source": 231, "target": 400}, {"source": 231, "target": 401}, {"source": 231, "target": 402}, {"source": 231, "target": 409}, {"source": 231, "target": 292}, {"source": 231, "target": 383}, {"source": 231, "target": 390}, {"source": 231, "target": 410}, {"source": 231, "target": 411}, {"source": 231, "target": 293}, {"source": 231, "target": 317}, {"source": 231, "target": 391}, {"source": 231, "target": 412}, {"source": 232, "target": 227}, {"source": 233, "target": 234}, {"source": 233, "target": 235}, {"source": 233, "target": 236}, {"source": 233, "target": 237}, {"source": 233, "target": 238}, {"source": 233, "target": 239}, {"source": 233, "target": 240}, {"source": 233, "target": 241}, {"source": 233, "target": 242}, {"source": 233, "target": 243}, {"source": 233, "target": 244}, {"source": 233, "target": 245}, {"source": 233, "target": 246}, {"source": 234, "target": 227}, {"source": 234, "target": 242}, {"source": 236, "target": 227}, {"source": 237, "target": 227}, {"source": 239, "target": 227}, {"source": 240, "target": 227}, {"source": 241, "target": 227}, {"source": 242, "target": 227}, {"source": 243, "target": 227}, {"source": 244, "target": 227}, {"source": 245, "target": 227}, {"source": 247, "target": 248}, {"source": 247, "target": 249}, {"source": 247, "target": 250}, {"source": 247, "target": 251}, {"source": 247, "target": 252}, {"source": 248, "target": 227}, {"source": 251, "target": 227}, {"source": 253, "target": 227}, {"source": 254, "target": 227}, {"source": 255, "target": 227}, {"source": 257, "target": 227}, {"source": 260, "target": 227}, {"source": 261, "target": 262}, {"source": 261, "target": 263}, {"source": 261, "target": 264}, {"source": 261, "target": 265}, {"source": 261, "target": 266}, {"source": 261, "target": 267}, {"source": 261, "target": 268}, {"source": 261, "target": 269}, {"source": 261, "target": 270}, {"source": 261, "target": 271}, {"source": 261, "target": 272}, {"source": 262, "target": 227}, {"source": 263, "target": 227}, {"source": 264, "target": 227}, {"source": 266, "target": 227}, {"source": 267, "target": 227}, {"source": 268, "target": 227}, {"source": 269, "target": 227}, {"source": 270, "target": 227}, {"source": 272, "target": 227}, {"source": 273, "target": 227}, {"source": 274, "target": 227}, {"source": 275, "target": 257}, {"source": 275, "target": 258}, {"source": 275, "target": 276}, {"source": 275, "target": 277}, {"source": 275, "target": 278}, {"source": 275, "target": 279}, {"source": 275, "target": 280}, {"source": 275, "target": 281}, {"source": 275, "target": 282}, {"source": 275, "target": 283}, {"source": 275, "target": 284}, {"source": 275, "target": 285}, {"source": 275, "target": 286}, {"source": 275, "target": 287}, {"source": 275, "target": 288}, {"source": 275, "target": 289}, {"source": 275, "target": 290}, {"source": 275, "target": 291}, {"source": 275, "target": 292}, {"source": 275, "target": 293}, {"source": 276, "target": 227}, {"source": 277, "target": 227}, {"source": 278, "target": 227}, {"source": 279, "target": 227}, {"source": 280, "target": 227}, {"source": 281, "target": 227}, {"source": 282, "target": 227}, {"source": 283, "target": 227}, {"source": 284, "target": 227}, {"source": 285, "target": 227}, {"source": 286, "target": 227}, {"source": 287, "target": 227}, {"source": 288, "target": 227}, {"source": 289, "target": 227}, {"source": 290, "target": 227}, {"source": 291, "target": 227}, {"source": 292, "target": 227}, {"source": 294, "target": 227}, {"source": 295, "target": 227}, {"source": 296, "target": 227}, {"source": 297, "target": 227}, {"source": 298, "target": 299}, {"source": 298, "target": 300}, {"source": 299, "target": 227}, {"source": 300, "target": 227}, {"source": 301, "target": 227}, {"source": 302, "target": 303}, {"source": 302, "target": 304}, {"source": 302, "target": 305}, {"source": 302, "target": 306}, {"source": 302, "target": 307}, {"source": 302, "target": 308}, {"source": 302, "target": 309}, {"source": 302, "target": 310}, {"source": 302, "target": 311}, {"source": 302, "target": 312}, {"source": 304, "target": 227}, {"source": 306, "target": 227}, {"source": 307, "target": 227}, {"source": 308, "target": 227}, {"source": 309, "target": 227}, {"source": 310, "target": 227}, {"source": 311, "target": 227}, {"source": 312, "target": 227}, {"source": 313, "target": 255}, {"source": 313, "target": 259}, {"source": 313, "target": 314}, {"source": 313, "target": 315}, {"source": 313, "target": 316}, {"source": 313, "target": 317}, {"source": 314, "target": 227}, {"source": 315, "target": 227}, {"source": 316, "target": 227}, {"source": 317, "target": 227}, {"source": 318, "target": 319}, {"source": 318, "target": 320}, {"source": 318, "target": 321}, {"source": 318, "target": 322}, {"source": 318, "target": 323}, {"source": 318, "target": 324}, {"source": 318, "target": 325}, {"source": 318, "target": 326}, {"source": 318, "target": 327}, {"source": 319, "target": 227}, {"source": 320, "target": 227}, {"source": 321, "target": 227}, {"source": 322, "target": 227}, {"source": 323, "target": 227}, {"source": 324, "target": 227}, {"source": 325, "target": 227}, {"source": 326, "target": 227}, {"source": 327, "target": 227}, {"source": 328, "target": 227}, {"source": 329, "target": 227}, {"source": 330, "target": 227}, {"source": 331, "target": 227}, {"source": 332, "target": 227}, {"source": 333, "target": 227}, {"source": 334, "target": 227}, {"source": 335, "target": 227}, {"source": 336, "target": 227}, {"source": 337, "target": 227}, {"source": 338, "target": 227}, {"source": 339, "target": 227}, {"source": 340, "target": 227}, {"source": 341, "target": 227}, {"source": 342, "target": 227}, {"source": 343, "target": 227}, {"source": 344, "target": 345}, {"source": 344, "target": 346}, {"source": 344, "target": 347}, {"source": 344, "target": 348}, {"source": 344, "target": 349}, {"source": 344, "target": 350}, {"source": 344, "target": 351}, {"source": 344, "target": 352}, {"source": 344, "target": 353}, {"source": 344, "target": 354}, {"source": 344, "target": 355}, {"source": 345, "target": 227}, {"source": 346, "target": 227}, {"source": 347, "target": 227}, {"source": 348, "target": 227}, {"source": 349, "target": 227}, {"source": 350, "target": 227}, {"source": 351, "target": 227}, {"source": 352, "target": 227}, {"source": 353, "target": 227}, {"source": 354, "target": 227}, {"source": 355, "target": 227}, {"source": 356, "target": 227}, {"source": 358, "target": 227}, {"source": 359, "target": 227}, {"source": 360, "target": 227}, {"source": 361, "target": 227}, {"source": 362, "target": 227}, {"source": 363, "target": 364}, {"source": 363, "target": 365}, {"source": 363, "target": 366}, {"source": 363, "target": 367}, {"source": 363, "target": 368}, {"source": 363, "target": 369}, {"source": 363, "target": 370}, {"source": 365, "target": 227}, {"source": 368, "target": 227}, {"source": 369, "target": 227}, {"source": 370, "target": 366}, {"source": 371, "target": 360}, {"source": 371, "target": 372}, {"source": 372, "target": 227}, {"source": 373, "target": 227}, {"source": 374, "target": 227}, {"source": 375, "target": 227}, {"source": 376, "target": 377}, {"source": 377, "target": 227}, {"source": 378, "target": 227}, {"source": 380, "target": 227}, {"source": 381, "target": 232}, {"source": 381, "target": 260}, {"source": 381, "target": 382}, {"source": 381, "target": 383}, {"source": 382, "target": 227}, {"source": 383, "target": 227}, {"source": 384, "target": 227}, {"source": 385, "target": 227}, {"source": 386, "target": 227}, {"source": 387, "target": 227}, {"source": 388, "target": 227}, {"source": 389, "target": 253}, {"source": 389, "target": 334}, {"source": 389, "target": 356}, {"source": 389, "target": 390}, {"source": 389, "target": 391}, {"source": 390, "target": 227}, {"source": 391, "target": 227}, {"source": 392, "target": 227}, {"source": 393, "target": 227}, {"source": 394, "target": 227}, {"source": 395, "target": 227}, {"source": 396, "target": 227}, {"source": 397, "target": 227}, {"source": 398, "target": 227}, {"source": 399, "target": 227}, {"source": 400, "target": 227}, {"source": 401, "target": 256}, {"source": 401, "target": 274}, {"source": 401, "target": 335}, {"source": 401, "target": 340}, {"source": 401, "target": 341}, {"source": 402, "target": 403}, {"source": 402, "target": 404}, {"source": 402, "target": 405}, {"source": 402, "target": 406}, {"source": 402, "target": 407}, {"source": 402, "target": 408}, {"source": 403, "target": 227}, {"source": 404, "target": 227}, {"source": 405, "target": 379}, {"source": 405, "target": 227}, {"source": 406, "target": 227}, {"source": 407, "target": 227}, {"source": 408, "target": 227}, {"source": 409, "target": 227}, {"source": 410, "target": 227}, {"source": 411, "target": 227}, {"source": 413, "target": 227}, {"source": 416, "target": 227}, {"source": 417, "target": 415}, {"source": 417, "target": 418}, {"source": 417, "target": 419}, {"source": 417, "target": 420}, {"source": 417, "target": 421}, {"source": 417, "target": 422}, {"source": 417, "target": 423}, {"source": 417, "target": 424}, {"source": 417, "target": 425}, {"source": 417, "target": 426}, {"source": 419, "target": 429}, {"source": 419, "target": 227}, {"source": 421, "target": 227}, {"source": 422, "target": 429}, {"source": 422, "target": 227}, {"source": 423, "target": 227}, {"source": 424, "target": 429}, {"source": 424, "target": 227}, {"source": 425, "target": 429}, {"source": 425, "target": 227}, {"source": 426, "target": 227}, {"source": 427, "target": 227}, {"source": 428, "target": 227}, {"source": 429, "target": 227}, {"source": 430, "target": 227}, {"source": 431, "target": 227}, {"source": 432, "target": 227}, {"source": 433, "target": 227}, {"source": 434, "target": 435}, {"source": 434, "target": 436}, {"source": 434, "target": 437}, {"source": 434, "target": 438}, {"source": 434, "target": 439}, {"source": 435, "target": 227}, {"source": 436, "target": 227}, {"source": 437, "target": 227}, {"source": 438, "target": 227}, {"source": 439, "target": 227}, {"source": 440, "target": 227}, {"source": 441, "target": 227}, {"source": 442, "target": 227}, {"source": 444, "target": 227}, {"source": 445, "target": 413}, {"source": 445, "target": 427}, {"source": 445, "target": 428}, {"source": 445, "target": 446}, {"source": 445, "target": 432}, {"source": 445, "target": 433}, {"source": 445, "target": 440}, {"source": 445, "target": 442}, {"source": 445, "target": 444}, {"source": 445, "target": 447}, {"source": 445, "target": 448}, {"source": 445, "target": 449}, {"source": 445, "target": 450}, {"source": 445, "target": 451}, {"source": 445, "target": 452}, {"source": 445, "target": 453}, {"source": 445, "target": 454}, {"source": 445, "target": 455}, {"source": 445, "target": 456}, {"source": 445, "target": 457}, {"source": 445, "target": 458}, {"source": 445, "target": 459}, {"source": 445, "target": 460}, {"source": 445, "target": 461}, {"source": 446, "target": 227}, {"source": 447, "target": 227}, {"source": 448, "target": 227}, {"source": 449, "target": 227}, {"source": 450, "target": 227}, {"source": 452, "target": 227}, {"source": 453, "target": 227}, {"source": 454, "target": 227}, {"source": 455, "target": 227}, {"source": 456, "target": 227}, {"source": 457, "target": 227}, {"source": 459, "target": 227}, {"source": 460, "target": 227}, {"source": 462, "target": 227}, {"source": 463, "target": 227}, {"source": 464, "target": 227}, {"source": 465, "target": 227}, {"source": 466, "target": 227}, {"source": 467, "target": 228}, {"source": 467, "target": 431}, {"source": 467, "target": 468}, {"source": 467, "target": 469}, {"source": 468, "target": 227}, {"source": 469, "target": 227}, {"source": 470, "target": 227}, {"source": 472, "target": 227}, {"source": 473, "target": 230}, {"source": 473, "target": 414}, {"source": 473, "target": 416}, {"source": 473, "target": 465}, {"source": 473, "target": 470}, {"source": 473, "target": 474}, {"source": 473, "target": 475}, {"source": 474, "target": 227}, {"source": 475, "target": 227}, {"source": 476, "target": 227}, {"source": 477, "target": 227}, {"source": 478, "target": 228}, {"source": 478, "target": 229}, {"source": 478, "target": 431}, {"source": 478, "target": 441}, {"source": 478, "target": 462}, {"source": 478, "target": 463}, {"source": 478, "target": 464}, {"source": 478, "target": 466}, {"source": 478, "target": 467}, {"source": 478, "target": 472}, {"source": 478, "target": 476}, {"source": 478, "target": 468}, {"source": 478, "target": 477}, {"source": 478, "target": 479}, {"source": 478, "target": 480}, {"source": 478, "target": 469}, {"source": 479, "target": 227}, {"source": 480, "target": 227}, {"source": 481, "target": 227}, {"source": 482, "target": 483}, {"source": 482, "target": 484}, {"source": 482, "target": 485}, {"source": 482, "target": 486}, {"source": 482, "target": 487}, {"source": 482, "target": 488}, {"source": 482, "target": 489}, {"source": 483, "target": 227}, {"source": 484, "target": 227}, {"source": 486, "target": 227}, {"source": 487, "target": 227}, {"source": 488, "target": 227}, {"source": 88, "target": 490}, {"source": 94, "target": 490}, {"source": 97, "target": 490}, {"source": 102, "target": 490}, {"source": 103, "target": 490}, {"source": 109, "target": 490}, {"source": 111, "target": 490}, {"source": 112, "target": 533}, {"source": 112, "target": 490}, {"source": 113, "target": 533}, {"source": 113, "target": 490}, {"source": 114, "target": 490}, {"source": 115, "target": 490}, {"source": 116, "target": 490}, {"source": 117, "target": 490}, {"source": 119, "target": 490}, {"source": 120, "target": 490}, {"source": 121, "target": 490}, {"source": 122, "target": 490}, {"source": 123, "target": 533}, {"source": 123, "target": 490}, {"source": 124, "target": 490}, {"source": 125, "target": 490}, {"source": 126, "target": 490}, {"source": 128, "target": 533}, {"source": 128, "target": 490}, {"source": 129, "target": 490}, {"source": 130, "target": 490}, {"source": 131, "target": 490}, {"source": 134, "target": 490}, {"source": 135, "target": 490}, {"source": 136, "target": 490}, {"source": 138, "target": 490}, {"source": 139, "target": 490}, {"source": 140, "target": 490}, {"source": 141, "target": 490}, {"source": 142, "target": 490}, {"source": 143, "target": 490}, {"source": 144, "target": 490}, {"source": 145, "target": 490}, {"source": 146, "target": 490}, {"source": 148, "target": 490}, {"source": 149, "target": 490}, {"source": 150, "target": 490}, {"source": 151, "target": 533}, {"source": 151, "target": 490}, {"source": 152, "target": 490}, {"source": 153, "target": 490}, {"source": 154, "target": 490}, {"source": 155, "target": 490}, {"source": 156, "target": 490}, {"source": 160, "target": 490}, {"source": 161, "target": 490}, {"source": 162, "target": 490}, {"source": 163, "target": 490}, {"source": 164, "target": 490}, {"source": 166, "target": 490}, {"source": 167, "target": 490}, {"source": 168, "target": 490}, {"source": 169, "target": 490}, {"source": 170, "target": 490}, {"source": 171, "target": 490}, {"source": 172, "target": 490}, {"source": 173, "target": 490}, {"source": 174, "target": 533}, {"source": 174, "target": 490}, {"source": 175, "target": 490}, {"source": 490, "target": 491}, {"source": 490, "target": 492}, {"source": 490, "target": 493}, {"source": 490, "target": 494}, {"source": 490, "target": 496}, {"source": 490, "target": 497}, {"source": 490, "target": 498}, {"source": 490, "target": 499}, {"source": 490, "target": 502}, {"source": 490, "target": 503}, {"source": 490, "target": 504}, {"source": 490, "target": 508}, {"source": 490, "target": 529}, {"source": 490, "target": 533}, {"source": 490, "target": 536}, {"source": 490, "target": 545}, {"source": 490, "target": 556}, {"source": 490, "target": 557}, {"source": 490, "target": 563}, {"source": 494, "target": 495}, {"source": 498, "target": 490}, {"source": 499, "target": 500}, {"source": 499, "target": 501}, {"source": 504, "target": 505}, {"source": 504, "target": 506}, {"source": 504, "target": 507}, {"source": 505, "target": 506}, {"source": 508, "target": 509}, {"source": 508, "target": 510}, {"source": 508, "target": 511}, {"source": 508, "target": 512}, {"source": 508, "target": 513}, {"source": 508, "target": 514}, {"source": 508, "target": 503}, {"source": 508, "target": 515}, {"source": 508, "target": 516}, {"source": 508, "target": 517}, {"source": 508, "target": 518}, {"source": 508, "target": 519}, {"source": 508, "target": 520}, {"source": 508, "target": 521}, {"source": 508, "target": 522}, {"source": 508, "target": 503}, {"source": 508, "target": 523}, {"source": 508, "target": 524}, {"source": 508, "target": 525}, {"source": 508, "target": 526}, {"source": 508, "target": 527}, {"source": 508, "target": 528}, {"source": 510, "target": 490}, {"source": 512, "target": 490}, {"source": 513, "target": 490}, {"source": 515, "target": 490}, {"source": 516, "target": 490}, {"source": 517, "target": 490}, {"source": 518, "target": 494}, {"source": 520, "target": 516}, {"source": 520, "target": 490}, {"source": 521, "target": 515}, {"source": 521, "target": 490}, {"source": 524, "target": 490}, {"source": 528, "target": 490}, {"source": 529, "target": 530}, {"source": 529, "target": 531}, {"source": 529, "target": 532}, {"source": 532, "target": 530}, {"source": 533, "target": 534}, {"source": 533, "target": 535}, {"source": 534, "target": 490}, {"source": 535, "target": 534}, {"source": 535, "target": 490}, {"source": 536, "target": 537}, {"source": 536, "target": 538}, {"source": 536, "target": 539}, {"source": 536, "target": 540}, {"source": 536, "target": 541}, {"source": 536, "target": 542}, {"source": 536, "target": 543}, {"source": 536, "target": 544}, {"source": 537, "target": 490}, {"source": 537, "target": 544}, {"source": 538, "target": 529}, {"source": 538, "target": 490}, {"source": 538, "target": 544}, {"source": 539, "target": 529}, {"source": 539, "target": 490}, {"source": 539, "target": 544}, {"source": 540, "target": 529}, {"source": 540, "target": 490}, {"source": 540, "target": 544}, {"source": 541, "target": 529}, {"source": 541, "target": 490}, {"source": 541, "target": 544}, {"source": 542, "target": 529}, {"source": 542, "target": 490}, {"source": 542, "target": 544}, {"source": 543, "target": 529}, {"source": 543, "target": 490}, {"source": 543, "target": 544}, {"source": 544, "target": 490}, {"source": 545, "target": 546}, {"source": 545, "target": 547}, {"source": 545, "target": 548}, {"source": 545, "target": 549}, {"source": 545, "target": 550}, {"source": 545, "target": 551}, {"source": 545, "target": 552}, {"source": 545, "target": 553}, {"source": 545, "target": 554}, {"source": 545, "target": 555}, {"source": 546, "target": 490}, {"source": 547, "target": 490}, {"source": 548, "target": 490}, {"source": 549, "target": 490}, {"source": 550, "target": 490}, {"source": 551, "target": 490}, {"source": 553, "target": 490}, {"source": 554, "target": 490}, {"source": 555, "target": 490}, {"source": 557, "target": 558}, {"source": 557, "target": 559}, {"source": 557, "target": 560}, {"source": 558, "target": 559}, {"source": 558, "target": 560}, {"source": 558, "target": 561}, {"source": 558, "target": 562}, {"source": 561, "target": 490}, {"source": 562, "target": 490}, {"source": 562, "target": 490}, {"source": 564, "target": 565}, {"source": 564, "target": 566}, {"source": 568, "target": 569}, {"source": 568, "target": 570}, {"source": 568, "target": 571}, {"source": 568, "target": 572}, {"source": 568, "target": 573}, {"source": 568, "target": 574}, {"source": 571, "target": 573}, {"source": 575, "target": 576}, {"source": 575, "target": 577}, {"source": 575, "target": 578}, {"source": 575, "target": 579}, {"source": 575, "target": 580}, {"source": 575, "target": 581}, {"source": 589, "target": 590}, {"source": 589, "target": 592}, {"source": 589, "target": 598}, {"source": 589, "target": 603}, {"source": 589, "target": 609}, {"source": 589, "target": 641}, {"source": 589, "target": 620}, {"source": 589, "target": 644}, {"source": 589, "target": 648}, {"source": 589, "target": 676}, {"source": 589, "target": 687}, {"source": 589, "target": 696}, {"source": 589, "target": 700}, {"source": 589, "target": 703}, {"source": 589, "target": 741}, {"source": 589, "target": 746}, {"source": 589, "target": 754}, {"source": 589, "target": 756}, {"source": 589, "target": 763}, {"source": 589, "target": 855}, {"source": 589, "target": 876}, {"source": 589, "target": 877}, {"source": 589, "target": 888}, {"source": 589, "target": 905}, {"source": 589, "target": 916}, {"source": 589, "target": 927}, {"source": 590, "target": 591}, {"source": 592, "target": 593}, {"source": 592, "target": 594}, {"source": 592, "target": 595}, {"source": 592, "target": 596}, {"source": 596, "target": 597}, {"source": 598, "target": 599}, {"source": 598, "target": 600}, {"source": 598, "target": 601}, {"source": 598, "target": 602}, {"source": 603, "target": 604}, {"source": 603, "target": 605}, {"source": 603, "target": 606}, {"source": 603, "target": 607}, {"source": 603, "target": 608}, {"source": 609, "target": 610}, {"source": 609, "target": 611}, {"source": 609, "target": 612}, {"source": 609, "target": 613}, {"source": 609, "target": 614}, {"source": 609, "target": 615}, {"source": 609, "target": 616}, {"source": 609, "target": 617}, {"source": 609, "target": 618}, {"source": 609, "target": 619}, {"source": 609, "target": 620}, {"source": 609, "target": 621}, {"source": 609, "target": 622}, {"source": 609, "target": 623}, {"source": 609, "target": 624}, {"source": 609, "target": 625}, {"source": 609, "target": 626}, {"source": 609, "target": 627}, {"source": 609, "target": 628}, {"source": 609, "target": 629}, {"source": 609, "target": 630}, {"source": 609, "target": 631}, {"source": 609, "target": 632}, {"source": 609, "target": 633}, {"source": 609, "target": 634}, {"source": 609, "target": 635}, {"source": 609, "target": 636}, {"source": 609, "target": 637}, {"source": 609, "target": 638}, {"source": 609, "target": 639}, {"source": 609, "target": 640}, {"source": 641, "target": 642}, {"source": 641, "target": 643}, {"source": 644, "target": 645}, {"source": 644, "target": 646}, {"source": 644, "target": 647}, {"source": 648, "target": 649}, {"source": 648, "target": 652}, {"source": 648, "target": 661}, {"source": 649, "target": 650}, {"source": 649, "target": 651}, {"source": 652, "target": 653}, {"source": 652, "target": 654}, {"source": 652, "target": 655}, {"source": 652, "target": 656}, {"source": 652, "target": 657}, {"source": 652, "target": 658}, {"source": 652, "target": 659}, {"source": 652, "target": 660}, {"source": 661, "target": 662}, {"source": 661, "target": 663}, {"source": 661, "target": 664}, {"source": 661, "target": 665}, {"source": 661, "target": 666}, {"source": 661, "target": 667}, {"source": 661, "target": 668}, {"source": 661, "target": 669}, {"source": 661, "target": 670}, {"source": 661, "target": 671}, {"source": 661, "target": 672}, {"source": 661, "target": 673}, {"source": 661, "target": 674}, {"source": 661, "target": 675}, {"source": 676, "target": 677}, {"source": 676, "target": 678}, {"source": 676, "target": 679}, {"source": 676, "target": 680}, {"source": 676, "target": 681}, {"source": 676, "target": 682}, {"source": 676, "target": 683}, {"source": 676, "target": 684}, {"source": 676, "target": 685}, {"source": 676, "target": 686}, {"source": 687, "target": 688}, {"source": 687, "target": 689}, {"source": 687, "target": 690}, {"source": 687, "target": 691}, {"source": 687, "target": 692}, {"source": 687, "target": 693}, {"source": 687, "target": 694}, {"source": 687, "target": 695}, {"source": 694, "target": 690}, {"source": 696, "target": 697}, {"source": 696, "target": 698}, {"source": 696, "target": 699}, {"source": 700, "target": 701}, {"source": 700, "target": 702}, {"source": 703, "target": 704}, {"source": 703, "target": 705}, {"source": 703, "target": 706}, {"source": 703, "target": 707}, {"source": 703, "target": 708}, {"source": 703, "target": 709}, {"source": 703, "target": 730}, {"source": 703, "target": 731}, {"source": 703, "target": 732}, {"source": 703, "target": 733}, {"source": 703, "target": 734}, {"source": 703, "target": 735}, {"source": 703, "target": 736}, {"source": 703, "target": 737}, {"source": 703, "target": 738}, {"source": 703, "target": 739}, {"source": 703, "target": 740}, {"source": 709, "target": 710}, {"source": 709, "target": 711}, {"source": 709, "target": 712}, {"source": 709, "target": 713}, {"source": 709, "target": 714}, {"source": 709, "target": 715}, {"source": 709, "target": 716}, {"source": 709, "target": 717}, {"source": 709, "target": 718}, {"source": 709, "target": 719}, {"source": 709, "target": 720}, {"source": 709, "target": 721}, {"source": 709, "target": 722}, {"source": 709, "target": 723}, {"source": 709, "target": 724}, {"source": 709, "target": 725}, {"source": 709, "target": 726}, {"source": 709, "target": 727}, {"source": 709, "target": 728}, {"source": 709, "target": 729}, {"source": 741, "target": 742}, {"source": 741, "target": 743}, {"source": 741, "target": 744}, {"source": 741, "target": 745}, {"source": 746, "target": 747}, {"source": 746, "target": 748}, {"source": 746, "target": 749}, {"source": 746, "target": 750}, {"source": 746, "target": 751}, {"source": 746, "target": 752}, {"source": 746, "target": 753}, {"source": 754, "target": 755}, {"source": 756, "target": 757}, {"source": 756, "target": 758}, {"source": 756, "target": 762}, {"source": 758, "target": 759}, {"source": 758, "target": 760}, {"source": 758, "target": 761}, {"source": 763, "target": 764}, {"source": 763, "target": 769}, {"source": 763, "target": 770}, {"source": 763, "target": 771}, {"source": 763, "target": 772}, {"source": 763, "target": 773}, {"source": 763, "target": 774}, {"source": 763, "target": 775}, {"source": 763, "target": 776}, {"source": 763, "target": 805}, {"source": 763, "target": 806}, {"source": 763, "target": 807}, {"source": 763, "target": 808}, {"source": 763, "target": 809}, {"source": 763, "target": 810}, {"source": 763, "target": 811}, {"source": 763, "target": 812}, {"source": 763, "target": 824}, {"source": 763, "target": 825}, {"source": 763, "target": 835}, {"source": 763, "target": 836}, {"source": 763, "target": 837}, {"source": 763, "target": 838}, {"source": 763, "target": 839}, {"source": 763, "target": 840}, {"source": 763, "target": 841}, {"source": 763, "target": 842}, {"source": 763, "target": 843}, {"source": 763, "target": 844}, {"source": 763, "target": 845}, {"source": 763, "target": 846}, {"source": 763, "target": 847}, {"source": 763, "target": 848}, {"source": 763, "target": 849}, {"source": 763, "target": 850}, {"source": 763, "target": 851}, {"source": 763, "target": 852}, {"source": 763, "target": 853}, {"source": 763, "target": 854}, {"source": 764, "target": 765}, {"source": 764, "target": 766}, {"source": 764, "target": 767}, {"source": 764, "target": 768}, {"source": 776, "target": 777}, {"source": 776, "target": 778}, {"source": 776, "target": 779}, {"source": 776, "target": 780}, {"source": 776, "target": 781}, {"source": 776, "target": 782}, {"source": 776, "target": 783}, {"source": 776, "target": 784}, {"source": 776, "target": 785}, {"source": 776, "target": 786}, {"source": 776, "target": 787}, {"source": 776, "target": 788}, {"source": 776, "target": 789}, {"source": 776, "target": 790}, {"source": 776, "target": 791}, {"source": 776, "target": 792}, {"source": 776, "target": 793}, {"source": 776, "target": 794}, {"source": 776, "target": 795}, {"source": 776, "target": 796}, {"source": 776, "target": 797}, {"source": 776, "target": 798}, {"source": 776, "target": 799}, {"source": 776, "target": 800}, {"source": 776, "target": 801}, {"source": 776, "target": 802}, {"source": 776, "target": 803}, {"source": 776, "target": 804}, {"source": 812, "target": 813}, {"source": 812, "target": 814}, {"source": 812, "target": 815}, {"source": 812, "target": 816}, {"source": 812, "target": 817}, {"source": 812, "target": 818}, {"source": 812, "target": 819}, {"source": 812, "target": 820}, {"source": 812, "target": 821}, {"source": 812, "target": 822}, {"source": 812, "target": 823}, {"source": 825, "target": 826}, {"source": 825, "target": 827}, {"source": 825, "target": 828}, {"source": 825, "target": 829}, {"source": 825, "target": 830}, {"source": 825, "target": 831}, {"source": 825, "target": 832}, {"source": 825, "target": 833}, {"source": 825, "target": 834}, {"source": 842, "target": 589}, {"source": 845, "target": 842}, {"source": 845, "target": 589}, {"source": 855, "target": 856}, {"source": 855, "target": 857}, {"source": 855, "target": 858}, {"source": 855, "target": 859}, {"source": 855, "target": 860}, {"source": 855, "target": 861}, {"source": 855, "target": 862}, {"source": 855, "target": 863}, {"source": 855, "target": 864}, {"source": 855, "target": 865}, {"source": 855, "target": 866}, {"source": 855, "target": 867}, {"source": 855, "target": 868}, {"source": 855, "target": 869}, {"source": 855, "target": 870}, {"source": 855, "target": 871}, {"source": 855, "target": 872}, {"source": 855, "target": 873}, {"source": 855, "target": 874}, {"source": 855, "target": 875}, {"source": 864, "target": 589}, {"source": 872, "target": 589}, {"source": 877, "target": 878}, {"source": 877, "target": 879}, {"source": 877, "target": 880}, {"source": 877, "target": 881}, {"source": 877, "target": 885}, {"source": 877, "target": 886}, {"source": 877, "target": 887}, {"source": 881, "target": 882}, {"source": 881, "target": 883}, {"source": 881, "target": 884}, {"source": 888, "target": 889}, {"source": 888, "target": 890}, {"source": 888, "target": 891}, {"source": 888, "target": 892}, {"source": 888, "target": 901}, {"source": 888, "target": 902}, {"source": 888, "target": 903}, {"source": 888, "target": 904}, {"source": 892, "target": 893}, {"source": 892, "target": 894}, {"source": 892, "target": 895}, {"source": 892, "target": 896}, {"source": 892, "target": 897}, {"source": 892, "target": 898}, {"source": 892, "target": 899}, {"source": 892, "target": 900}, {"source": 905, "target": 906}, {"source": 905, "target": 910}, {"source": 905, "target": 911}, {"source": 905, "target": 912}, {"source": 905, "target": 913}, {"source": 905, "target": 914}, {"source": 905, "target": 915}, {"source": 906, "target": 907}, {"source": 906, "target": 908}, {"source": 906, "target": 909}, {"source": 912, "target": 911}, {"source": 914, "target": 906}, {"source": 916, "target": 917}, {"source": 916, "target": 924}, {"source": 916, "target": 925}, {"source": 916, "target": 926}, {"source": 917, "target": 918}, {"source": 917, "target": 919}, {"source": 917, "target": 920}, {"source": 917, "target": 921}, {"source": 917, "target": 922}, {"source": 917, "target": 923}, {"source": 927, "target": 928}, {"source": 927, "target": 929}, {"source": 927, "target": 930}, {"source": 927, "target": 931}, {"source": 927, "target": 932}, {"source": 927, "target": 933}, {"source": 927, "target": 934}, {"source": 927, "target": 935}, {"source": 927, "target": 936}, {"source": 927, "target": 937}, {"source": 927, "target": 938}]}