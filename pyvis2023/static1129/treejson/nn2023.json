{"name": "nn", "children": [{"name": "backends", "children": [{"name": "thnn.py", "value": 122, "in_classes": [], "out_classes": [], "in_function": ["_get_thnn_function_backend"]}, {"name": "__init__.py", "value": 0}]}, {"name": "common_types.py", "value": 1883, "in_classes": [], "out_classes": ["torch", "typing"], "in_function": []}, {"name": "cpp.py", "value": 3113, "in_classes": ["ModuleWrapper", "OrderedDictWrapper"], "out_classes": [], "in_function": []}, {"name": "functional.py", "value": 217022, "in_classes": [], "out_classes": ["builtins", "torch"], "in_function": ["_adaptive_max_pool1d", "_adaptive_max_pool2d", "_adaptive_max_pool3d", "_fractional_max_pool2d", "_fractional_max_pool3d", "_get_softmax_dim", "_in_projection", "_in_projection_packed", "_list_with_default", "_max_pool1d", "_max_pool2d", "_max_pool3d", "_mha_shape_check", "_no_grad_embedding_renorm_", "_overload", "_pair", "_scaled_dot_product_attention", "_single", "_threshold", "_triple", "_unpool_output_size", "_verify_batch_size", "_verify_spatial_size", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "adaptive_max_pool1d", "adaptive_max_pool1d_with_indices", "adaptive_max_pool2d", "adaptive_max_pool2d_with_indices", "adaptive_max_pool3d", "adaptive_max_pool3d_with_indices", "affine_grid", "alpha_dropout", "assert_int_or_pair", "batch_norm", "binary_cross_entropy", "binary_cross_entropy_with_logits", "boolean_dispatch", "celu", "cosine_embedding_loss", "cross_entropy", "ctc_loss", "dropout", "dropout1d", "dropout2d", "dropout3d", "elu", "embedding", "embedding_bag", "feature_alpha_dropout", "fold", "fractional_max_pool2d", "fractional_max_pool2d_with_indices", "fractional_max_pool3d", "fractional_max_pool3d_with_indices", "gaussian_nll_loss", "glu", "grid_sample", "group_norm", "gumbel_softmax", "handle_torch_function", "hardsigmoid", "hardswish", "hardtanh", "hinge_embedding_loss", "huber_loss", "instance_norm", "interpolate", "kl_div", "l1_loss", "layer_norm", "leaky_relu", "local_response_norm", "log_softmax", "lp_pool1d", "lp_pool2d", "margin_ranking_loss", "max_pool1d", "max_pool1d_with_indices", "max_pool2d", "max_pool2d_with_indices", "max_pool3d", "max_pool3d_with_indices", "max_unpool1d", "max_unpool2d", "max_unpool3d", "mish", "mse_loss", "multi_head_attention_forward", "multi_margin_loss", "multilabel_margin_loss", "multilabel_soft_margin_loss", "nll_loss", "normalize", "poisson_nll_loss", "relu", "relu6", "rrelu", "selu", "sigmoid", "silu", "smooth_l1_loss", "soft_margin_loss", "softmax", "softmin", "softsign", "tanh", "tanhshrink", "_threshold", "triplet_margin_loss", "triplet_margin_with_distance_loss", "unfold", "upsample", "upsample_bilinear", "upsample_nearest"]}, {"name": "functional.pyi", "value": 18665}, {"name": "grad.py", "value": 14293, "in_classes": [], "out_classes": [], "in_function": ["_grad_input_padding", "_pair", "_single", "_triple", "conv1d_input", "conv1d_weight", "conv2d_input", "conv2d_weight", "conv3d_input", "conv3d_weight"]}, {"name": "init.py", "value": 20757, "in_classes": [], "out_classes": ["torch"], "in_function": ["_calculate_correct_fan", "_calculate_fan_in_and_fan_out", "_make_deprecate", "_no_grad_fill_", "_no_grad_normal_", "_no_grad_trunc_normal_", "_no_grad_uniform_", "_no_grad_zero_", "calculate_gain", "constant", "constant_", "dirac", "dirac_", "eye", "eye_", "kaiming_normal", "kaiming_normal_", "kaiming_uniform", "kaiming_uniform_", "normal", "normal_", "ones_", "orthogonal", "orthogonal_", "sparse", "sparse_", "trunc_normal_", "uniform", "uniform_", "xavier_normal", "xavier_normal_", "xavier_uniform", "xavier_uniform_", "zeros_"]}, {"name": "intrinsic", "children": [{"name": "modules", "children": [{"name": "fused.py", "value": 7753, "in_classes": ["BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU", "_FusedModule"], "out_classes": ["torch.nn.modules.batchnorm", "torch.nn.modules.batchnorm", "torch.nn.modules.batchnorm", "torch.nn.modules.conv", "torch.nn.modules.conv", "torch.nn.modules.conv", "torch.nn.modules.linear", "torch.nn.modules.activation"], "in_function": ["type_before_parametrizations"]}, {"name": "__init__.py", "value": 716}]}, {"name": "qat", "children": [{"name": "modules", "children": [{"name": "conv_fused.py", "value": 25922, "in_classes": ["ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "_ConvBnNd"], "out_classes": ["torch.nn.parameter", "typing"], "in_function": ["_pair", "_single", "_triple", "freeze_bn_stats", "fuse_conv_bn_weights", "update_bn_stats"]}, {"name": "linear_fused.py", "value": 6356, "in_classes": ["LinearBn1d"], "out_classes": ["torch.nn.parameter"], "in_function": ["fuse_linear_bn_weights"]}, {"name": "linear_relu.py", "value": 1598, "in_classes": ["LinearReLU"], "out_classes": [], "in_function": []}, {"name": "__init__.py", "value": 577}]}, {"name": "__init__.py", "value": 38}]}, {"name": "quantized", "children": [{"name": "dynamic", "children": [{"name": "modules", "children": [{"name": "linear_relu.py", "value": 1831, "in_classes": ["LinearReLU"], "out_classes": [], "in_function": []}, {"name": "__init__.py", "value": 88}]}, {"name": "__init__.py", "value": 38}]}, {"name": "modules", "children": [{"name": "bn_relu.py", "value": 2841, "in_classes": ["BNReLU2d", "BNReLU3d"], "out_classes": [], "in_function": []}, {"name": "conv_relu.py", "value": 7153, "in_classes": ["ConvReLU1d", "ConvReLU2d", "ConvReLU3d"], "out_classes": [], "in_function": ["_reverse_repeat_padding", "fuse_conv_bn_weights"]}, {"name": "linear_relu.py", "value": 1276, "in_classes": ["LinearReLU"], "out_classes": [], "in_function": []}, {"name": "__init__.py", "value": 265}]}, {"name": "__init__.py", "value": 38}]}, {"name": "__init__.py", "value": 38}]}, {"name": "modules", "children": [{"name": "activation.py", "value": 51892, "in_classes": ["CELU", "ELU", "GELU", "GLU", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "LeakyReLU", "LogSigmoid", "LogSoftmax", "Mish", "MultiheadAttention", "PReLU", "RReLU", "ReLU", "ReLU6", "SELU", "SiLU", "Sigmoid", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "Tanh", "Tanhshrink", "Threshold"], "out_classes": ["torch.nn.modules.module", "torch.nn.modules.linear", "torch.nn.parameter", "torch"], "in_function": ["constant_", "xavier_normal_", "xavier_uniform_"]}, {"name": "adaptive.py", "value": 12408, "in_classes": ["AdaptiveLogSoftmaxWithLoss", "_ASMoutput"], "out_classes": ["torch.nn.modules.linear", "torch.nn.modules.module", "torch.nn.modules.container", "torch.nn.modules.container", "torch"], "in_function": ["log_softmax", "namedtuple"]}, {"name": "batchnorm.py", "value": 37302, "in_classes": ["BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "SyncBatchNorm", "_BatchNorm", "_LazyNormBase", "_NormBase"], "out_classes": ["torch.nn.modules.lazy", "torch.nn.modules.module", "torch.nn.parameter", "torch", "torch.nn.parameter", "torch.nn.parameter", "torch.nn.modules._functions"], "in_function": []}, {"name": "channelshuffle.py", "value": 1347, "in_classes": ["ChannelShuffle"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "container.py", "value": 30472, "in_classes": ["Container", "ModuleDict", "ModuleList", "ParameterDict", "ParameterList", "Sequential"], "out_classes": ["torch.nn.modules.module", "collections", "torch.nn.parameter", "typing", "itertools", "itertools"], "in_function": ["_copy_to_script_wrapper", "overload"]}, {"name": "conv.py", "value": 74040, "in_classes": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "_ConvNd", "_ConvTransposeMixin", "_ConvTransposeNd", "_LazyConvXdMixin"], "out_classes": ["torch.nn.modules.lazy", "torch.nn.modules.module", "torch.nn.parameter", "torch", "torch.nn.parameter"], "in_function": ["_pair", "_reverse_repeat_tuple", "_single", "_triple"]}, {"name": "distance.py", "value": 2980, "in_classes": ["CosineSimilarity", "PairwiseDistance"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "dropout.py", "value": 11288, "in_classes": ["AlphaDropout", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "FeatureAlphaDropout", "_DropoutNd"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "flatten.py", "value": 5570, "in_classes": ["Flatten", "Unflatten"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "fold.py", "value": 12984, "in_classes": ["Fold", "Unfold"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "instancenorm.py", "value": 19642, "in_classes": ["InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "_InstanceNorm"], "out_classes": ["torch", "torch.nn.modules.batchnorm", "torch.nn.modules.batchnorm"], "in_function": []}, {"name": "lazy.py", "value": 11808, "in_classes": ["LazyModuleMixin", "_LazyProtocol"], "out_classes": ["typing_extensions"], "in_function": ["is_lazy"]}, {"name": "linear.py", "value": 10865, "in_classes": ["Bilinear", "Identity", "LazyLinear", "Linear", "NonDynamicallyQuantizableLinear"], "out_classes": ["torch.nn.modules.lazy", "torch.nn.modules.module", "torch.nn.parameter", "torch", "torch.nn.parameter"], "in_function": []}, {"name": "loss.py", "value": 91228, "in_classes": ["BCELoss", "BCEWithLogitsLoss", "CTCLoss", "CosineEmbeddingLoss", "CrossEntropyLoss", "GaussianNLLLoss", "HingeEmbeddingLoss", "HuberLoss", "KLDivLoss", "L1Loss", "MSELoss", "MarginRankingLoss", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "NLLLoss", "NLLLoss2d", "PoissonNLLLoss", "SmoothL1Loss", "SoftMarginLoss", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "_Loss", "_WeightedLoss"], "out_classes": ["torch.nn.modules.module", "torch.nn.modules.distance", "torch"], "in_function": []}, {"name": "module.py", "value": 86085, "in_classes": ["Module", "_IncompatibleKeys"], "out_classes": ["collections", "torch.nn.parameter", "torch.utils.hooks", "torch", "typing", "torch", "torch"], "in_function": ["_addindent", "_forward_unimplemented", "namedtuple", "overload", "register_module_backward_hook", "register_module_forward_hook", "register_module_forward_pre_hook", "register_module_full_backward_hook"]}, {"name": "normalization.py", "value": 11219, "in_classes": ["CrossMapLRN2d", "GroupNorm", "LayerNorm", "LocalResponseNorm"], "out_classes": ["torch.nn.modules.module", "torch.nn.parameter", "torch", "torch", "torch.nn.modules._functions"], "in_function": []}, {"name": "padding.py", "value": 20011, "in_classes": ["ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "ZeroPad2d", "_ConstantPadNd", "_ReflectionPadNd", "_ReplicationPadNd"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": ["_ntuple", "_pair", "_quadruple"]}, {"name": "pixelshuffle.py", "value": 3679, "in_classes": ["PixelShuffle", "PixelUnshuffle"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "pooling.py", "value": 54293, "in_classes": ["AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AvgPool1d", "AvgPool2d", "AvgPool3d", "FractionalMaxPool2d", "FractionalMaxPool3d", "LPPool1d", "LPPool2d", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "_AdaptiveAvgPoolNd", "_AdaptiveMaxPoolNd", "_AvgPoolNd", "_LPPoolNd", "_MaxPoolNd", "_MaxUnpoolNd"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": ["_pair", "_single", "_triple"]}, {"name": "rnn.py", "value": 61920, "in_classes": ["GRU", "GRUCell", "LSTM", "LSTMCell", "RNN", "RNNBase", "RNNCell", "RNNCellBase"], "out_classes": ["torch.nn.modules.module", "torch.nn.utils.rnn", "torch.nn.parameter", "torch"], "in_function": ["apply_permutation", "overload"]}, {"name": "sparse.py", "value": 23462, "in_classes": ["Embedding", "EmbeddingBag"], "out_classes": ["torch.nn.modules.module", "torch.nn.parameter", "torch"], "in_function": []}, {"name": "transformer.py", "value": 31395, "in_classes": ["Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer"], "out_classes": ["torch.nn.modules.dropout", "torch.nn.modules.normalization", "torch.nn.modules.linear", "torch.nn.modules.module", "torch.nn.modules.container", "torch.nn.modules.activation", "torch"], "in_function": ["_get_activation_fn", "_get_clones", "xavier_uniform_"]}, {"name": "upsampling.py", "value": 11309, "in_classes": ["Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d"], "out_classes": ["torch.nn.modules.module", "torch"], "in_function": []}, {"name": "utils.py", "value": 2411, "in_classes": [], "out_classes": ["itertools"], "in_function": ["_list_with_default", "_ntuple", "_pair", "_quadruple", "_reverse_repeat_tuple", "_single", "_triple", "consume_prefix_in_state_dict_if_present"]}, {"name": "_functions.py", "value": 11413}, {"name": "__init__.py", "value": 5239}]}, {"name": "parallel", "children": [{"name": "comm.py", "value": 11029, "in_classes": [], "out_classes": [], "in_function": ["_flatten_dense_tensors", "_get_device_index", "_handle_complex", "_reorder_tensors_as", "_take_tensors", "_unflatten_dense_tensors", "broadcast", "broadcast_coalesced", "gather", "reduce_add", "reduce_add_coalesced", "scatter"]}, {"name": "common_types.pyi", "value": 128}, {"name": "data_parallel.py", "value": 10572, "in_classes": [], "out_classes": ["builtins"], "in_function": []}, {"name": "data_parallel.pyi", "value": 736}, {"name": "distributed.py", "value": 81212, "in_classes": ["DistributedDataParallel", "_BufferCommHook", "_BufferCommHookLocation", "_DDPJoinHook", "_DDPSink"], "out_classes": ["enum", "torch.autograd.function", "torch.distributed.algorithms.join", "torch.distributed.algorithms.join", "torch.distributed.algorithms.join", "torch.nn.modules.module", "torch._C._distributed_c10d", "torch.autograd.variable", "enum"], "in_function": ["_ddp_with_replicated_tensor_enabled", "_dump_DDP_relevant_env_vars", "_find_tensors", "_get_default_group", "_get_device_index", "_sync_module_states", "_to_kwargs", "_tree_flatten_with_rref", "_tree_unflatten_with_rref", "_verify_param_shape_across_processes", "contextmanager", "dataclass", "gather", "is_namedtuple", "scatter_kwargs", "tree_flatten", "tree_unflatten"]}, {"name": "distributed.pyi", "value": 881}, {"name": "parallel_apply.py", "value": 3304, "in_classes": [], "out_classes": ["builtins"], "in_function": []}, {"name": "parallel_apply.pyi", "value": 300}, {"name": "replicate.py", "value": 6174, "in_classes": [], "out_classes": ["builtins"], "in_function": []}, {"name": "replicate.pyi", "value": 252}, {"name": "scatter_gather.py", "value": 3217, "in_classes": [], "out_classes": ["torch.nn.parallel._functions", "torch.nn.parallel._functions"], "in_function": ["gather", "is_namedtuple", "scatter", "scatter_kwargs"]}, {"name": "scatter_gather.pyi", "value": 1013}, {"name": "_functions.py", "value": 4788}, {"name": "_replicated_tensor_ddp_interop.py", "value": 1882}, {"name": "_replicated_tensor_ddp_utils.py", "value": 1069}, {"name": "__init__.py", "value": 659}, {"name": "__init__.pyi", "value": 341}]}, {"name": "parameter.py", "value": 8958, "in_classes": ["Parameter", "UninitializedBuffer", "UninitializedParameter", "UninitializedTensorMixin", "_ParameterMeta"], "out_classes": ["collections"], "in_function": ["is_lazy"]}, {"name": "parameter.pyi", "value": 772}, {"name": "qat", "children": [{"name": "dynamic", "children": [{"name": "modules", "children": [{"name": "linear.py", "value": 962, "in_classes": ["Linear"], "out_classes": [], "in_function": ["activation_is_memoryless"]}, {"name": "__init__.py", "value": 52}]}, {"name": "__init__.py", "value": 38}]}, {"name": "modules", "children": [{"name": "conv.py", "value": 9629, "in_classes": ["Conv1d", "Conv2d", "Conv3d", "_ConvNd"], "out_classes": ["typing", "torch.nn.intrinsic.modules.fused"], "in_function": ["_pair", "_single", "_triple"]}, {"name": "embedding_ops.py", "value": 7158, "in_classes": ["Embedding", "EmbeddingBag"], "out_classes": ["torch"], "in_function": []}, {"name": "linear.py", "value": 2920, "in_classes": ["Linear"], "out_classes": ["torch.nn.intrinsic.modules.fused"], "in_function": ["is_parametrized", "transfer_parametrizations_and_params", "type_before_parametrizations"]}, {"name": "__init__.py", "value": 275}]}, {"name": "__init__.py", "value": 38}]}, {"name": "quantizable", "children": [{"name": "modules", "children": [{"name": "activation.py", "value": 23741, "in_classes": ["MultiheadAttention"], "out_classes": ["torch"], "in_function": []}, {"name": "rnn.py", "value": 16190, "in_classes": ["LSTM", "LSTMCell", "_LSTMLayer", "_LSTMSingleLayer"], "out_classes": ["torch"], "in_function": []}, {"name": "__init__.py", "value": 169}]}, {"name": "__init__.py", "value": 38}]}, {"name": "quantized", "children": [{"name": "dynamic", "children": [{"name": "modules", "children": [{"name": "conv.py", "value": 17218, "in_classes": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d"], "out_classes": ["torch"], "in_function": ["_pair", "_reverse_repeat_padding", "_single", "_triple"]}, {"name": "linear.py", "value": 6112, "in_classes": ["Linear"], "out_classes": [], "in_function": ["_quantize_weight"]}, {"name": "rnn.py", "value": 47962, "in_classes": ["GRU", "GRUCell", "LSTM", "LSTMCell", "PackedParameter", "RNNBase", "RNNCell", "RNNCellBase"], "out_classes": ["torch.nn.utils.rnn", "torch"], "in_function": ["_quantize_weight", "apply_permutation", "pack_weight_bias"]}, {"name": "__init__.py", "value": 403}]}, {"name": "__init__.py", "value": 38}]}, {"name": "functional.py", "value": 29277, "in_classes": [], "out_classes": ["torch"], "in_function": ["_pair", "parse", "_triple", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest"]}, {"name": "modules", "children": [{"name": "activation.py", "value": 6650, "in_classes": ["ELU", "Hardswish", "LeakyReLU", "ReLU6", "Sigmoid", "Softmax"], "out_classes": [], "in_function": []}, {"name": "batchnorm.py", "value": 4001, "in_classes": ["BatchNorm2d", "BatchNorm3d", "_BatchNorm"], "out_classes": ["torch"], "in_function": []}, {"name": "conv.py", "value": 39262, "in_classes": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "_ConvNd", "_ConvTransposeNd"], "out_classes": ["typing", "torch.nn.quantized.modules.utils"], "in_function": ["_pair", "_quantize_weight", "_reverse_repeat_padding", "_single", "_triple", "fuse_conv_bn_weights"]}, {"name": "dropout.py", "value": 783, "in_classes": ["Dropout"], "out_classes": [], "in_function": []}, {"name": "embedding_ops.py", "value": 13934, "in_classes": ["Embedding", "EmbeddingBag", "EmbeddingPackedParams"], "out_classes": ["torch"], "in_function": ["_quantize_weight", "hide_packed_params_repr"]}, {"name": "functional_modules.py", "value": 8525, "in_classes": ["FXFloatFunctional", "FloatFunctional", "QFunctional"], "out_classes": ["torch"], "in_function": []}, {"name": "linear.py", "value": 12839, "in_classes": ["Linear", "LinearPackedParams"], "out_classes": ["collections.abc", "torch.nn.quantized.modules.utils"], "in_function": ["_quantize_weight", "fuse_linear_bn_weights", "hide_packed_params_repr", "type_before_parametrizations"]}, {"name": "normalization.py", "value": 8398, "in_classes": ["GroupNorm", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm"], "out_classes": [], "in_function": []}, {"name": "utils.py", "value": 2759, "in_classes": ["WeightedQuantizedModule"], "out_classes": ["itertools"], "in_function": ["_addindent", "_ntuple_from_first", "parse", "_quantize_weight", "hide_packed_params_repr"]}, {"name": "__init__.py", "value": 4099}]}, {"name": "_reference", "children": [{"name": "modules", "children": [{"name": "conv.py", "value": 13676, "in_classes": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "_ConvNd", "_ConvTransposeNd"], "out_classes": ["torch.nn.quantized._reference.modules.utils"], "in_function": []}, {"name": "linear.py", "value": 2216, "in_classes": ["Linear"], "out_classes": ["torch.nn.quantized._reference.modules.utils"], "in_function": []}, {"name": "rnn.py", "value": 20867, "in_classes": ["GRUCell", "LSTM", "LSTMCell", "RNNBase", "RNNCell", "RNNCellBase"], "out_classes": ["torch.nn.utils.rnn", "torch"], "in_function": ["_quantize_and_dequantize_weight", "_quantize_weight", "apply_permutation", "get_quantize_and_dequantized_weight", "get_quantized_weight", "get_weight_and_quantization_params"]}, {"name": "sparse.py", "value": 4243, "in_classes": ["Embedding", "EmbeddingBag"], "out_classes": ["torch.nn.quantized._reference.modules.utils", "torch"], "in_function": []}, {"name": "utils.py", "value": 7161, "in_classes": ["ReferenceQuantizedModule"], "out_classes": [], "in_function": ["_get_weight_qparam_keys", "_quantize_and_dequantize_weight", "_quantize_weight", "_save_weight_qparams"]}, {"name": "__init__.py", "value": 468}]}, {"name": "__init__.py", "value": 38}]}, {"name": "__init__.py", "value": 38}]}, {"name": "utils", "children": [{"name": "clip_grad.py", "value": 4105, "in_classes": [], "out_classes": [], "in_function": ["clip_grad_norm", "clip_grad_norm_", "clip_grad_value_"]}, {"name": "convert_parameters.py", "value": 3085, "in_classes": [], "out_classes": [], "in_function": ["_check_param_device", "parameters_to_vector", "vector_to_parameters"]}, {"name": "fusion.py", "value": 1859, "in_classes": [], "out_classes": [], "in_function": ["fuse_conv_bn_eval", "fuse_conv_bn_weights", "fuse_linear_bn_eval", "fuse_linear_bn_weights"]}, {"name": "init.py", "value": 2226, "in_classes": [], "out_classes": [], "in_function": ["skip_init"]}, {"name": "memory_format.py", "value": 3859, "in_classes": [], "out_classes": [], "in_function": ["convert_conv2d_weight_memory_format"]}, {"name": "parametrizations.py", "value": 22759, "in_classes": ["_OrthMaps", "_Orthogonal", "_SpectralNorm"], "out_classes": ["enum", "torch.nn.modules.module", "torch", "enum"], "in_function": ["_is_orthogonal", "_make_orthogonal", "orthogonal", "spectral_norm"]}, {"name": "parametrize.py", "value": 33961, "in_classes": ["ParametrizationList"], "out_classes": ["torch.nn.modules.module", "torch.nn.modules.container", "torch.nn.modules.container", "torch.nn.parameter", "torch"], "in_function": ["_inject_new_class", "_inject_property", "_register_parameter_or_buffer", "cached", "contextmanager", "is_parametrized", "register_parametrization", "remove_parametrizations", "transfer_parametrizations_and_params", "type_before_parametrizations"]}, {"name": "prune.py", "value": 58082, "in_classes": ["BasePruningMethod", "CustomFromMask", "Identity", "L1Unstructured", "LnStructured", "PruningContainer", "RandomStructured", "RandomUnstructured"], "out_classes": ["abc", "collections.abc"], "in_function": ["_compute_norm", "_compute_nparams_toprune", "_validate_pruning_amount", "_validate_pruning_amount_init", "_validate_pruning_dim", "_validate_structured_pruning", "abstractmethod", "custom_from_mask", "global_unstructured", "identity", "is_pruned", "l1_unstructured", "ln_structured", "random_structured", "random_unstructured", "remove"]}, {"name": "rnn.py", "value": 21525, "in_classes": ["PackedSequence", "PackedSequence_"], "out_classes": ["torch"], "in_function": ["_packed_sequence_init", "_packed_sequence_init_args", "bind", "invert_permutation", "namedtuple", "pack_padded_sequence", "pack_sequence", "pad_packed_sequence", "pad_sequence", "unpack_sequence", "unpad_sequence"]}, {"name": "spectral_norm.py", "value": 14754, "in_classes": [], "out_classes": ["builtins"], "in_function": []}, {"name": "stateless.py", "value": 5086, "in_classes": [], "out_classes": ["torch"], "in_function": ["_apply_func_submodules", "_change_class", "_create_swap_params", "_remove_swap", "_reparametrize_module", "functional_call"]}, {"name": "weight_norm.py", "value": 4707, "in_classes": [], "out_classes": ["builtins"], "in_function": []}, {"name": "_expanded_weights", "children": [{"name": "conv_expanded_weights.py", "value": 1583, "in_classes": ["ConvPerSampleGrad"], "out_classes": ["torch.nn.utils._expanded_weights.expanded_weights_impl"], "in_function": ["conv_args_and_kwargs", "conv_backward", "forward_helper", "implements_per_sample_grads"]}, {"name": "conv_utils.py", "value": 7815, "in_classes": [], "out_classes": [], "in_function": ["conv_args_and_kwargs", "conv_backward", "conv_group_weight_grad_sample", "conv_normalizer", "conv_picker", "conv_unfold_weight_grad_sample", "set_grad_sample_if_exists", "unfold3d", "unpack_expanded_weight_or_tensor"]}, {"name": "embedding_expanded_weights.py", "value": 2527, "in_classes": ["EmbeddingPerSampleGrad"], "out_classes": [], "in_function": ["forward_helper", "implements_per_sample_grads", "set_grad_sample_if_exists", "standard_kwargs"]}, {"name": "expanded_weights_impl.py", "value": 2492, "in_classes": ["ExpandedWeight"], "out_classes": ["torch._C"], "in_function": ["cast", "implements_per_sample_grads"]}, {"name": "expanded_weights_utils.py", "value": 5530, "in_classes": [], "out_classes": ["torch.nn.utils._expanded_weights.expanded_weights_impl"], "in_function": ["_check_and_unexpand_args", "forward_helper", "set_grad_sample_if_exists", "standard_kwargs", "sum_over_all_but_batch_and_last_n", "unpack_expanded_weight_or_tensor"]}, {"name": "group_norm_expanded_weights.py", "value": 3002, "in_classes": ["GroupNormPerSampleGrad"], "out_classes": ["torch.nn.utils._expanded_weights.expanded_weights_impl"], "in_function": ["forward_helper", "implements_per_sample_grads", "set_grad_sample_if_exists", "standard_kwargs", "unpack_expanded_weight_or_tensor"]}, {"name": "instance_norm_expanded_weights.py", "value": 3282, "in_classes": ["InstanceNormPerSampleGrad"], "out_classes": ["functools"], "in_function": ["forward_helper", "implements_per_sample_grads", "set_grad_sample_if_exists", "standard_kwargs", "unpack_expanded_weight_or_tensor"]}, {"name": "layer_norm_expanded_weights.py", "value": 2920, "in_classes": ["LayerNormPerSampleGrad"], "out_classes": ["torch.nn.utils._expanded_weights.expanded_weights_impl"], "in_function": ["forward_helper", "implements_per_sample_grads", "set_grad_sample_if_exists", "standard_kwargs", "sum_over_all_but_batch_and_last_n", "unpack_expanded_weight_or_tensor"]}, {"name": "linear_expanded_weights.py", "value": 1899, "in_classes": ["LinearPerSampleGrad"], "out_classes": [], "in_function": ["forward_helper", "implements_per_sample_grads", "set_grad_sample_if_exists", "unpack_expanded_weight_or_tensor"]}, {"name": "__init__.py", "value": 460}]}, {"name": "_per_sample_grad.py", "value": 3224}, {"name": "_stateless.py", "value": 806}, {"name": "__init__.py", "value": 502}]}, {"name": "_reduction.py", "value": 1611}, {"name": "__init__.py", "value": 2055}]}