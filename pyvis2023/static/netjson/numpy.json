{"nodes": [{"name": "numpy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 2, "myclass": [["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"], ["numpy.testing._private.nosetester"]], "hasfunction": 2, "myfunction": [["__dir__", "__getattr__", "alen", "all", "allclose", "alltrue", "amax", "amin", "angle", "any", "append", "apply_along_axis", "apply_over_axes", "argmax", "argmin", "argpartition", "argsort", "argwhere", "around", "array2string", "array_equal", "array_equiv", "array_repr", "array_split", "array_str", "asarray_chkfinite", "asfarray", "asmatrix", "asscalar", "atleast_1d", "atleast_2d", "atleast_3d", "average", "bartlett", "base_repr", "binary_repr", "bincount", "blackman", "block", "bmat", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "busday_count", "busday_offset", "can_cast", "choose", "clip", "column_stack", "common_type", "compress", "concatenate", "convolve", "copy", "copyto", "corrcoef", "correlate", "count_nonzero", "cov", "cross", "cumprod", "cumproduct", "cumsum", "datetime_as_string", "delete", "diag", "diag_indices", "diag_indices_from", "diagflat", "diagonal", "diff", "digitize", "dot", "dsplit", "dstack", "ediff1d", "einsum", "einsum_path", "empty_like", "expand_dims", "extract", "eye", "fill_diagonal", "find_common_type", "fix", "flatnonzero", "flip", "fliplr", "flipud", "format_float_positional", "format_float_scientific", "fromfunction", "fromregex", "full", "full_like", "genfromtxt", "geomspace", "get_printoptions", "getbufsize", "geterr", "geterrcall", "gradient", "hamming", "hanning", "histogram", "histogram2d", "histogram_bin_edges", "histogramdd", "hsplit", "hstack", "i0", "identity", "imag", "in1d", "indices", "info", "inner", "insert", "interp", "intersect1d", "is_busday", "isclose", "iscomplex", "iscomplexobj", "isfortran", "isin", "isneginf", "isposinf", "isreal", "isrealobj", "isscalar", "issctype", "issubclass_", "issubdtype", "issubsctype", "iterable", "ix_", "kaiser", "kron", "lexsort", "linspace", "load", "loads", "loadtxt", "logspace", "lookfor", "mask_indices", "asmatrix", "amax", "maximum_sctype", "may_share_memory", "mean", "median", "meshgrid", "amin", "min_scalar_type", "mintypecode", "moveaxis", "msort", "nan_to_num", "nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar", "ndim", "nonzero", "obj2sctype", "ones", "ones_like", "outer", "packbits", "pad", "partition", "percentile", "piecewise", "place", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "printoptions", "prod", "product", "ptp", "put", "put_along_axis", "putmask", "quantile", "ravel", "ravel_multi_index", "real", "real_if_close", "repeat", "require", "reshape", "resize", "result_type", "roll", "rollaxis", "roots", "rot90", "round_", "round_", "vstack", "save", "savetxt", "savez", "savez_compressed", "sctype2char", "searchsorted", "select", "set_printoptions", "setbufsize", "setdiff1d", "seterr", "seterrcall", "setxor1d", "shape", "shares_memory", "sinc", "size", "sometrue", "sort", "sort_complex", "source", "split", "squeeze", "stack", "std", "sum", "swapaxes", "take", "take_along_axis", "tensordot", "tile", "trace", "transpose", "trapz", "tri", "tril", "tril_indices", "tril_indices_from", "trim_zeros", "triu", "triu_indices", "triu_indices_from", "typename", "union1d", "unique", "unpackbits", "unravel_index", "unwrap", "vander", "var", "vdot", "vsplit", "vstack", "where", "zeros_like"], ["add_newdoc", "byte_bounds", "deprecate", "deprecate_with_doc", "disp", "get_array_wrap", "get_include", "mafromtxt", "ndfromtxt", "recfromcsv", "recfromtxt", "safe_eval", "set_string_function", "show", "who"]]}, {"name": "numpy.__config__", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\__config__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_info", "show"], []]}, {"name": "numpy._distributor_init", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\_distributor_init.py", "layer": 1, "hasclass": 2, "myclass": [[], ["ctypes"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy._globals", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\_globals.py", "layer": 1, "hasclass": 2, "myclass": [["numpy._globals"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.matrixlib", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\matrixlib\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [[], ["asmatrix", "bmat", "asmatrix"]]}, {"name": "numpy.matrixlib.defmatrix", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\matrixlib\\defmatrix.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_convert_from_string", "_from_string"], ["asmatrix", "bmat", "concatenate", "isscalar", "asmatrix", "matrix_power", "set_module"]]}, {"name": "numpy._pytesttester", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\_pytesttester.py", "layer": 1, "hasclass": 2, "myclass": [["numpy._pytesttester"], []], "hasfunction": 2, "myfunction": [["_show_numpy_info"], []]}, {"name": "numpy._version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\_version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["get_versions"], []]}, {"name": "numpy.core.defchararray", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\defchararray.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_binary_op_dispatcher", "_center_dispatcher", "_clean_args", "_code_dispatcher", "_count_dispatcher", "_endswith_dispatcher", "_expandtabs_dispatcher", "_get_num_chars", "_join_dispatcher", "_just_dispatcher", "_mod_dispatcher", "_multiply_dispatcher", "_partition_dispatcher", "_replace_dispatcher", "_split_dispatcher", "_splitlines_dispatcher", "_startswith_dispatcher", "_strip_dispatcher", "_to_string_or_unicode_array", "_translate_dispatcher", "_unary_op_dispatcher", "_use_unicode", "_zfill_dispatcher", "array", "asarray"], ["add", "asbytes", "capitalize", "center", "count", "decode", "encode", "endswith", "equal", "expandtabs", "find", "greater", "greater_equal", "index", "isalnum", "isalpha", "isdecimal", "isdigit", "islower", "isnumeric", "isspace", "istitle", "isupper", "join", "less", "less_equal", "ljust", "lower", "lstrip", "mod", "multiply", "not_equal", "partition", "replace", "rfind", "rindex", "rjust", "rpartition", "rsplit", "rstrip", "set_module", "split", "splitlines", "startswith", "str_len", "strip", "swapcase", "title", "translate", "upper", "zfill"]]}, {"name": "numpy.compat", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\compat\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["pathlib", "builtins", "builtins", "numpy.compat.py3k", "builtins", "os", "builtins"]], "hasfunction": 2, "myfunction": [[], ["asbytes", "asbytes_nested", "asstr", "asunicode", "asunicode_nested", "formatargspec", "getargspec", "getexception", "is_pathlib_path", "isfileobj", "npy_load_module", "open_latin1", "sixu"]]}, {"name": "numpy.compat._inspect", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\compat\\_inspect.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["formatargspec", "formatargvalues", "getargs", "getargspec", "getargvalues", "iscode", "isfunction", "ismethod", "joinseq", "strseq"], []]}, {"name": "numpy.compat.py3k", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\compat\\py3k.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.compat.py3k"], ["pathlib", "abc", "builtins", "builtins", "builtins", "os", "builtins"]], "hasfunction": 2, "myfunction": [["asbytes", "asbytes_nested", "asstr", "asunicode", "asunicode_nested", "getexception", "is_pathlib_path", "isfileobj", "npy_load_module", "open_latin1", "sixu"], []]}, {"name": "numpy.core", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_DType_reconstruct", "_ufunc_reconstruct"], ["alen", "all", "allclose", "alltrue", "amax", "amin", "any", "argmax", "argmin", "argpartition", "argsort", "argwhere", "around", "array2string", "array_equal", "array_equiv", "array_repr", "array_str", "atleast_1d", "atleast_2d", "atleast_3d", "base_repr", "binary_repr", "block", "busday_count", "busday_offset", "can_cast", "choose", "clip", "compress", "concatenate", "convolve", "copyto", "correlate", "count_nonzero", "cross", "cumprod", "cumproduct", "cumsum", "datetime_as_string", "diagonal", "dot", "einsum", "einsum_path", "empty_like", "find_common_type", "flatnonzero", "format_float_positional", "format_float_scientific", "fromfunction", "full", "full_like", "geomspace", "get_printoptions", "getbufsize", "geterr", "geterrcall", "hstack", "identity", "indices", "inner", "is_busday", "isclose", "isfortran", "isscalar", "issctype", "issubdtype", "lexsort", "linspace", "logspace", "amax", "maximum_sctype", "may_share_memory", "mean", "amin", "min_scalar_type", "moveaxis", "ndim", "nonzero", "obj2sctype", "ones", "ones_like", "outer", "partition", "printoptions", "prod", "product", "ptp", "put", "putmask", "ravel", "repeat", "require", "reshape", "resize", "result_type", "roll", "rollaxis", "round_", "round_", "sctype2char", "searchsorted", "set_printoptions", "set_string_function", "setbufsize", "seterr", "seterrcall", "shape", "shares_memory", "size", "sometrue", "sort", "squeeze", "stack", "std", "sum", "swapaxes", "take", "tensordot", "trace", "transpose", "var", "vdot", "vstack", "where", "zeros_like"]]}, {"name": "numpy.core._add_newdocs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_add_newdocs.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["refer_to_array_attribute"], ["add_newdoc"]]}, {"name": "numpy.core._add_newdocs_scalars", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_add_newdocs_scalars.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["add_newdoc_for_scalar_type", "numeric_type_aliases"], ["add_newdoc"]]}, {"name": "numpy.core._asarray", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_asarray.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_require_dispatcher"], ["require", "array_function_dispatch", "require", "set_array_function_like_doc", "set_module"]]}, {"name": "numpy.core._dtype", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_dtype.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["__repr__", "__str__", "_byte_order_str", "_construction_repr", "_datetime_metadata_str", "_is_packed", "_isunsized", "_kind_name", "_name_get", "_name_includes_bit_suffix", "_scalar_str", "_struct_dict_str", "_struct_list_str", "_struct_str", "_subarray_str", "_unpack_field"], []]}, {"name": "numpy.core._dtype_ctypes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_dtype_ctypes.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_from_ctypes_array", "_from_ctypes_scalar", "_from_ctypes_structure", "_from_ctypes_union", "dtype_from_ctypes_type"], []]}, {"name": "numpy.core._exceptions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_exceptions.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core._exceptions", "numpy.core._exceptions", "numpy.core._exceptions", "numpy.core._exceptions", "numpy.core._exceptions", "numpy.core._exceptions", "numpy.core._exceptions"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_display_as_base", "_unpack_tuple"], ["set_module"]]}, {"name": "numpy.core._internal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_internal.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core._internal", "numpy.core._internal", "numpy.core._internal", "numpy.core._internal", "numpy.core._internal"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["__dtype_from_pep3118", "_add_trailing_padding", "_array_descr", "_commastring", "_copy_fields", "_dtype_from_pep3118", "_fix_names", "_gcd", "_getfield_is_safe", "_getintp_ctype", "_lcm", "_makenames_list", "_newnames", "_prod", "_reconstruct", "_ufunc_doc_signature_formatter", "_usefields", "_view_is_safe", "array_function_errmsg_formatter", "array_ufunc_errmsg_formatter", "npy_ctypes_check"], []]}, {"name": "numpy.core._methods", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_methods.py", "layer": 2, "hasclass": 2, "myclass": [[], ["contextlib"]], "hasfunction": 2, "myfunction": [["_all", "_amax", "_amin", "_any", "_clip", "_clip_dep_invoke_with_casting", "_clip_dep_is_byte_swapped", "_clip_dep_is_scalar_nan", "_count_reduce_items", "_dump", "_dumps", "_mean", "_prod", "_ptp", "_std", "_sum", "_var"], []]}, {"name": "numpy.core._multiarray_tests", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_multiarray_tests.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.core._multiarray_umath", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_multiarray_umath.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy.core.multiarray"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.core._string_helpers", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_string_helpers.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["english_capitalize", "english_lower", "english_upper"], []]}, {"name": "numpy.core._type_aliases", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_type_aliases.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "builtins", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_add_aliases", "_add_array_type", "_add_integer_aliases", "_add_types", "_bits_of", "_set_array_types", "_set_up_aliases", "bitname"], ["_kind_name", "english_lower"]]}, {"name": "numpy.core._ufunc_config", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\_ufunc_config.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core._ufunc_config"], ["numpy"]], "hasfunction": 2, "myfunction": [["_setdef"], ["getbufsize", "geterr", "geterrcall", "set_module", "setbufsize", "seterr", "seterrcall"]]}, {"name": "numpy.core.arrayprint", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\arrayprint.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint", "numpy.core.arrayprint"], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_array2string", "_array2string_dispatcher", "array2string", "_array_repr_dispatcher", "_array_repr_implementation", "_array_str_dispatcher", "_array_str_implementation", "_extendLine", "_extendLine_pretty", "_formatArray", "_get_format_function", "_get_formatdict", "_guarded_repr_or_str", "_leading_trailing", "_make_options_dict", "_none_or_positive_arg", "_object_format", "_recursive_guard", "_void_scalar_repr", "dtype_is_implied", "dtype_short_repr", "repr_format", "set_string_function", "str_format"], ["any", "array2string", "array_function_dispatch", "array_repr", "array_str", "concatenate", "datetime_as_string", "format_float_positional", "format_float_scientific", "get_printoptions", "printoptions", "set_module", "set_printoptions"]]}, {"name": "numpy.core.einsumfunc", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\einsumfunc.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_can_dot", "_compute_size_by_dict", "_einsum_dispatcher", "_einsum_path_dispatcher", "_find_contraction", "_flop_count", "_greedy_path", "_optimal_path", "_parse_einsum_input", "_parse_possible_contraction", "_update_other_results"], ["array_function_dispatch", "einsum", "einsum_path", "tensordot"]]}, {"name": "numpy.core.fromnumeric", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\fromnumeric.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_alen_dispathcer", "_all_dispatcher", "_amax_dispatcher", "_amin_dispatcher", "_any_dispatcher", "_argmax_dispatcher", "_argmin_dispatcher", "_argpartition_dispatcher", "_argsort_dispatcher", "_around_dispatcher", "_choose_dispatcher", "_clip_dispatcher", "_compress_dispatcher", "_cumprod_dispatcher", "_cumsum_dispatcher", "_diagonal_dispatcher", "_mean_dispatcher", "_ndim_dispatcher", "_nonzero_dispatcher", "_partition_dispatcher", "_prod_dispatcher", "_ptp_dispatcher", "_put_dispatcher", "_ravel_dispatcher", "_repeat_dispatcher", "_reshape_dispatcher", "_resize_dispatcher", "_searchsorted_dispatcher", "_shape_dispatcher", "_size_dispatcher", "_sort_dispatcher", "_squeeze_dispatcher", "_std_dispatcher", "_sum_dispatcher", "_swapaxes_dispatcher", "_take_dispatcher", "_trace_dispatcher", "_transpose_dispatcher", "_var_dispatcher", "_wrapfunc", "_wrapit", "_wrapreduction"], ["sctype2char", "alen", "all", "alltrue", "amax", "amin", "any", "argmax", "argmin", "argpartition", "argsort", "around", "choose", "clip", "compress", "concatenate", "cumprod", "cumproduct", "cumsum", "diagonal", "mean", "ndim", "nonzero", "partition", "prod", "product", "ptp", "put", "ravel", "repeat", "reshape", "resize", "round_", "searchsorted", "shape", "size", "sometrue", "sort", "squeeze", "std", "sum", "swapaxes", "take", "trace", "transpose", "var"]]}, {"name": "numpy.core.function_base", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\function_base.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_add_docstring", "_geomspace_dispatcher", "_linspace_dispatcher", "_logspace_dispatcher", "_needs_add_docstring", "add_newdoc"], ["geomspace", "linspace", "logspace", "ndim", "result_type"]]}, {"name": "numpy.core.getlimits", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\getlimits.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core.getlimits"], ["numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_discovered_machar", "_fr0", "_fr1", "_get_machar", "_register_known_types", "_register_type"], ["set_module"]]}, {"name": "numpy.core.machar", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\machar.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], ["any", "set_module"]]}, {"name": "numpy.core.multiarray", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\multiarray.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core.multiarray"], ["numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], ["bincount", "busday_count", "busday_offset", "can_cast", "concatenate", "copyto", "datetime_as_string", "dot", "empty_like", "inner", "is_busday", "lexsort", "may_share_memory", "min_scalar_type", "packbits", "putmask", "ravel_multi_index", "result_type", "shares_memory", "unpackbits", "unravel_index", "vdot", "where"]]}, {"name": "numpy.core.numeric", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\numeric.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_allclose_dispatcher", "_argwhere_dispatcher", "_array_equal_dispatcher", "_array_equiv_dispatcher", "_convolve_dispatcher", "_correlate_dispatcher", "_count_nonzero_dispatcher", "_cross_dispatcher", "_flatnonzero_dispatcher", "_frombuffer", "_fromfunction_dispatcher", "_full_dispatcher", "_full_like_dispatcher", "_identity_dispatcher", "_isclose_dispatcher", "_maketup", "_move_axis_to_0", "_moveaxis_dispatcher", "_ones_dispatcher", "_ones_like_dispatcher", "_outer_dispatcher", "_roll_dispatcher", "_rollaxis_dispatcher", "_tensordot_dispatcher", "_zeros_like_dispatcher", "extend_all", "normalize_axis_tuple"], ["fromfunction", "full", "identity", "ones", "alen", "all", "allclose", "alltrue", "amax", "amin", "any", "argmax", "argmin", "argpartition", "argsort", "argwhere", "around", "array2string", "array_equal", "array_equiv", "array_repr", "array_str", "base_repr", "binary_repr", "busday_count", "busday_offset", "can_cast", "choose", "clip", "compress", "concatenate", "convolve", "copyto", "correlate", "count_nonzero", "cross", "cumprod", "cumproduct", "cumsum", "datetime_as_string", "diagonal", "dot", "empty_like", "find_common_type", "flatnonzero", "format_float_positional", "format_float_scientific", "fromfunction", "full", "full_like", "get_printoptions", "getbufsize", "geterr", "geterrcall", "identity", "indices", "inner", "is_busday", "isclose", "isfortran", "isscalar", "issctype", "issubdtype", "lexsort", "maximum_sctype", "may_share_memory", "mean", "min_scalar_type", "moveaxis", "ndim", "nonzero", "obj2sctype", "ones", "ones_like", "outer", "partition", "printoptions", "prod", "product", "ptp", "put", "putmask", "ravel", "repeat", "require", "reshape", "resize", "result_type", "roll", "rollaxis", "round_", "sctype2char", "searchsorted", "set_array_function_like_doc", "set_module", "set_printoptions", "set_string_function", "setbufsize", "seterr", "seterrcall", "shape", "shares_memory", "size", "sometrue", "sort", "squeeze", "std", "sum", "swapaxes", "take", "tensordot", "trace", "transpose", "var", "vdot", "where", "zeros_like"]]}, {"name": "numpy.core.numerictypes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\numerictypes.py", "layer": 3, "hasclass": 2, "myclass": [["numpy.core.numerictypes"], ["numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_can_coerce_all", "_construct_lookups", "_find_common_coerce", "_register_types", "_scalar_type_key"], ["_bits_of", "_kind_name", "bitname", "busday_count", "busday_offset", "datetime_as_string", "english_capitalize", "english_lower", "english_upper", "find_common_type", "is_busday", "issctype", "issubclass_", "issubdtype", "issubsctype", "maximum_sctype", "obj2sctype", "sctype2char", "set_module"]]}, {"name": "numpy.core.overrides", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\overrides.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.core.overrides"], []], "hasfunction": 2, "myfunction": [["array_function_dispatch", "array_function_from_dispatcher", "set_array_function_like_doc", "set_module", "verify_matching_signatures"], ["getargspec"]]}, {"name": "numpy.core.records", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\records.py", "layer": 2, "hasclass": 2, "myclass": [[], ["collections", "numpy", "numpy", "contextlib", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_deprecate_shape_0_as_None", "array", "find_duplicate", "fromarrays", "fromfile", "fromrecords", "fromstring", "get_remaining_size"], ["get_printoptions", "set_module"]]}, {"name": "numpy.core.shape_base", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\shape_base.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_accumulate", "_arrays_for_stack_dispatcher", "_atleast_1d_dispatcher", "_atleast_2d_dispatcher", "_atleast_3d_dispatcher", "_atleast_nd", "_block", "_block_check_depths_match", "_block_concatenate", "_block_dispatcher", "_block_format_index", "_block_info_recursion", "_block_setup", "_block_slicing", "_concatenate_shapes", "_stack_dispatcher", "_vhstack_dispatcher"], ["ndim", "size", "atleast_1d", "atleast_2d", "atleast_3d", "block", "hstack", "stack", "vstack"]]}, {"name": "numpy.core.umath", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\core\\umath.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "builtins", "numpy", "numpy", "numpy", "numpy", "numpy.core.multiarray"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.ctypeslib", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\ctypeslib.py", "layer": 1, "hasclass": 2, "myclass": [["numpy.ctypeslib", "numpy.ctypeslib"], ["numpy", "ctypes", "ctypes", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_ctype_from_dtype", "_ctype_from_dtype_scalar", "_ctype_from_dtype_structured", "_ctype_from_dtype_subarray", "_ctype_ndarray", "_flags_fromnum", "_get_scalar_type_map", "_num_fromflags", "as_array", "as_ctypes", "as_ctypes_type", "load_library", "ndpointer"], []]}, {"name": "numpy.lib.scimath", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\scimath.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_fix_int_lt_zero", "_fix_real_abs_gt_1", "_fix_real_lt_zero", "_logn_dispatcher", "_power_dispatcher", "_tocomplex", "_unary_dispatcher", "arccos", "arcsin", "arctanh", "log", "log10", "log2", "logn", "power", "sqrt"], ["any", "array_function_dispatch", "isreal"]]}, {"name": "numpy.fft", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\fft\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["fft", "fft2", "fftfreq", "fftn", "fftshift", "hfft", "ifft", "ifft2", "ifftn", "ifftshift", "ihfft", "irfft", "irfft2", "irfftn", "rfft", "rfft2", "rfftfreq", "rfftn"], []]}, {"name": "numpy.fft._pocketfft", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\fft\\_pocketfft.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_cook_nd_args", "_fft_dispatcher", "_fftn_dispatcher", "_get_backward_norm", "_get_forward_norm", "_raw_fft", "_raw_fftnd", "_swap_direction"], ["fft", "fft2", "fftn", "hfft", "ifft", "ifft2", "ifftn", "ihfft", "irfft", "irfft2", "irfftn", "rfft", "rfft2", "rfftn", "swapaxes", "take"]]}, {"name": "numpy.fft._pocketfft_internal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\fft\\_pocketfft_internal.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 3, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.fft.helper", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\fft\\helper.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_fftshift_dispatcher"], ["array_function_dispatch", "fftfreq", "fftshift", "ifftshift", "rfftfreq", "roll", "set_module"]]}, {"name": "numpy.lib", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.lib.arrayterator", "numpy", "numpy.lib._version", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [[], ["add_newdoc", "angle", "append", "apply_along_axis", "apply_over_axes", "array_split", "asarray_chkfinite", "asfarray", "asscalar", "average", "bartlett", "bincount", "blackman", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "byte_bounds", "column_stack", "common_type", "copy", "corrcoef", "cov", "delete", "deprecate", "deprecate_with_doc", "diag", "diag_indices", "diag_indices_from", "diagflat", "diff", "digitize", "disp", "dsplit", "dstack", "ediff1d", "expand_dims", "extract", "eye", "fill_diagonal", "fix", "flip", "fliplr", "flipud", "fromregex", "genfromtxt", "get_array_wrap", "get_include", "gradient", "hamming", "hanning", "histogram", "histogram2d", "histogram_bin_edges", "histogramdd", "hsplit", "i0", "imag", "in1d", "info", "insert", "interp", "intersect1d", "iscomplex", "iscomplexobj", "isin", "isneginf", "isposinf", "isreal", "isrealobj", "issubclass_", "issubdtype", "issubsctype", "iterable", "ix_", "kaiser", "kron", "load", "loads", "loadtxt", "lookfor", "mafromtxt", "mask_indices", "median", "meshgrid", "mintypecode", "msort", "nan_to_num", "nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar", "ndfromtxt", "packbits", "pad", "percentile", "piecewise", "place", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "put_along_axis", "quantile", "ravel_multi_index", "real", "real_if_close", "recfromcsv", "recfromtxt", "roots", "rot90", "vstack", "safe_eval", "save", "savetxt", "savez", "savez_compressed", "select", "setdiff1d", "setxor1d", "sinc", "sort_complex", "source", "split", "take_along_axis", "tile", "trapz", "tri", "tril", "tril_indices", "tril_indices_from", "trim_zeros", "triu", "triu_indices", "triu_indices_from", "typename", "union1d", "unique", "unpackbits", "unravel_index", "unwrap", "vander", "vsplit", "who"]]}, {"name": "numpy.lib._datasource", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\_datasource.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._datasource", "numpy.lib._datasource"], ["numpy"]], "hasfunction": 2, "myfunction": [["_check_mode", "open"], ["set_module"]]}, {"name": "numpy.lib._iotools", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\_iotools.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools"], []], "hasfunction": 2, "myfunction": [["_decode_line", "_is_bytes_like", "_is_string_like", "easy_dtype", "flatten_dtype", "has_nested_fields", "str2bool"], ["asbytes", "asunicode"]]}, {"name": "numpy.lib._version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\_version.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib._version"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.lib.arraypad", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\arraypad.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy"]], "hasfunction": 2, "myfunction": [["_as_pairs", "_get_edges", "_get_linear_ramps", "_get_stats", "_normalize_shape", "_pad_dispatcher", "_pad_simple", "_round_if_needed", "_set_pad_area", "_set_reflect_both", "_set_wrap_both", "_slice_at_axis", "_validate_lengths", "_view_roi"], ["array_function_dispatch", "pad"]]}, {"name": "numpy.lib.arraysetops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\arraysetops.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_ediff1d_dispatcher", "_in1d_dispatcher", "_intersect1d_dispatcher", "_isin_dispatcher", "_setdiff1d_dispatcher", "_setxor1d_dispatcher", "_union1d_dispatcher", "_unique1d", "_unique_dispatcher", "_unpack_tuple"], ["ediff1d", "in1d", "intersect1d", "isin", "setdiff1d", "setxor1d", "union1d", "unique"]]}, {"name": "numpy.lib.arrayterator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\arrayterator.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.arrayterator"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.lib.format", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\format.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_check_version", "_filter_header", "_has_metadata", "_read_array_header", "_read_bytes", "_wrap_header", "_wrap_header_guess_version", "_write_array_header", "descr_to_dtype", "dtype_to_descr", "header_data_from_array_1_0", "magic", "open_memmap", "read_array", "read_array_header_1_0", "read_array_header_2_0", "read_magic", "write_array", "write_array_header_1_0", "write_array_header_2_0"], ["isfileobj", "safe_eval"]]}, {"name": "numpy.lib.function_base", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\function_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_angle_dispatcher", "_append_dispatcher", "_average_dispatcher", "_calculate_shapes", "_chbevl", "_copy_dispatcher", "_corrcoef_dispatcher", "_cov_dispatcher", "_create_arrays", "_delete_dispatcher", "_diff_dispatcher", "_digitize_dispatcher", "_extract_dispatcher", "_flip_dispatcher", "_gradient_dispatcher", "_i0_1", "_i0_2", "_i0_dispatcher", "_insert_dispatcher", "_interp_dispatcher", "_lerp", "_median", "_median_dispatcher", "_meshgrid_dispatcher", "_msort_dispatcher", "_parse_gufunc_signature", "_parse_input_dimensions", "_percentile_dispatcher", "_piecewise_dispatcher", "_place_dispatcher", "_quantile_dispatcher", "_quantile_is_valid", "_quantile_unchecked", "_quantile_ureduce_func", "_rot90_dispatcher", "_select_dispatcher", "_sinc_dispatcher", "_sort_complex", "_trapz_dispatcher", "_trim_zeros", "_unwrap_dispatcher", "_update_dim_sizes", "_ureduce", "disp"], ["add_newdoc", "angle", "any", "append", "around", "asarray_chkfinite", "average", "bartlett", "bincount", "blackman", "concatenate", "copy", "corrcoef", "cov", "delete", "diag", "diff", "digitize", "dot", "extract", "flip", "gradient", "hamming", "hanning", "histogram", "histogramdd", "i0", "insert", "interp", "isscalar", "iterable", "kaiser", "mean", "median", "meshgrid", "msort", "nonzero", "ones", "partition", "percentile", "piecewise", "place", "quantile", "ravel", "rot90", "select", "set_module", "sinc", "sort_complex", "sum", "take", "transpose", "trapz", "trim_zeros", "unwrap", "where", "zeros_like"]]}, {"name": "numpy.lib.histograms", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\histograms.py", "layer": 2, "hasclass": 2, "myclass": [[], ["builtins"]], "hasfunction": 2, "myfunction": [["_get_bin_edges", "_get_outer_edges", "_hist_bin_auto", "_hist_bin_doane", "_hist_bin_fd", "_hist_bin_rice", "_hist_bin_scott", "_hist_bin_sqrt", "_hist_bin_stone", "_hist_bin_sturges", "_histogram_bin_edges_dispatcher", "_histogram_dispatcher", "_histogramdd_dispatcher", "_ptp", "_ravel_and_check_weights", "_search_sorted_inclusive", "_unsigned_subtract"], ["histogram", "histogram_bin_edges", "histogramdd"]]}, {"name": "numpy.lib.index_tricks", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\index_tricks.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks", "numpy.lib.index_tricks"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_diag_indices_from", "_fill_diagonal_dispatcher", "_ix__dispatcher"], ["alltrue", "as_strided", "cumprod", "diag_indices", "diag_indices_from", "diff", "fill_diagonal", "find_common_type", "issubdtype", "ix_", "linspace", "ndim", "ravel_multi_index", "set_module", "unravel_index"]]}, {"name": "numpy.lib.mixins", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\mixins.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.mixins"], []], "hasfunction": 2, "myfunction": [["_binary_method", "_disables_array_ufunc", "_inplace_binary_method", "_numeric_methods", "_reflected_binary_method", "_unary_method"], []]}, {"name": "numpy.lib.nanfunctions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\nanfunctions.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_copyto", "_divide_by_count", "_nan_mask", "_nanargmax_dispatcher", "_nanargmin_dispatcher", "_nancumprod_dispatcher", "_nancumsum_dispatcher", "_nanmax_dispatcher", "_nanmean_dispatcher", "_nanmedian", "_nanmedian1d", "_nanmedian_dispatcher", "_nanmedian_small", "_nanmin_dispatcher", "_nanpercentile_dispatcher", "_nanprod_dispatcher", "_nanquantile_1d", "_nanquantile_dispatcher", "_nanquantile_unchecked", "_nanquantile_ureduce_func", "_nanstd_dispatcher", "_nansum_dispatcher", "_nanvar_dispatcher", "_remove_nan_1d", "_replace_nan"], ["nanargmax", "nanargmin", "nancumprod", "nancumsum", "nanmax", "nanmean", "nanmedian", "nanmin", "nanpercentile", "nanprod", "nanquantile", "nanstd", "nansum", "nanvar"]]}, {"name": "numpy.lib.npyio", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\npyio.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.npyio", "numpy.lib.npyio"], ["numpy.lib._iotools", "numpy.lib._iotools", "numpy.lib._iotools", "numpy", "numpy.lib._iotools", "collections.abc", "numpy.lib._iotools", "numpy.lib._iotools", "operator", "os", "numpy.core._internal"]], "hasfunction": 2, "myfunction": [["_genfromtxt_dispatcher", "_getconv", "_loadtxt_dispatcher", "_save_dispatcher", "_savetxt_dispatcher", "_savez", "_savez_compressed_dispatcher", "_savez_dispatcher", "mafromtxt", "ndfromtxt", "recfromcsv", "recfromtxt", "zipfile_factory"], ["_decode_line", "genfromtxt", "_is_string_like", "loadtxt", "asbytes", "asstr", "asunicode", "easy_dtype", "flatten_dtype", "fromregex", "genfromtxt", "has_nested_fields", "load", "loads", "loadtxt", "packbits", "save", "savetxt", "savez", "savez_compressed", "set_array_function_like_doc", "set_module", "unpackbits"]]}, {"name": "numpy.lib.polynomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\polynomial.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_binary_op_dispatcher", "_poly_dispatcher", "_polyder_dispatcher", "_polydiv_dispatcher", "_polyfit_dispatcher", "_polyint_dispatcher", "_polyval_dispatcher", "_raise_power", "_roots_dispatcher"], ["atleast_1d", "diag", "dot", "eigvals", "hstack", "imag", "inv", "iscomplex", "isscalar", "lstsq", "mintypecode", "ones", "poly", "polyadd", "polyder", "polydiv", "polyfit", "polyint", "polymul", "polysub", "polyval", "real", "roots", "set_module", "trim_zeros", "vander"]]}, {"name": "numpy.lib.shape_base", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\shape_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_apply_along_axis_dispatcher", "_apply_over_axes_dispatcher", "_array_split_dispatcher", "_column_stack_dispatcher", "_dstack_dispatcher", "_expand_dims_dispatcher", "_hvdsplit_dispatcher", "_kron_dispatcher", "_make_along_axis_idx", "_put_along_axis_dispatcher", "_replace_zero_by_x_arrays", "_split_dispatcher", "_take_along_axis_dispatcher", "_tile_dispatcher", "get_array_prepare", "get_array_wrap"], ["_arrays_for_stack_dispatcher", "apply_along_axis", "apply_over_axes", "array_split", "atleast_3d", "column_stack", "concatenate", "dsplit", "dstack", "expand_dims", "hsplit", "kron", "normalize_axis_tuple", "outer", "put_along_axis", "reshape", "vstack", "split", "take_along_axis", "tile", "transpose", "vsplit", "vstack"]]}, {"name": "numpy.lib.stride_tricks", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\stride_tricks.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.stride_tricks"], []], "hasfunction": 2, "myfunction": [["_broadcast_arrays_dispatcher", "_broadcast_shape", "_broadcast_to", "_broadcast_to_dispatcher", "_maybe_view_as_subclass", "_sliding_window_view_dispatcher", "as_strided", "sliding_window_view"], ["array_function_dispatch", "broadcast_arrays", "broadcast_shapes", "broadcast_to", "normalize_axis_tuple", "set_module"]]}, {"name": "numpy.lib.twodim_base", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\twodim_base.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_diag_dispatcher", "_eye_dispatcher", "_flip_dispatcher", "_histogram2d_dispatcher", "_min_int", "_tri_dispatcher", "_trilu_dispatcher", "_trilu_indices_form_dispatcher", "_vander_dispatcher"], ["eye", "tri", "broadcast_to", "diag", "diagflat", "diagonal", "eye", "fliplr", "flipud", "histogram2d", "indices", "mask_indices", "nonzero", "ones", "set_array_function_like_doc", "set_module", "tri", "tril", "tril_indices", "tril_indices_from", "triu", "triu_indices", "triu_indices_from", "vander", "where"]]}, {"name": "numpy.lib.type_check", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\type_check.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_asfarray_dispatcher", "_asscalar_dispatcher", "_common_type_dispatcher", "_getmaxmin", "_imag_dispatcher", "_is_type_dispatcher", "_nan_to_num_dispatcher", "_real_dispatcher", "_real_if_close_dispatcher"], ["asfarray", "asscalar", "common_type", "imag", "iscomplex", "iscomplexobj", "isneginf", "isposinf", "isreal", "isrealobj", "mintypecode", "nan_to_num", "real", "real_if_close", "set_module", "typename"]]}, {"name": "numpy.lib.ufunclike", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\ufunclike.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [["_deprecate_out_named_y", "_dispatcher", "_fix_and_maybe_deprecate_out_named_y", "_fix_out_named_y"], ["array_function_dispatch", "fix", "isneginf", "isposinf"]]}, {"name": "numpy.lib.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\lib\\utils.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.lib.utils"], ["numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_get_indent", "_getmembers", "_info", "_lookfor_generate_cache", "_makenamedict", "_median_nancheck", "_opt_info", "_set_function_name", "_split_line", "byte_bounds", "deprecate", "deprecate_with_doc", "get_include", "safe_eval", "who"], ["info", "issubclass_", "issubdtype", "issubsctype", "lookfor", "set_module", "source"]]}, {"name": "numpy.linalg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\linalg\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [["numpy.linalg"], []], "hasfunction": 2, "myfunction": [["cholesky", "cond", "det", "eig", "eigh", "eigvals", "eigvalsh", "inv", "lstsq", "matrix_power", "matrix_rank", "multi_dot", "norm", "pinv", "qr", "slogdet", "solve", "svd", "tensorinv", "tensorsolve"], []]}, {"name": "numpy.linalg._umath_linalg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\linalg\\_umath_linalg.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.linalg.lapack_lite", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\linalg\\lapack_lite.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], ["lapack_lite"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.linalg.linalg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\linalg\\linalg.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy.linalg", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy", "numpy"]], "hasfunction": 2, "myfunction": [["_assert_2d", "_assert_finite", "_assert_stacked_2d", "_assert_stacked_square", "_commonType", "_complexType", "_cond_dispatcher", "_convertarray", "_eigvalsh_dispatcher", "_fastCopyAndTranspose", "_is_empty_2d", "_linalgRealType", "_lstsq_dispatcher", "_makearray", "_matrix_power_dispatcher", "_matrix_rank_dispatcher", "_multi_dot", "_multi_dot_matrix_chain_order", "_multi_dot_three", "_multi_svd_norm", "_multidot_dispatcher", "_norm_dispatcher", "_pinv_dispatcher", "_qr_dispatcher", "_raise_linalgerror_eigenvalues_nonconvergence", "_raise_linalgerror_lstsq", "_raise_linalgerror_nonposdef", "_raise_linalgerror_singular", "_raise_linalgerror_svd_nonconvergence", "_realType", "_solve_dispatcher", "_svd_dispatcher", "_tensorinv_dispatcher", "_tensorsolve_dispatcher", "_to_native_byte_order", "_unary_dispatcher", "get_linalg_error_extobj", "isComplexType", "transpose"], ["all", "amax", "amin", "argsort", "atleast_2d", "cholesky", "cond", "count_nonzero", "det", "dot", "eig", "eigh", "eigvals", "eigvalsh", "empty_like", "eye", "inv", "lstsq", "matrix_power", "matrix_rank", "moveaxis", "multi_dot", "norm", "pinv", "product", "qr", "set_module", "slogdet", "solve", "sort", "sum", "svd", "swapaxes", "tensorinv", "tensorsolve", "triu"]]}, {"name": "numpy.ma", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\ma\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.ma.core", "numpy.ma.core", "numpy", "numpy.ma.core", "numpy", "numpy.ma.core", "numpy.ma.core"]], "hasfunction": 2, "myfunction": [[], ["allclose", "allequal", "amax", "amin", "append", "apply_along_axis", "apply_over_axes", "argsort", "array", "asanyarray", "asarray", "average", "choose", "clip", "clump_masked", "clump_unmasked", "common_fill_value", "compress_cols", "compress_nd", "compress_rowcols", "compress_rows", "compressed", "concatenate", "convolve", "corrcoef", "correlate", "count_masked", "cov", "default_fill_value", "diag", "diff", "dot", "ediff1d", "expand_dims", "filled", "fix_invalid", "flatnotmasked_contiguous", "flatnotmasked_edges", "flatten_mask", "flatten_structured_array", "fromflex", "getdata", "getmask", "getmaskarray", "in1d", "indices", "inner", "inner", "intersect1d", "isMaskedArray", "isMaskedArray", "is_mask", "is_masked", "isMaskedArray", "isin", "left_shift", "make_mask", "make_mask_descr", "make_mask_none", "mask_cols", "mask_or", "mask_rowcols", "mask_rows", "masked_all", "masked_all_like", "masked_equal", "masked_greater", "masked_greater_equal", "masked_inside", "masked_invalid", "masked_less", "masked_less_equal", "masked_not_equal", "masked_object", "masked_outside", "masked_values", "masked_where", "max", "maximum_fill_value", "median", "min", "minimum_fill_value", "ndim", "notmasked_contiguous", "notmasked_edges", "outer", "outer", "polyfit", "power", "ptp", "put", "putmask", "reshape", "resize", "right_shift", "round_", "round_", "set_fill_value", "setdiff1d", "setxor1d", "shape", "size", "sort", "squeeze", "take", "transpose", "union1d", "unique", "vander", "where"]]}, {"name": "numpy.ma.core", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\ma\\core.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core"], ["numpy", "numpy", "builtins", "builtins", "numpy", "numpy.core._internal", "builtins"]], "hasfunction": 2, "myfunction": [["_arraymethod", "_check_fill_value", "_check_mask_axis", "_convolve_or_correlate", "_deprecate_argsort_axis", "_extremum_fill_value", "_get_dtype_of", "_mareconstruct", "_pickle_warn", "_recursive_fill_value", "_recursive_filled", "_recursive_printoption", "_recursive_set_fill_value", "_replace_dtype_fields", "_replace_dtype_fields_recursive", "_shrink_mask", "allclose", "allequal", "append", "argsort", "array", "asanyarray", "asarray", "choose", "common_fill_value", "compressed", "concatenate", "convolve", "correlate", "default_fill_value", "diag", "doc_note", "dot", "filled", "fix_invalid", "flatten_mask", "flatten_structured_array", "fromfile", "fromflex", "getdata", "get_fill_value", "getmask", "get_masked_subclass", "get_object_signature", "getdata", "getmask", "getmaskarray", "inner", "inner", "isMaskedArray", "isMaskedArray", "is_mask", "is_masked", "is_string_or_list_of_strings", "isMaskedArray", "left_shift", "make_mask", "make_mask_descr", "make_mask_none", "mask_or", "mask_rowcols", "masked_equal", "masked_greater", "masked_greater_equal", "masked_inside", "masked_invalid", "masked_less", "masked_less_equal", "masked_not_equal", "masked_object", "masked_outside", "masked_values", "masked_where", "max", "maximum_fill_value", "min", "minimum_fill_value", "ndim", "outer", "outer", "power", "ptp", "put", "putmask", "reshape", "resize", "right_shift", "round_", "round_", "set_fill_value", "shape", "size", "sort", "take", "transpose", "where"], ["amax", "amin", "clip", "diff", "expand_dims", "formatargspec", "getargspec", "indices", "iscomplexobj", "normalize_axis_tuple", "ones_like", "squeeze", "zeros_like"]]}, {"name": "numpy.ma.extras", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\ma\\extras.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras", "numpy.ma.extras"], ["numpy.lib.index_tricks", "numpy.ma.core", "numpy.ma.core", "numpy.ma.core", "numpy"]], "hasfunction": 2, "myfunction": [["_covhelper", "_ezclump", "_median", "apply_along_axis", "apply_over_axes", "average", "clump_masked", "clump_unmasked", "compress_cols", "compress_nd", "compress_rowcols", "compress_rows", "corrcoef", "count_masked", "cov", "ediff1d", "flatnotmasked_contiguous", "flatnotmasked_edges", "flatten_inplace", "in1d", "intersect1d", "isin", "issequence", "mask_cols", "mask_rows", "masked_all", "masked_all_like", "median", "notmasked_contiguous", "notmasked_edges", "polyfit", "setdiff1d", "setxor1d", "union1d", "unique", "vander"], ["_ureduce", "array", "asarray", "concatenate", "dot", "filled", "get_masked_subclass", "getdata", "getmask", "getmaskarray", "make_mask_descr", "mask_or", "mask_rowcols", "normalize_axis_tuple", "sort"]]}, {"name": "numpy.polynomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.polynomial.chebyshev", "numpy.polynomial.hermite", "numpy.polynomial.hermite_e", "numpy.polynomial.laguerre", "numpy.polynomial.legendre", "numpy.polynomial.polynomial"]], "hasfunction": 2, "myfunction": [["set_default_printstyle"], []]}, {"name": "numpy.polynomial._polybase", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\_polybase.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial._polybase"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.polynomial.chebyshev", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\chebyshev.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.chebyshev"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_cseries_to_zseries", "_zseries_der", "_zseries_div", "_zseries_int", "_zseries_mul", "_zseries_to_cseries", "cheb2poly", "chebadd", "chebcompanion", "chebder", "chebdiv", "chebfit", "chebfromroots", "chebgauss", "chebgrid2d", "chebgrid3d", "chebint", "chebinterpolate", "chebline", "chebmul", "chebmulx", "chebpow", "chebpts1", "chebpts2", "chebroots", "chebsub", "chebval", "chebval2d", "chebval3d", "chebvander", "chebvander2d", "chebvander3d", "chebweight", "poly2cheb"], ["trimcoef"]]}, {"name": "numpy.polynomial.hermite", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\hermite.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.hermite"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_normed_hermite_n", "herm2poly", "hermadd", "hermcompanion", "hermder", "hermdiv", "hermfit", "hermfromroots", "hermgauss", "hermgrid2d", "hermgrid3d", "hermint", "hermline", "hermmul", "hermmulx", "hermpow", "hermroots", "hermsub", "hermval", "hermval2d", "hermval3d", "hermvander", "hermvander2d", "hermvander3d", "hermweight", "poly2herm"], ["trimcoef"]]}, {"name": "numpy.polynomial.hermite_e", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\hermite_e.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.hermite_e"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["_normed_hermite_e_n", "herme2poly", "hermeadd", "hermecompanion", "hermeder", "hermediv", "hermefit", "hermefromroots", "hermegauss", "hermegrid2d", "hermegrid3d", "hermeint", "hermeline", "hermemul", "hermemulx", "hermepow", "hermeroots", "hermesub", "hermeval", "hermeval2d", "hermeval3d", "hermevander", "hermevander2d", "hermevander3d", "hermeweight", "poly2herme"], ["trimcoef"]]}, {"name": "numpy.polynomial.laguerre", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\laguerre.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.laguerre"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["lag2poly", "lagadd", "lagcompanion", "lagder", "lagdiv", "lagfit", "lagfromroots", "laggauss", "laggrid2d", "laggrid3d", "lagint", "lagline", "lagmul", "lagmulx", "lagpow", "lagroots", "lagsub", "lagval", "lagval2d", "lagval3d", "lagvander", "lagvander2d", "lagvander3d", "lagweight", "poly2lag"], ["trimcoef"]]}, {"name": "numpy.polynomial.legendre", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\legendre.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.legendre"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["leg2poly", "legadd", "legcompanion", "legder", "legdiv", "legfit", "legfromroots", "leggauss", "leggrid2d", "leggrid3d", "legint", "legline", "legmul", "legmulx", "legpow", "legroots", "legsub", "legval", "legval2d", "legval3d", "legvander", "legvander2d", "legvander3d", "legweight", "poly2leg"], ["trimcoef"]]}, {"name": "numpy.polynomial.polynomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\polynomial.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.polynomial"], ["numpy.polynomial._polybase"]], "hasfunction": 2, "myfunction": [["polyadd", "polycompanion", "polyder", "polydiv", "polyfit", "polyfromroots", "polygrid2d", "polygrid3d", "polyint", "polyline", "polymul", "polymulx", "polypow", "polyroots", "polysub", "polyval", "polyval2d", "polyval3d", "polyvalfromroots", "polyvander", "polyvander2d", "polyvander3d"], ["trimcoef"]]}, {"name": "numpy.polynomial.polyutils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\polynomial\\polyutils.py", "layer": 2, "hasclass": 2, "myclass": [["numpy.polynomial.polyutils"], []], "hasfunction": 2, "myfunction": [["_add", "_deprecate_as_int", "_div", "_fit", "_fromroots", "_gridnd", "_nth_slice", "_pow", "_sub", "_valnd", "_vander_nd", "_vander_nd_flat", "as_series", "getdomain", "mapdomain", "mapparms", "trimcoef", "trimseq"], []]}, {"name": "numpy.random", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.random.bit_generator", "numpy.random._generator", "numpy.random._mt19937", "numpy.random._pcg64", "numpy.random._pcg64", "numpy.random._philox", "numpy.random.mtrand", "numpy.random._sfc64", "numpy.random.bit_generator"]], "hasfunction": 2, "myfunction": [["__RandomState_ctor"], []]}, {"name": "numpy.random._bounded_integers", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_bounded_integers.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._common", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_common.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [[], ["importlib._bootstrap"]], "hasfunction": 2, "myfunction": [[], ["namedtuple"]]}, {"name": "numpy.random._generator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_generator.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._generator"], ["numpy.random._pcg64", "collections.abc"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._mt19937", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_mt19937.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._mt19937"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._pcg64", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_pcg64.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._pcg64", "numpy.random._pcg64"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._philox", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_philox.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._philox"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random._pickle", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_pickle.py", "layer": 2, "hasclass": 2, "myclass": [[], ["numpy.random._generator", "numpy.random._mt19937", "numpy.random._pcg64", "numpy.random._pcg64", "numpy.random._philox", "numpy.random.mtrand", "numpy.random._sfc64"]], "hasfunction": 2, "myfunction": [["__bit_generator_ctor", "__generator_ctor", "__randomstate_ctor"], []]}, {"name": "numpy.random._sfc64", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\_sfc64.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random._sfc64"], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random.bit_generator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\bit_generator.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator", "numpy.random.bit_generator"], ["itertools"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.random.mtrand", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\random\\mtrand.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 2, "hasclass": 2, "myclass": [["numpy.random.mtrand"], ["collections.abc", "numpy.random._mt19937"]], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.testing", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\testing\\__init__.py", "layer": 1, "hasclass": 2, "myclass": [[], ["numpy.testing._private.utils", "numpy.testing._private.utils", "unittest.case", "unittest.case", "numpy.testing._private.nosetester", "numpy.testing._private.utils", "numpy.testing._private.utils"]], "hasfunction": 2, "myfunction": [[], ["_assert_valid_refcount", "_gen_alignment_data", "assert_", "assert_allclose", "assert_almost_equal", "assert_approx_equal", "assert_array_almost_equal", "assert_array_almost_equal_nulp", "assert_array_compare", "assert_array_equal", "assert_array_less", "assert_array_max_ulp", "assert_equal", "assert_no_gc_cycles", "assert_no_warnings", "assert_raises", "assert_raises_regex", "assert_string_equal", "assert_warns", "break_cycles", "build_err_msg", "decorate_methods", "jiffies", "measure", "memusage", "print_assert_equal", "raises", "run_module_suite", "rundocs", "runstring", "tempdir", "temppath"]]}, {"name": "numpy.testing._private", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\testing\\_private\\__init__.py", "layer": 2, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}, {"name": "numpy.testing._private.decorators", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\testing\\_private\\decorators.py", "layer": 3, "hasclass": 2, "myclass": [[], ["unittest.case"]], "hasfunction": 2, "myfunction": [["skip_decorator", "deprecated", "knownfailureif", "parametrize", "setastest", "skipif", "slow"], ["assert_warns"]]}, {"name": "numpy.testing._private.nosetester", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\testing\\_private\\nosetester.py", "layer": 3, "hasclass": 2, "myclass": [["numpy.testing._private.nosetester"], ["numpy.testing._private.utils"]], "hasfunction": 2, "myfunction": [["_numpy_tester", "get_package_name", "run_module_suite"], ["import_nose"]]}, {"name": "numpy.testing._private.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\testing\\_private\\utils.py", "layer": 3, "hasclass": 2, "myclass": [["numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils", "numpy.testing._private.utils"], ["unittest.case", "_io", "warnings", "numpy", "numpy", "numpy", "functools"]], "hasfunction": 2, "myfunction": [["GetPerformanceAttributes", "_assert_no_gc_cycles_context", "_assert_no_warnings_context", "_assert_valid_refcount", "_assert_warns_context", "_gen_alignment_data", "_get_mem_available", "_integer_repr", "_no_tracing", "_parse_size", "assert_", "assert_allclose", "assert_almost_equal", "assert_approx_equal", "assert_array_almost_equal", "assert_array_almost_equal_nulp", "assert_array_compare", "assert_array_equal", "assert_array_less", "assert_array_max_ulp", "assert_equal", "assert_no_gc_cycles", "assert_no_warnings", "assert_raises", "assert_raises_regex", "assert_string_equal", "assert_warns", "break_cycles", "build_err_msg", "check_free_memory", "decorate_methods", "gisfinite", "gisinf", "gisnan", "import_nose", "integer_repr", "jiffies", "measure", "memusage", "nulp_diff", "print_assert_equal", "raises", "requires_memory", "rundocs", "runstring", "tempdir", "temppath"], ["array_repr", "mkdtemp", "mkstemp", "wraps"]]}, {"name": "numpy.version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\numpy\\version.py", "layer": 1, "hasclass": 2, "myclass": [[], []], "hasfunction": 2, "myfunction": [[], []]}], "links": [{"source": 0, "target": 1}, {"source": 0, "target": 2}, {"source": 0, "target": 3}, {"source": 0, "target": 4}, {"source": 0, "target": 6}, {"source": 0, "target": 7}, {"source": 0, "target": 8}, {"source": 0, "target": 9}, {"source": 0, "target": 12}, {"source": 0, "target": 39}, {"source": 0, "target": 40}, {"source": 0, "target": 41}, {"source": 0, "target": 45}, {"source": 0, "target": 66}, {"source": 0, "target": 70}, {"source": 0, "target": 4}, {"source": 0, "target": 73}, {"source": 0, "target": 82}, {"source": 0, "target": 36}, {"source": 0, "target": 93}, {"source": 0, "target": 98}, {"source": 4, "target": 5}, {"source": 5, "target": 33}, {"source": 8, "target": 0}, {"source": 8, "target": 35}, {"source": 9, "target": 10}, {"source": 9, "target": 11}, {"source": 12, "target": 13}, {"source": 12, "target": 14}, {"source": 12, "target": 15}, {"source": 12, "target": 16}, {"source": 12, "target": 17}, {"source": 12, "target": 18}, {"source": 12, "target": 19}, {"source": 12, "target": 20}, {"source": 12, "target": 21}, {"source": 12, "target": 22}, {"source": 12, "target": 23}, {"source": 12, "target": 24}, {"source": 12, "target": 25}, {"source": 12, "target": 26}, {"source": 12, "target": 8}, {"source": 12, "target": 8}, {"source": 12, "target": 27}, {"source": 12, "target": 28}, {"source": 12, "target": 29}, {"source": 12, "target": 30}, {"source": 12, "target": 31}, {"source": 12, "target": 32}, {"source": 12, "target": 33}, {"source": 12, "target": 34}, {"source": 12, "target": 35}, {"source": 12, "target": 36}, {"source": 12, "target": 36}, {"source": 12, "target": 37}, {"source": 12, "target": 38}, {"source": 14, "target": 34}, {"source": 16, "target": 0}, {"source": 17, "target": 0}, {"source": 20, "target": 18}, {"source": 20, "target": 32}, {"source": 20, "target": 34}, {"source": 20, "target": 38}, {"source": 25, "target": 38}, {"source": 26, "target": 34}, {"source": 26, "target": 32}, {"source": 26, "target": 0}, {"source": 28, "target": 20}, {"source": 28, "target": 32}, {"source": 28, "target": 0}, {"source": 28, "target": 34}, {"source": 28, "target": 35}, {"source": 28, "target": 38}, {"source": 29, "target": 33}, {"source": 29, "target": 35}, {"source": 30, "target": 34}, {"source": 30, "target": 33}, {"source": 30, "target": 38}, {"source": 32, "target": 22}, {"source": 32, "target": 35}, {"source": 33, "target": 15}, {"source": 33, "target": 25}, {"source": 33, "target": 26}, {"source": 33, "target": 28}, {"source": 33, "target": 32}, {"source": 33, "target": 0}, {"source": 33, "target": 34}, {"source": 33, "target": 35}, {"source": 33, "target": 37}, {"source": 33, "target": 38}, {"source": 36, "target": 34}, {"source": 36, "target": 33}, {"source": 37, "target": 28}, {"source": 37, "target": 33}, {"source": 37, "target": 35}, {"source": 38, "target": 22}, {"source": 40, "target": 34}, {"source": 40, "target": 33}, {"source": 41, "target": 42}, {"source": 41, "target": 43}, {"source": 41, "target": 44}, {"source": 42, "target": 35}, {"source": 42, "target": 43}, {"source": 45, "target": 46}, {"source": 45, "target": 47}, {"source": 45, "target": 48}, {"source": 45, "target": 49}, {"source": 45, "target": 50}, {"source": 45, "target": 51}, {"source": 45, "target": 40}, {"source": 45, "target": 52}, {"source": 45, "target": 53}, {"source": 45, "target": 54}, {"source": 45, "target": 55}, {"source": 45, "target": 56}, {"source": 45, "target": 57}, {"source": 45, "target": 58}, {"source": 45, "target": 59}, {"source": 45, "target": 40}, {"source": 45, "target": 60}, {"source": 45, "target": 61}, {"source": 45, "target": 62}, {"source": 45, "target": 63}, {"source": 45, "target": 64}, {"source": 45, "target": 65}, {"source": 47, "target": 0}, {"source": 47, "target": 33}, {"source": 49, "target": 0}, {"source": 50, "target": 0}, {"source": 50, "target": 35}, {"source": 52, "target": 0}, {"source": 53, "target": 33}, {"source": 53, "target": 0}, {"source": 53, "target": 35}, {"source": 54, "target": 0}, {"source": 54, "target": 35}, {"source": 55, "target": 33}, {"source": 55, "target": 4}, {"source": 55, "target": 35}, {"source": 56, "target": 38}, {"source": 57, "target": 53}, {"source": 57, "target": 0}, {"source": 57, "target": 35}, {"source": 58, "target": 52}, {"source": 58, "target": 0}, {"source": 58, "target": 35}, {"source": 59, "target": 33}, {"source": 59, "target": 35}, {"source": 60, "target": 33}, {"source": 60, "target": 35}, {"source": 61, "target": 0}, {"source": 62, "target": 35}, {"source": 63, "target": 33}, {"source": 63, "target": 35}, {"source": 64, "target": 33}, {"source": 65, "target": 0}, {"source": 66, "target": 67}, {"source": 66, "target": 68}, {"source": 66, "target": 69}, {"source": 69, "target": 67}, {"source": 69, "target": 68}, {"source": 69, "target": 35}, {"source": 70, "target": 71}, {"source": 70, "target": 72}, {"source": 71, "target": 0}, {"source": 71, "target": 34}, {"source": 71, "target": 38}, {"source": 72, "target": 71}, {"source": 72, "target": 0}, {"source": 72, "target": 38}, {"source": 73, "target": 74}, {"source": 73, "target": 75}, {"source": 73, "target": 76}, {"source": 73, "target": 77}, {"source": 73, "target": 78}, {"source": 73, "target": 79}, {"source": 73, "target": 80}, {"source": 73, "target": 81}, {"source": 74, "target": 0}, {"source": 74, "target": 81}, {"source": 75, "target": 66}, {"source": 75, "target": 0}, {"source": 75, "target": 81}, {"source": 76, "target": 66}, {"source": 76, "target": 0}, {"source": 76, "target": 81}, {"source": 77, "target": 66}, {"source": 77, "target": 0}, {"source": 77, "target": 81}, {"source": 78, "target": 66}, {"source": 78, "target": 0}, {"source": 78, "target": 81}, {"source": 79, "target": 66}, {"source": 79, "target": 0}, {"source": 79, "target": 81}, {"source": 80, "target": 66}, {"source": 80, "target": 0}, {"source": 80, "target": 81}, {"source": 81, "target": 0}, {"source": 82, "target": 83}, {"source": 82, "target": 84}, {"source": 82, "target": 85}, {"source": 82, "target": 86}, {"source": 82, "target": 87}, {"source": 82, "target": 88}, {"source": 82, "target": 89}, {"source": 82, "target": 90}, {"source": 82, "target": 91}, {"source": 82, "target": 92}, {"source": 83, "target": 0}, {"source": 84, "target": 0}, {"source": 85, "target": 0}, {"source": 86, "target": 0}, {"source": 87, "target": 0}, {"source": 88, "target": 0}, {"source": 90, "target": 0}, {"source": 91, "target": 0}, {"source": 92, "target": 0}, {"source": 93, "target": 94}, {"source": 93, "target": 95}, {"source": 94, "target": 95}, {"source": 94, "target": 96}, {"source": 94, "target": 97}, {"source": 96, "target": 0}, {"source": 97, "target": 0}, {"source": 97, "target": 0}]}