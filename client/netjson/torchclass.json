{"nodes": [{"name": "torch.library.Library", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.overrides.BaseTorchFunctionMode", "myparent": "torch.overrides.TorchFunctionMode", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.overrides.TorchFunctionMode", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.overrides._TorchFunctionStackMode", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.overrides.enable_reentrant_dispatch", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.quasirandom.SobolEngine", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "MAXBIT", "MAXDIM", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.return_types._attr", "myparent": "builtins.tuple", "methods": [], "attributes": ["solution", "cloned_coefficient", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._fake_quantize_per_tensor_affine_cachemask_tensor_qparams", "myparent": "builtins.tuple", "methods": [], "attributes": ["output", "mask", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._fused_moving_avg_obs_fq_helper", "myparent": "builtins.tuple", "methods": [], "attributes": ["output", "mask", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_det", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_det_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_eigh", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_eigh_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_slogdet", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_slogdet_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_solve_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "LU", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_solve_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "LU", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_svd", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "Vh", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._linalg_svd_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "Vh", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._lu_with_info", "myparent": "builtins.tuple", "methods": [], "attributes": ["LU", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types._unpack_dual", "myparent": "builtins.tuple", "methods": [], "attributes": ["primal", "tangent", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.aminmax", "myparent": "builtins.tuple", "methods": [], "attributes": ["min", "max", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.aminmax_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["min", "max", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.cummax", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.cummax_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.cummin", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.cummin_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.frexp", "myparent": "builtins.tuple", "methods": [], "attributes": ["mantissa", "exponent", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.frexp_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["mantissa", "exponent", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.geqrf", "myparent": "builtins.tuple", "methods": [], "attributes": ["a", "tau", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.geqrf_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["a", "tau", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.histogram", "myparent": "builtins.tuple", "methods": [], "attributes": ["hist", "bin_edges", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.histogram_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["hist", "bin_edges", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.histogramdd", "myparent": "builtins.tuple", "methods": [], "attributes": ["hist", "bin_edges", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.kthvalue", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.kthvalue_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_cholesky_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["L", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_cholesky_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["L", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_eig", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_eig_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_eigh", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_eigh_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_inv_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["inverse", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_inv_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["inverse", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_ldl_factor", "myparent": "builtins.tuple", "methods": [], "attributes": ["LD", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_ldl_factor_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["LD", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_ldl_factor_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["LD", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_ldl_factor_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["LD", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lstsq", "myparent": "builtins.tuple", "methods": [], "attributes": ["solution", "residuals", "rank", "singular_values", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lstsq_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["solution", "residuals", "rank", "singular_values", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu", "myparent": "builtins.tuple", "methods": [], "attributes": ["P", "L", "U", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu_factor", "myparent": "builtins.tuple", "methods": [], "attributes": ["LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu_factor_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["LU", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu_factor_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["LU", "pivots", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu_factor_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["LU", "pivots", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_lu_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["P", "L", "U", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_qr", "myparent": "builtins.tuple", "methods": [], "attributes": ["Q", "R", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_qr_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["Q", "R", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_slogdet", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_slogdet_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_solve_ex", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_solve_ex_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["result", "info", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_svd", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "Vh", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.linalg_svd_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "Vh", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.lu_unpack", "myparent": "builtins.tuple", "methods": [], "attributes": ["P", "L", "U", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.lu_unpack_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["P", "L", "U", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.max", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.max_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.median", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.median_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.min", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.min_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.mode", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.mode_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.nanmedian", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.nanmedian_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.qr", "myparent": "builtins.tuple", "methods": [], "attributes": ["Q", "R", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.qr_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["Q", "R", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.slogdet", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.slogdet_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["sign", "logabsdet", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.sort", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.sort_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.svd", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "V", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.svd_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["U", "S", "V", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.symeig", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.symeig_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["eigenvalues", "eigenvectors", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.topk", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.topk_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["values", "indices", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.triangular_solve", "myparent": "builtins.tuple", "methods": [], "attributes": ["solution", "cloned_coefficient", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.return_types.triangular_solve_out", "myparent": "builtins.tuple", "methods": [], "attributes": ["solution", "cloned_coefficient", "__doc__", "n_sequence_fields", "n_fields", "n_unnamed_fields"], "otherclasseslink": []}, {"name": "torch.serialization.SourceChangeWarning", "myparent": "builtins.Warning", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization.StorageType", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_buffer_reader", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_buffer_writer", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_file", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_zipfile_reader", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_zipfile_writer_buffer", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._open_zipfile_writer_file", "myparent": "torch.serialization._opener", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.serialization._opener", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.storage.TypedStorage", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "is_sparse", "is_cuda", "_cdata", "device", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.storage.UntypedStorage", "myparent": "torch._C.StorageBase|torch.storage._StorageBas", "methods": [], "attributes": ["__module__", "is_cuda", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.storage._LegacyStorage", "myparent": "torch.storage.TypedStorage", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.storage._LegacyStorageMeta", "myparent": "builtins.type", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.storage._StorageBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "is_sparse", "is_sparse_csr", "is_cuda", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.torch_version.TorchVersion", "myparent": "builtins.str", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.torch_version._LazyImport", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.types.Storage", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.types.SymInt", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.amp.autocast_mode.autocast", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.BNReLU2d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.BNReLU3d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBn1d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBn2d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBn3d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBnReLU1d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBnReLU2d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvBnReLU3d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvReLU1d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvReLU2d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.ConvReLU3d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.LinearBn1d", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused.LinearReLU", "myparent": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.intrinsic.modules.fused._FusedModule", "myparent": "torch.nn.modules.container.Sequential", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.dynamic.modules.linear.Linear", "myparent": "torch.ao.nn.qat.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.conv.Conv1d", "myparent": "torch.ao.nn.qat.modules.conv._ConvNd|torch.nn.modules.conv.Conv1", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.conv.Conv2d", "myparent": "torch.ao.nn.qat.modules.conv._ConvNd|torch.nn.modules.conv.Conv2", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.conv.Conv3d", "myparent": "torch.ao.nn.qat.modules.conv._ConvNd|torch.nn.modules.conv.Conv3", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.conv._ConvNd", "myparent": "torch.nn.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "_FLOAT_MODULE", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.embedding_ops.Embedding", "myparent": "torch.nn.modules.sparse.Embedding", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.embedding_ops.EmbeddingBag", "myparent": "torch.nn.modules.sparse.EmbeddingBag", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.qat.modules.linear.Linear", "myparent": "torch.nn.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantizable.modules.activation.MultiheadAttention", "myparent": "torch.nn.modules.activation.MultiheadAttention", "methods": [], "attributes": ["__module__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantizable.modules.rnn.LSTM", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantizable.modules.rnn.LSTMCell", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantizable.modules.rnn._LSTMLayer", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantizable.modules.rnn._LSTMSingleLayer", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv1d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv1d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv2d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv2d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv3d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv3d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose1d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose2d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose3d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.linear.Linear", "myparent": "torch.ao.nn.quantized.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__", "_version", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.GRU", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__", "__overloads__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.GRUCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.LSTM", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__", "__overloads__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.LSTMCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.PackedParameter", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.ELU", "myparent": "torch.nn.modules.activation.ELU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Hardswish", "myparent": "torch.nn.modules.activation.Hardswish", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.LeakyReLU", "myparent": "torch.nn.modules.activation.LeakyReLU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.MultiheadAttention", "myparent": "torch.ao.nn.quantizable.modules.activation.MultiheadAttention", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.PReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.ReLU6", "myparent": "torch.nn.modules.activation.ReLU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Sigmoid", "myparent": "torch.nn.modules.activation.Sigmoid", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Softmax", "myparent": "torch.nn.modules.activation.Softmax", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d", "myparent": "torch.ao.nn.quantized.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d", "myparent": "torch.ao.nn.quantized.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm._BatchNorm", "myparent": "torch.nn.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv1d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv2d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv3d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose1d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose2d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose3d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv._ConvNd", "myparent": "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "_FLOAT_MODULE", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.dropout.Dropout", "myparent": "torch.nn.modules.dropout.Dropout", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.Embedding", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "_version"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingBag", "myparent": "torch.ao.nn.quantized.modules.embedding_ops.Embedding", "methods": [], "attributes": ["__module__", "__doc__", "_version"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingPackedParams", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.FXFloatFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.FloatFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.QFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.linear.Linear", "myparent": "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule", "methods": [], "attributes": ["__module__", "__doc__", "_version", "_FLOAT_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.linear.LinearPackedParams", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.GroupNorm", "myparent": "torch.nn.modules.normalization.GroupNorm", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm1d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm1d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm2d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm2d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm3d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm3d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.LayerNorm", "myparent": "torch.nn.modules.normalization.LayerNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.rnn.LSTM", "myparent": "torch.ao.nn.quantizable.modules.rnn.LSTM", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.Conv1d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvNd|torch.nn.modules.conv.Conv1", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.Conv2d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvNd|torch.nn.modules.conv.Conv2", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.Conv3d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvNd|torch.nn.modules.conv.Conv3", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose1d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvTransposeNd|torch.nn.modules.conv.ConvTranspose1", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose2d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvTransposeNd|torch.nn.modules.conv.ConvTranspose2", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv.ConvTranspose3d", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvTransposeNd|torch.nn.modules.conv.ConvTranspose3", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv._ConvNd", "myparent": "torch.nn.modules.conv._ConvNd|torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModul", "methods": [], "attributes": ["__module__", "__doc__", "__annotations__", "_IS_REFERENCE"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv._ConvTransposeNd", "myparent": "torch.ao.nn.quantized.reference.modules.conv._ConvNd|torch.nn.modules.conv._ConvTransposeN", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.linear.Linear", "myparent": "torch.nn.modules.linear.Linear|torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModul", "methods": [], "attributes": ["__module__", "__doc__", "_IS_REFERENCE"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.GRUCell", "myparent": "torch.ao.nn.quantized.reference.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.LSTM", "myparent": "torch.ao.nn.quantized.reference.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.LSTMCell", "myparent": "torch.ao.nn.quantized.reference.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.RNNBase", "myparent": "torch.nn.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.RNNCell", "myparent": "torch.ao.nn.quantized.reference.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn.RNNCellBase", "myparent": "torch.nn.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.sparse.Embedding", "myparent": "torch.nn.modules.sparse.Embedding|torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModul", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.sparse.EmbeddingBag", "myparent": "torch.nn.modules.sparse.EmbeddingBag|torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModul", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModule", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.sparse.quantized.linear.Linear", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "_version"], "otherclasseslink": []}, {"name": "torch.ao.nn.sparse.quantized.linear.LinearPackedParams", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.sparse.quantized.utils.LinearBlockSparsePattern", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "rlock", "row_block_size", "col_block_size", "prev_row_block_size", "prev_col_block_size", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.sparse.quantized.dynamic.linear.Linear", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "_version", "_op_type"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fake_quantize.FakeQuantize", "myparent": "torch.ao.quantization.fake_quantize.FakeQuantizeBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fake_quantize.FakeQuantizeBase", "myparent": "abc.ABC|torch.nn.modules.module.Modul", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fake_quantize.FixedQParamsFakeQuantize", "myparent": "torch.ao.quantization.fake_quantize.FakeQuantize", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fake_quantize.FusedMovingAvgObsFakeQuantize", "myparent": "torch.ao.quantization.fake_quantize.FakeQuantize", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.FixedQParamsObserver", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.HistogramObserver", "myparent": "torch.ao.quantization.observer.UniformQuantizationObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.MinMaxObserver", "myparent": "torch.ao.quantization.observer.UniformQuantizationObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.MovingAverageMinMaxObserver", "myparent": "torch.ao.quantization.observer.MinMaxObserver", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.MovingAveragePerChannelMinMaxObserver", "myparent": "torch.ao.quantization.observer.PerChannelMinMaxObserver", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.NoopObserver", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.ObserverBase", "myparent": "abc.ABC|torch.nn.modules.module.Modul", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.PerChannelMinMaxObserver", "myparent": "torch.ao.quantization.observer.UniformQuantizationObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.PlaceholderObserver", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.RecordingObserver", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__annotations__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.ReuseInputObserver", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.UniformQuantizationObserverBase", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_version", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer._ObserverBase", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_version", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer._PartialWrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.default_debug_observer", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__annotations__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.default_placeholder_observer", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.observer.default_reuse_input_observer", "myparent": "torch.ao.quantization.observer.ObserverBase", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.qconfig.QConfig", "myparent": "torch.ao.quantization.qconfig.QConfig", "methods": [], "attributes": ["__module__", "__doc__", "__dict__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.qconfig.QConfigDynamic", "myparent": "torch.ao.quantization.qconfig.QConfigDynamic", "methods": [], "attributes": ["__module__", "__doc__", "__dict__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.qconfig_mapping.QConfigMapping", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.quant_type.QuantType", "myparent": "enum.IntEnum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "DYNAMIC", "STATIC", "QAT", "WEIGHT_ONLY"], "otherclasseslink": []}, {"name": "torch.ao.quantization.stubs.DeQuantStub", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.stubs.QuantStub", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.stubs.QuantWrapper", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.utils.MatchAllNode", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.backend_config.backend_config.BackendConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.backend_config.backend_config.BackendPatternConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.backend_config.backend_config.DTypeConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "input_dtype", "output_dtype", "weight_dtype", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.backend_config.backend_config.DTypeWithConstraints", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "dtype", "quant_min_lower_bound", "quant_max_upper_bound", "scale_min_lower_bound", "scale_max_upper_bound", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.backend_config.backend_config.ObservationType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "OUTPUT_USE_DIFFERENT_OBSERVER_AS_INPUT", "OUTPUT_SHARE_OBSERVER_WITH_INPUT"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.custom_config.ConvertCustomConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.custom_config.FuseCustomConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.custom_config.PrepareCustomConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.custom_config.StandaloneModuleConfigEntry", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.fusion_patterns.DefaultFuseHandler", "myparent": "torch.ao.quantization.fx.fusion_patterns.FuseHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.fusion_patterns.FuseHandler", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.graph_module.FusedGraphModule", "myparent": "torch.fx.graph_module.GraphModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.graph_module.ObservedGraphModule", "myparent": "torch.fx.graph_module.GraphModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.graph_module.ObservedStandaloneGraphModule", "myparent": "torch.ao.quantization.fx.graph_module.ObservedGraphModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.graph_module.QuantizedGraphModule", "myparent": "torch.fx.graph_module.GraphModule", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.BatchNormQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.BinaryOpQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.CatQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.ConvReluQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.CopyNodeQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.CustomModuleQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.DefaultNodeQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.EmbeddingQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.FixedQParamsOpQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.GeneralTensorShapeOpQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.LinearReLUQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.RNNDynamicQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.quantization_patterns.StandaloneModuleQuantizeHandler", "myparent": "torch.ao.quantization.fx.quantization_patterns.QuantizeHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.quantization.fx.utils.NodeInfo", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "op", "target", "__module__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.scheduler.base_scheduler.BaseScheduler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.scheduler.cubic_scheduler.CubicSL", "myparent": "torch.ao.sparsity.scheduler.base_scheduler.BaseScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.scheduler.lambda_scheduler.LambdaSL", "myparent": "torch.ao.sparsity.scheduler.base_scheduler.BaseScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.sparsifier.base_sparsifier.BaseSparsifier", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.sparsifier.nearly_diagonal_sparsifier.NearlyDiagonalSparsifier", "myparent": "torch.ao.sparsity.sparsifier.base_sparsifier.BaseSparsifier", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.sparsifier.utils.FakeSparsity", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity.sparsifier.weight_norm_sparsifier.WeightNormSparsifier", "myparent": "torch.ao.sparsity.sparsifier.base_sparsifier.BaseSparsifier", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.data_scheduler.base_data_scheduler.BaseDataScheduler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.data_sparsifier.base_data_sparsifier.BaseDataSparsifier", "myparent": "torch.ao.sparsity.sparsifier.base_sparsifier.BaseSparsifier", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.data_sparsifier.base_data_sparsifier._Container", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.data_sparsifier.data_norm_sparsifier.DataNormSparsifier", "myparent": "torch.ao.sparsity._experimental.data_sparsifier.base_data_sparsifier.BaseDataSparsifier", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.pruner.base_pruner.BasePruner", "myparent": "torch.ao.sparsity.sparsifier.base_sparsifier.BaseSparsifier", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.pruner.parametrization.ActivationReconstruction", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.pruner.parametrization.BiasHook", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.pruner.parametrization.PruningParametrization", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.sparsity._experimental.pruner.parametrization.ZeroesParametrization", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.anomaly_mode.detect_anomaly", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.anomaly_mode.set_detect_anomaly", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.forward_ad.UnpackedDualTensor", "myparent": "torch.autograd.forward_ad._UnpackedDualTensor", "methods": [], "attributes": ["__module__", "__doc__", "__dict__"], "otherclasseslink": []}, {"name": "torch.autograd.forward_ad._UnpackedDualTensor", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "primal", "tangent", "__module__"], "otherclasseslink": []}, {"name": "torch.autograd.forward_ad.dual_level", "myparent": "torch.autograd.grad_mode._DecoratorContextManager", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function.BackwardCFunction", "myparent": "torch._C._FunctionBase|torch.autograd.function.FunctionCtx|torch.autograd.function._HookMixi", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function.Function", "myparent": "torch._C._FunctionBase|torch.autograd.function.FunctionCtx|torch.autograd.function._HookMixi", "methods": [], "attributes": ["__module__", "__doc__", "is_traceable", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.function.FunctionCtx", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function.FunctionMeta", "myparent": "builtins.type", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function.InplaceFunction", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function.NestedIOFunction", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "saved_tensors", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function._ContextMethodMixin", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.function._HookMixin", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.grad_mode._DecoratorContextManager", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.grad_mode.enable_grad", "myparent": "torch.autograd.grad_mode._DecoratorContextManager", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.grad_mode.inference_mode", "myparent": "torch.autograd.grad_mode._DecoratorContextManager", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.grad_mode.no_grad", "myparent": "torch.autograd.grad_mode._DecoratorContextManager", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.grad_mode.set_grad_enabled", "myparent": "torch.autograd.grad_mode._DecoratorContextManager", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.graph.save_on_cpu", "myparent": "torch.autograd.graph.saved_tensors_hooks", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.graph.saved_tensors_hooks", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler.EnforceUnique", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler.emit_itt", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler.emit_nvtx", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler.profile", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "self_cpu_time_total", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler.record_function", "myparent": "contextlib.ContextDecorator", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.EventList", "myparent": "builtins.list", "methods": [], "attributes": ["__module__", "__doc__", "self_cpu_time_total", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.FormattedTimesMixin", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "cpu_time_str", "cuda_time_str", "cpu_time_total_str", "cuda_time_total_str", "self_cpu_time_total_str", "self_cuda_time_total_str", "cpu_time", "cuda_time", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.FunctionEvent", "myparent": "torch.autograd.profiler_util.FormattedTimesMixin", "methods": [], "attributes": ["__module__", "__doc__", "self_cpu_memory_usage", "self_cuda_memory_usage", "self_cpu_time_total", "cuda_time_total", "self_cuda_time_total", "cpu_time_total", "key"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.FunctionEventAvg", "myparent": "torch.autograd.profiler_util.FormattedTimesMixin", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.Interval", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.Kernel", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "name", "device", "duration", "__module__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.MemRecordsAcc", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.autograd.profiler_util.StringTable", "myparent": "collections.defaultdict", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd._functions.tensor.Resize", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.autograd._functions.tensor.Type", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cpu.amp.autocast_mode.autocast", "myparent": "torch.amp.autocast_mode.autocast", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.graphs.CUDAGraph", "myparent": "torch.cuda._utils._CUDAGraph", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.graphs.graph", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "default_capture_stream", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.cuda.jiterator._CodeParser", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.jiterator._JittedFunction", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.nvtx._NVTXStub", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.BFloat16Tensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.ByteTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.CharTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.DoubleTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.FloatTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.HalfTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.IntTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.LongTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.sparse.ShortTensor", "myparent": "builtins.object", "methods": [], "attributes": ["__doc__", "__module__", "__array_priority__", "__cuda_array_interface__", "__dict__", "__weakref__", "_python_dispatch", "T", "H", "mT", "mH", "_cdata", "_version", "grad_fn", "_grad_fn", "is_leaf", "retains_grad", "data", "_grad", "grad", "_base", "volatile", "output_nr", "requires_grad", "_backward_hooks", "name", "shape", "is_cuda", "is_cpu", "is_xpu", "is_ipu", "is_sparse", "is_sparse_csr", "is_mkldnn", "is_mps", "is_ort", "is_vulkan", "is_quantized", "is_meta", "is_nested", "_has_symbolic_sizes_strides", "dtype", "layout", "device", "ndim", "names", "real", "imag"], "otherclasseslink": []}, {"name": "torch.cuda.streams.Event", "myparent": "torch.cuda._utils._CudaEventBase", "methods": [], "attributes": ["__module__", "__doc__", "_as_parameter_"], "otherclasseslink": []}, {"name": "torch.cuda.streams.ExternalStream", "myparent": "torch.cuda.streams.Stream", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.streams.Stream", "myparent": "torch.cuda._utils._CudaStreamBase", "methods": [], "attributes": ["__module__", "__doc__", "_as_parameter_"], "otherclasseslink": []}, {"name": "torch.cuda.amp.autocast_mode.autocast", "myparent": "torch.amp.autocast_mode.autocast", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.amp.grad_scaler.GradScaler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.cuda.amp.grad_scaler.OptState", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "READY", "UNSCALED", "STEPPED"], "otherclasseslink": []}, {"name": "torch.cuda.amp.grad_scaler._MultiDeviceReplicator", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.AllToAllOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.AllreduceCoalescedOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "reduceOp", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.AllreduceOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "reduceOp", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.Backend", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "UNDEFINED", "GLOO", "NCCL", "UCC", "MPI", "TCP", "_plugins", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.BarrierOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "device_ids", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.BroadcastOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "rootRank", "rootTensor", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.DebugLevel", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "__entries", "name", "__members__", "value", "OFF", "INFO", "DETAIL"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.GatherOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "rootRank", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.GroupMember", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "WORLD", "NON_GROUP_MEMBER", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.P2POp", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.PrefixStore", "myparent": "torch.distributed.distributed_c10d.Store", "methods": [], "attributes": ["__doc__", "__module__", "underlying_store"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ProcessGroup", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ProcessGroupGloo", "myparent": "torch.distributed.distributed_c10d.ProcessGroup", "methods": [], "attributes": ["__doc__", "__module__", "options"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ReduceOp", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "op", "SUM", "AVG", "PRODUCT", "MIN", "MAX", "BAND", "BOR", "BXOR", "PREMUL_SUM"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ReduceOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "reduceOp", "rootRank", "rootTensor", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ReduceScatterOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "reduceOp", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.ScatterOptions", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "rootRank", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.Store", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__", "timeout"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.Work", "myparent": "pybind11_builtins.pybind11_object", "methods": [], "attributes": ["__doc__", "__module__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d._reduce_op", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.dist_backend", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "UNDEFINED", "GLOO", "NCCL", "UCC", "MPI", "TCP", "_plugins", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.distributed_c10d.group", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "WORLD", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.remote_device._remote_device", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.join.Join", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.join.JoinHook", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.join.Joinable", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "join_device", "join_process_group", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.join._JoinConfig", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "enable", "throw_on_early_termination", "is_first_joinable", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.ddp_comm_hooks.optimizer_overlap_hooks._OptimizerHookState", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "functional_optimizer", "params_to_optimize"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.ddp_comm_hooks.powerSGD_hook.PowerSGDState", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "batch_tensors_with_same_shape", "compression_stats_logging_frequency", "error_dict", "iter", "matrix_approximation_rank", "min_compression_rate", "next_stats_report", "orthogonalization_epsilon", "p_memory_dict", "process_group", "q_memory_dict", "rng", "start_powerSGD_iter", "total_numel_after_compression", "total_numel_before_compression", "use_error_feedback", "warm_start"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.model_averaging.averagers.ModelAverager", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms.model_averaging.averagers.PeriodicModelAverager", "myparent": "torch.distributed.algorithms.model_averaging.averagers.ModelAverager", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._checkpoint.checkpoint_wrapper.CheckpointImpl", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "REENTRANT", "NO_REENTRANT"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._checkpoint.checkpoint_wrapper.CheckpointWrapper", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._comm_hooks.default_hooks.DefaultState", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "gradient_postdivide_factor", "gradient_predivide_factor", "process_group", "world_size"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._comm_hooks.default_hooks.LowPrecisionState", "myparent": "torch.distributed.algorithms._comm_hooks.default_hooks.DefaultState", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "parameter_type"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._optimizer_overlap.optimizer_overlap.OverlappedOptimizer", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.algorithms._optimizer_overlap.optimizer_overlap._OverlappedStandardOptimizer", "myparent": "torch.distributed.algorithms._optimizer_overlap.optimizer_overlap.OverlappedOptimizer", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.ElasticAgent", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.RunResult", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.SimpleElasticAgent", "myparent": "torch.distributed.elastic.agent.server.api.ElasticAgent", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.Worker", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "global_rank", "id", "local_rank", "role_rank", "role_world_size", "world_size"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.WorkerGroup", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "group_rank", "group_world_size", "spec", "state", "store", "workers"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.WorkerSpec", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "fn", "entrypoint", "args", "max_restarts", "monitor_interval", "master_port", "master_addr", "redirects", "tee", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api.WorkerState", "myparent": "builtins.str|enum.Enu", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "_member_names_", "_member_map_", "_value2member_map_", "UNKNOWN", "INIT", "HEALTHY", "UNHEALTHY", "STOPPED", "SUCCEEDED", "FAILED"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.api._RoleInstanceInfo", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "local_world_size", "rank", "role"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.agent.server.local_elastic_agent.LocalElasticAgent", "myparent": "torch.distributed.elastic.agent.server.api.SimpleElasticAgent", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.events.api.Event", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "timestamp", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.events.api.EventSource", "myparent": "builtins.str|enum.Enu", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "_member_names_", "_member_map_", "_value2member_map_", "AGENT", "WORKER"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.events.api.NodeState", "myparent": "builtins.str|enum.Enu", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "_member_names_", "_member_map_", "_value2member_map_", "INIT", "RUNNING", "SUCCEEDED", "FAILED"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.events.api.RdzvEvent", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "master_endpoint", "rank", "local_id", "error_trace", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.ConsoleMetricHandler", "myparent": "torch.distributed.elastic.metrics.api.MetricHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.MetricData", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "timestamp", "group_name", "name", "value", "__module__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.MetricHandler", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.MetricStream", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.MetricsConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__slots__", "params", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.metrics.api.NullMetricHandler", "myparent": "torch.distributed.elastic.metrics.api.MetricHandler", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.MultiprocessContext", "myparent": "torch.distributed.elastic.multiprocessing.api.PContext", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.PContext", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.RunProcsResult", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.SignalException", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.Std", "myparent": "enum.IntFlag", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "NONE", "OUT", "ERR", "ALL"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.SubprocessContext", "myparent": "torch.distributed.elastic.multiprocessing.api.PContext", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.api.SubprocessHandler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.tail_log.TailLog", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.multiprocessing.errors.error_handler.ErrorHandler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousClosedError", "myparent": "torch.distributed.elastic.rendezvous.api.RendezvousError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousConnectionError", "myparent": "torch.distributed.elastic.rendezvous.api.RendezvousError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousHandler", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousHandlerRegistry", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousParameters", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousStateError", "myparent": "torch.distributed.elastic.rendezvous.api.RendezvousError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.api.RendezvousTimeoutError", "myparent": "torch.distributed.elastic.rendezvous.api.RendezvousError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous.DynamicRendezvousHandler", "myparent": "torch.distributed.elastic.rendezvous.api.RendezvousHandler", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_node_desc_generator", "settings", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousBackend", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "name", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousSettings", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous.RendezvousTimeout", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_ZERO", "_DEFAULT_TIMEOUTS", "join", "last_call", "close", "heartbeat", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._Action", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "KEEP_ALIVE", "ADD_TO_PARTICIPANTS", "ADD_TO_WAIT_LIST", "REMOVE_FROM_PARTICIPANTS", "REMOVE_FROM_WAIT_LIST", "MARK_RENDEZVOUS_COMPLETE", "MARK_RENDEZVOUS_CLOSED", "SYNC", "ERROR_CLOSED", "ERROR_TIMEOUT", "FINISH"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._BackendRendezvousStateHolder", "myparent": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousStateHolder", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "state", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._DistributedRendezvousOpExecutor", "myparent": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousOpExecutor", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._NodeDesc", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._NodeDescGenerator", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousCloseOp", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousContext", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousExitOp", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousJoinOp", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousKeepAliveOp", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousOpExecutor", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousState", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.dynamic_rendezvous._RendezvousStateHolder", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "state", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.rendezvous.utils._PeriodicTimer", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "name", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.api.RequestQueue", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.api.TimerClient", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.api.TimerRequest", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "expiration_time", "scope_id", "worker_id", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.api.TimerServer", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.file_based_local_timer.FileTimerClient", "myparent": "torch.distributed.elastic.timer.api.TimerClient", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.file_based_local_timer.FileTimerRequest", "myparent": "torch.distributed.elastic.timer.api.TimerRequest", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "expiration_time", "scope_id", "signal", "version", "worker_pid", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.file_based_local_timer.FileTimerServer", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.local_timer.LocalTimerClient", "myparent": "torch.distributed.elastic.timer.api.TimerClient", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.local_timer.LocalTimerServer", "myparent": "torch.distributed.elastic.timer.api.TimerServer", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.timer.local_timer.MultiprocessingRequestQueue", "myparent": "torch.distributed.elastic.timer.api.RequestQueue", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.utils.api.macros", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "local_rank", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.utils.data.cycling_iterator.CyclingIterator", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.elastic.utils.data.elastic_distributed_sampler.ElasticDistributedSampler", "myparent": "torch.utils.data.distributed.DistributedSampler", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flatten_params_wrapper.FlattenParamsWrapper", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "has_params", "handle", "module"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.FlatParamHandle", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "uses_sharded_strategy", "_uses_param_mixed_precision", "_force_full_precision", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.FlatParamShardMetadata", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "param_names", "param_shapes", "param_numels", "param_offsets", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.FlatParameter", "myparent": "torch.nn.parameter.Parameter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.HandleConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "keep_low_precision_grads", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.HandleShardingStrategy", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "FULL_SHARD", "SHARD_GRAD_OP", "NO_SHARD"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.HandleTrainingState", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "IDLE", "FORWARD", "BACKWARD_PRE", "BACKWARD_POST", "SUMMON_FULL_PARAMS"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.ParamInfo", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "param_name", "module", "module_name", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.flat_param.SharedParamInfo", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "param_name", "module", "module_name", "prim_param_name", "prim_module", "prim_module_name", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.BackwardPrefetch", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "BACKWARD_PRE", "BACKWARD_POST"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.CPUOffload", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "offload_params", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.FullStateDictConfig", "myparent": "torch.distributed.fsdp.fully_sharded_data_parallel.StateDictConfig", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "offload_to_cpu", "rank0_only", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.FullyShardedDataParallel", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "module", "_param_fqns", "params_with_grad"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.LocalStateDictConfig", "myparent": "torch.distributed.fsdp.fully_sharded_data_parallel.StateDictConfig", "methods": [], "attributes": ["__module__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.MixedPrecision", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "param_dtype", "reduce_dtype", "buffer_dtype", "keep_low_precision_grads", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.OptimStateKeyType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "PARAM_NAME", "PARAM_ID"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.ShardedStateDictConfig", "myparent": "torch.distributed.fsdp.fully_sharded_data_parallel.StateDictConfig", "methods": [], "attributes": ["__module__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.ShardingStrategy", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "FULL_SHARD", "SHARD_GRAD_OP", "NO_SHARD"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.StateDictConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.StateDictType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "FULL_STATE_DICT", "LOCAL_STATE_DICT", "SHARDED_STATE_DICT"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel.TrainingState_", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "IDLE", "FORWARD", "BACKWARD_PRE", "BACKWARD_POST", "SUMMON_FULL_PARAMS"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel._ExecOrderData", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel._ExecOrderWarnStatus", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "NONE", "WARNING", "WARNED"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.fully_sharded_data_parallel._FreeEventQueue", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.wrap.ParamExecOrderWrapPolicy", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "tracing_config", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.fsdp.wrap._ConfigAutoWrap", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "in_autowrap_context", "wrapper_cls", "kwargs", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.launcher.api.LaunchConfig", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "run_id", "role", "rdzv_endpoint", "rdzv_backend", "rdzv_timeout", "max_restarts", "monitor_interval", "start_method", "log_dir", "redirects", "tee", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed.launcher.api.elastic_launch", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._AllGather", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._AllGatherBase", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._AllReduce", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._AlltoAll", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._AlltoAllSingle", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._Broadcast", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._Gather", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._Reduce", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._Reduce_Scatter", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.nn.functional._Scatter", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_adadelta._FunctionalAdadelta", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_adagrad._FunctionalAdagrad", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_adam._FunctionalAdam", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_adamax._FunctionalAdamax", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_adamw._FunctionalAdamW", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_rmsprop._FunctionalRMSprop", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_rprop._FunctionalRprop", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.functional_sgd._FunctionalSGD", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.post_localSGD_optimizer.PostLocalSGDOptimizer", "myparent": "torch.optim.optimizer.Optimizer", "methods": [], "attributes": ["__module__", "__doc__", "state"], "otherclasseslink": []}, {"name": "torch.distributed.optim.zero_redundancy_optimizer.ZeroRedundancyOptimizer", "myparent": "torch.optim.optimizer.Optimizer|torch.distributed.algorithms.join.Joinabl", "methods": [], "attributes": ["__module__", "__doc__", "_param_to_rank", "_param_to_index", "_index_to_param", "_device_to_params_per_rank", "_bucket_assignments_per_rank", "join_device", "join_process_group", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed.optim.zero_redundancy_optimizer._DDPBucketAssignment", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.zero_redundancy_optimizer._OverlapInfo", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed.optim.zero_redundancy_optimizer._OverlapStatus", "myparent": "enum.IntEnum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "UNINITIALIZED", "DDP_HAS_REBUILT_BUCKETS", "INITIALIZED"], "otherclasseslink": []}, {"name": "torch.distributed.optim.zero_redundancy_optimizer._ZeROJoinHook", "myparent": "torch.distributed.algorithms.join.JoinHook", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.metadata.ShardMetadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__slots__", "placement", "shard_offsets", "shard_sizes", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.partial_tensor._PartialTensor", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__slots__", "_local_shard", "_process_group", "_reduce_op"], "otherclasseslink": []}, {"name": "torch.distributed._shard.replicated_tensor.ReplicatedTensor", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__slots__", "_process_group"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharder.Sharder", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.api.CheckpointException", "myparent": "builtins.BaseException", "methods": [], "attributes": ["__module__", "__doc__", "failures", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.default_planner.DefaultLoadPlanner", "myparent": "torch.distributed._shard.checkpoint.planner.LoadPlanner", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.default_planner.DefaultSavePlanner", "myparent": "torch.distributed._shard.checkpoint.planner.SavePlanner", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.filesystem.FileSystemReader", "myparent": "torch.distributed._shard.checkpoint.storage.StorageReader", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.filesystem.FileSystemWriter", "myparent": "torch.distributed._shard.checkpoint.storage.StorageWriter", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.filesystem.SlicedBufferedReader", "myparent": "_io.BufferedReader", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.filesystem._StorageInfo", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.filesystem._StoragePrefix", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.metadata.BytesStorageMetadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.metadata.ChunkStorageMetadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.metadata.Metadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "planner_data", "storage_data", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.metadata.MetadataIndex", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "offset", "index", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.metadata.TensorStorageMetadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.LoadItemType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "TENSOR", "BYTE_IO"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.LoadPlan", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "storage_data", "planner_data", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.LoadPlanner", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.ReadItem", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.SavePlan", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "storage_data", "planner_data", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.SavePlanner", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.TensorWriteData", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.WriteItem", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "tensor_data", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.planner.WriteItemType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "TENSOR", "SHARD", "BYTE_IO"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.storage.StorageReader", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.storage.StorageWriter", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.storage.WriteResult", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.checkpoint.utils._DistWrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_optim.api.ShardedOptimizer", "myparent": "torch.optim.optimizer.Optimizer", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.api.ShardedTensor", "myparent": "torch.distributed._shard.sharded_tensor.api.ShardedTensorBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.api.ShardedTensorBase", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.metadata.MEM_FORMAT_ENCODING", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "TORCH_CONTIGUOUS_FORMAT", "TORCH_CHANNELS_LAST", "TORCH_PRESERVE_FORMAT"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.metadata.ShardedTensorMetadata", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "size", "tensor_properties", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.metadata.TensorProperties", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "dtype", "layout", "requires_grad", "memory_format", "pin_memory", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharded_tensor.shard.Shard", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__slots__", "metadata", "tensor", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_plan.api.ShardingPlan", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "output_plan", "return_local_tensor", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_plan.api.ShardingPlanner", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.api.DevicePlacementSpec", "myparent": "torch.distributed._shard.sharding_spec.api.PlacementSpec", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.api.EnumerableShardingSpec", "myparent": "torch.distributed._shard.sharding_spec.api.ShardingSpec", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.api.PlacementSpec", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.api.ShardingSpec", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.chunk_sharding_spec.ChunkShardingSpec", "myparent": "torch.distributed._shard.sharding_spec.api.ShardingSpec", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.linear._BiasTensorNarrow", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributed._shard.sharding_spec.chunk_sharding_spec_ops.linear._BiasTensorPartial", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.bernoulli.Bernoulli", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_enumerate_support", "_mean_carrier_measure", "mean", "mode", "variance", "logits", "probs", "param_shape", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.beta.Beta", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance", "concentration1", "concentration0", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.binomial.Binomial", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "has_enumerate_support", "mean", "mode", "variance", "logits", "probs", "param_shape"], "otherclasseslink": []}, {"name": "torch.distributions.categorical.Categorical", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "has_enumerate_support", "logits", "probs", "param_shape", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.cauchy.Cauchy", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.chi2.Chi2", "myparent": "torch.distributions.gamma.Gamma", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "df"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.Constraint", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Boolean", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Cat", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._CorrCholesky", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Dependent", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._DependentProperty", "myparent": "builtins.property|torch.distributions.constraints._Dependen", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._GreaterThan", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._GreaterThanEq", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._HalfOpenInterval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._IndependentConstraint", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._IntegerGreaterThan", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._IntegerInterval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._IntegerLessThan", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Interval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._LessThan", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._LowerCholesky", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._LowerTriangular", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Multinomial", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._OneHot", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._PositiveDefinite", "myparent": "torch.distributions.constraints._Symmetric", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._PositiveSemidefinite", "myparent": "torch.distributions.constraints._Symmetric", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Real", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Simplex", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Square", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Stack", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints._Symmetric", "myparent": "torch.distributions.constraints._Square", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.cat", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.dependent_property", "myparent": "builtins.property|torch.distributions.constraints._Dependen", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.greater_than", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.greater_than_eq", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.half_open_interval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.independent", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.integer_interval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.interval", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.less_than", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.multinomial", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraints.stack", "myparent": "torch.distributions.constraints.Constraint", "methods": [], "attributes": ["__module__", "__doc__", "is_discrete", "event_dim"], "otherclasseslink": []}, {"name": "torch.distributions.constraint_registry.ConstraintRegistry", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.continuous_bernoulli.ContinuousBernoulli", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "_mean_carrier_measure", "has_rsample", "mean", "stddev", "variance", "logits", "probs", "param_shape", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.dirichlet.Dirichlet", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.dirichlet._Dirichlet", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.distributions.distribution.Distribution", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "has_rsample", "has_enumerate_support", "_validate_args", "batch_shape", "event_shape", "arg_constraints", "support", "mean", "mode", "variance", "stddev", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.exponential.Exponential", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "_mean_carrier_measure", "mean", "mode", "stddev", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.exp_family.ExponentialFamily", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "_natural_params", "_mean_carrier_measure"], "otherclasseslink": []}, {"name": "torch.distributions.fishersnedecor.FisherSnedecor", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.gamma.Gamma", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "_mean_carrier_measure", "mean", "mode", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.geometric.Geometric", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "mean", "mode", "variance", "logits", "probs"], "otherclasseslink": []}, {"name": "torch.distributions.gumbel.Gumbel", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "mean", "mode", "stddev", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.half_cauchy.HalfCauchy", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "scale", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.half_normal.HalfNormal", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "scale", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.independent.Independent", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "arg_constraints", "has_rsample", "has_enumerate_support", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.kl._Match", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__slots__", "types", "__doc__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.kumaraswamy.Kumaraswamy", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.laplace.Laplace", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance", "stddev"], "otherclasseslink": []}, {"name": "torch.distributions.lkj_cholesky.LKJCholesky", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support"], "otherclasseslink": []}, {"name": "torch.distributions.logistic_normal.LogisticNormal", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "loc", "scale"], "otherclasseslink": []}, {"name": "torch.distributions.log_normal.LogNormal", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "loc", "scale", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.lowrank_multivariate_normal.LowRankMultivariateNormal", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance", "scale_tril", "covariance_matrix", "precision_matrix"], "otherclasseslink": []}, {"name": "torch.distributions.mixture_same_family.MixtureSameFamily", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "arg_constraints", "has_rsample", "mixture_distribution", "component_distribution", "mean", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.multinomial.Multinomial", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "arg_constraints", "mean", "variance", "logits", "probs", "param_shape"], "otherclasseslink": []}, {"name": "torch.distributions.multivariate_normal.MultivariateNormal", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "scale_tril", "covariance_matrix", "precision_matrix", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.negative_binomial.NegativeBinomial", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "mean", "mode", "variance", "logits", "probs", "param_shape", "_gamma"], "otherclasseslink": []}, {"name": "torch.distributions.normal.Normal", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "_mean_carrier_measure", "mean", "mode", "stddev", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.one_hot_categorical.OneHotCategorical", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_enumerate_support", "_param", "probs", "logits", "mean", "mode", "variance", "param_shape"], "otherclasseslink": []}, {"name": "torch.distributions.one_hot_categorical.OneHotCategoricalStraightThrough", "myparent": "torch.distributions.one_hot_categorical.OneHotCategorical", "methods": [], "attributes": ["__module__", "__doc__", "has_rsample"], "otherclasseslink": []}, {"name": "torch.distributions.pareto.Pareto", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.poisson.Poisson", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "mean", "mode", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.distributions.relaxed_bernoulli.LogitRelaxedBernoulli", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "logits", "probs", "param_shape"], "otherclasseslink": []}, {"name": "torch.distributions.relaxed_bernoulli.RelaxedBernoulli", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "temperature", "logits", "probs"], "otherclasseslink": []}, {"name": "torch.distributions.relaxed_categorical.ExpRelaxedCategorical", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "param_shape", "logits", "probs"], "otherclasseslink": []}, {"name": "torch.distributions.relaxed_categorical.RelaxedOneHotCategorical", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "temperature", "logits", "probs"], "otherclasseslink": []}, {"name": "torch.distributions.studentT.StudentT", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.transformed_distribution.TransformedDistribution", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "arg_constraints", "has_rsample"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.AbsTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.AffineTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective", "event_dim", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.CatTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "event_dim", "length", "bijective"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.ComposeTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective", "sign", "inv", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.CorrCholeskyTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.CumulativeDistributionTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective", "codomain", "sign", "domain"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.ExpTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.IndependentTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective", "sign"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.LowerCholeskyTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.PowerTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.ReshapeTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.SigmoidTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.SoftmaxTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.SoftplusTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.StackTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "bijective"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.StickBreakingTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.TanhTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "domain", "codomain", "bijective", "sign", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms.Transform", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "bijective", "event_dim", "inv", "sign", "__dict__", "__weakref__", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.transforms._InverseTransform", "myparent": "torch.distributions.transforms.Transform", "methods": [], "attributes": ["__module__", "__doc__", "bijective", "sign", "inv", "__hash__"], "otherclasseslink": []}, {"name": "torch.distributions.uniform.Uniform", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "has_rsample", "mean", "mode", "stddev", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.utils._lazy_property_and_property", "myparent": "torch.distributions.utils.lazy_property|builtins.propert", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.utils.lazy_property", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.distributions.von_mises.VonMises", "myparent": "torch.distributions.distribution.Distribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.weibull.Weibull", "myparent": "torch.distributions.transformed_distribution.TransformedDistribution", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "mean", "mode", "variance"], "otherclasseslink": []}, {"name": "torch.distributions.wishart.Wishart", "myparent": "torch.distributions.exp_family.ExponentialFamily", "methods": [], "attributes": ["__module__", "__doc__", "arg_constraints", "support", "has_rsample", "_mean_carrier_measure", "scale_tril", "covariance_matrix", "precision_matrix", "mean", "mode", "variance", "_natural_params"], "otherclasseslink": []}, {"name": "torch.fx.graph.CodeGen", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.graph.Graph", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "owning_module", "nodes", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.graph.PythonCode", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.fx.graph._CustomBuiltin", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "import_str", "obj", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.graph._InsertPoint", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.graph._Namespace", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.graph._PyTreeCodeGen", "myparent": "torch.fx.graph.CodeGen", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.graph._PyTreeInfo", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "orig_args", "in_spec", "out_spec", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.graph._node_list", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.graph_module.GraphModule", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__jit_unused_properties__", "graph", "code"], "otherclasseslink": []}, {"name": "torch.fx.graph_module._EvalCacheLoader", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.graph_module._WrappedCall", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.immutable_collections.immutable_dict", "myparent": "builtins.dict", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.immutable_collections.immutable_list", "myparent": "builtins.list", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.interpreter.Interpreter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.interpreter.Transformer", "myparent": "torch.fx.interpreter.Interpreter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.node.Node", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "next", "prev", "args", "kwargs", "all_input_nodes", "stack_trace", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.operator_schemas.ArgsKwargsPair", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "args", "kwargs", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.operator_schemas._FakeGlobalNamespace", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.proxy.Attribute", "myparent": "torch.fx.proxy.Proxy", "methods": [], "attributes": ["__module__", "node", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.proxy.GraphAppendingTracer", "myparent": "torch.fx.proxy.TracerBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.proxy.ParameterProxy", "myparent": "torch.fx.proxy.Proxy", "methods": [], "attributes": ["__module__", "__doc__", "shape", "ndim"], "otherclasseslink": []}, {"name": "torch.fx.proxy.Proxy", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.proxy.TraceError", "myparent": "builtins.ValueError", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.proxy.TracerBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "record_stack_traces", "check_mutable_operations", "trace_asserts", "proxy_buffer_attributes", "traced_func_name", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.subgraph_rewriter.Match", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "anchor", "nodes_map", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.variable.Var", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "_id", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.conflict.AmbiguityWarning", "myparent": "builtins.Warning", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.dispatcher.Dispatcher", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "ordering", "__name__", "_cache", "_ordering", "doc", "funcs", "name"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.dispatcher.MDNotImplementedError", "myparent": "builtins.NotImplementedError", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.dispatcher.MethodDispatcher", "myparent": "torch.fx.experimental.unification.multipledispatch.dispatcher.Dispatcher", "methods": [], "attributes": ["__module__", "__doc__", "__slots__", "cls", "obj"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.variadic.Variadic", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.variadic.VariadicSignatureMeta", "myparent": "builtins.type", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.experimental.unification.multipledispatch.variadic.VariadicSignatureType", "myparent": "builtins.type", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.graph_drawer.FxGraphDrawer", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.graph_manipulation.size_bytes", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "output_size", "total_size", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.passes.net_min_base.FxNetMinimizerBadModuleError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.net_min_base.FxNetMinimizerResultMismatchError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.net_min_base.FxNetMinimizerRunFuncError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.net_min_base._MinimizerBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.net_min_base._MinimizerSettingBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "accumulate_error", "traverse_method", "find_all", "return_intermediate", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.fx.passes.operator_support.OpSupports", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.operator_support.OperatorSupport", "myparent": "torch.fx.passes.operator_support.OperatorSupportBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.fx.passes.operator_support.OperatorSupportBase", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.fx.passes.reinplace._FunctionalizationMetadataProp", "myparent": "torch.fx.interpreter.Interpreter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.reinplace._ViewType", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "NonView", "SingleOutputView", "MultiOutputView"], "otherclasseslink": []}, {"name": "torch.fx.passes.shape_prop.ShapeProp", "myparent": "torch.fx.interpreter.Interpreter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.shape_prop.TensorMetadata", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "shape", "dtype", "requires_grad", "stride", "memory_format", "is_quantized", "qparams", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base.FxNetAccNodesFinder", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base.FxNetSplitterInternalError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base.SplitResult", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "split_module", "submodule_inputs", "non_acc_submodule_prefix", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base.Subgraph", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base._SplitterBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "PCIe_BW", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.splitter_base._SplitterSettingBase", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.split_module.Partition", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.split_utils.Component", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "gm", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.fx.passes.tools_common.FxNetAccFusionsFinder", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.infra.pass_base.PassBase", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.fx.passes.infra.pass_base.PassResult", "myparent": "torch.fx.passes.infra.pass_base.PassResult", "methods": [], "attributes": ["__module__", "__doc__", "__dict__"], "otherclasseslink": []}, {"name": "torch.fx.passes.infra.pass_manager.PassManager", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "passes", "constraints", "_validated", "steps", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.fx.passes.utils.common.HolderModule", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.fx.passes.utils.matcher_utils.InternalMatch", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.fx.passes.utils.matcher_utils.SubgraphMatcher", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.annotations.EvalEnv", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "env", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.annotations.Module", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.Builder", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.ExprBuilder", "myparent": "torch.jit.frontend.Builder", "methods": [], "attributes": ["__module__", "binop_map", "unop_map", "boolop_map", "cmpop_map", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.FrontendError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.FrontendTypeError", "myparent": "torch.jit.frontend.FrontendError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.NotSupportedError", "myparent": "torch.jit.frontend.FrontendError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.StmtBuilder", "myparent": "torch.jit.frontend.Builder", "methods": [], "attributes": ["__module__", "augassign_map", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.UnsupportedNodeError", "myparent": "torch.jit.frontend.NotSupportedError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.jit.frontend.WithItemBuilder", "myparent": "torch.jit.frontend.Builder", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.masked.maskedtensor.core.MaskedTensor", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.multiprocessing.reductions.SharedCache", "myparent": "builtins.dict", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.multiprocessing.reductions.StorageWeakRef", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.nn.parameter.Parameter", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parameter.UninitializedBuffer", "myparent": "torch.nn.parameter.UninitializedTensorMixin|torch.Tenso", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parameter.UninitializedParameter", "myparent": "torch.nn.parameter.UninitializedTensorMixin|torch.nn.parameter.Paramete", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parameter.UninitializedTensorMixin", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "_allowed_methods", "shape", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parameter._ParameterMeta", "myparent": "torch._C._TensorMeta", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn1d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd|torch.nn.modules.conv.Conv1", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_RELU_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn2d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd|torch.nn.modules.conv.Conv2", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_RELU_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn3d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd|torch.nn.modules.conv.Conv3", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_RELU_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU1d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn1d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU2d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn2d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBnReLU3d", "myparent": "torch.nn.intrinsic.qat.modules.conv_fused.ConvBn3d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU1d", "myparent": "torch.ao.nn.qat.modules.conv.Conv1d|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_BN_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU2d", "myparent": "torch.ao.nn.qat.modules.conv.Conv2d|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_BN_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused.ConvReLU3d", "myparent": "torch.ao.nn.qat.modules.conv.Conv3d|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "__doc__", "_FLOAT_BN_MODULE"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused._ConvBnNd", "myparent": "torch.nn.modules.conv._ConvNd|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "_version", "_FLOAT_MODULE", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.linear_fused.LinearBn1d", "myparent": "torch.nn.modules.linear.Linear|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.qat.modules.linear_relu.LinearReLU", "myparent": "torch.ao.nn.qat.modules.linear.Linear|torch.ao.nn.intrinsic.modules.fused._FusedModul", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu.LinearReLU", "myparent": "torch.ao.nn.quantized.dynamic.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU2d", "myparent": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.bn_relu.BNReLU3d", "myparent": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU1d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv1d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU2d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv2d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.conv_relu.ConvReLU3d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv3d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.intrinsic.quantized.modules.linear_relu.LinearReLU", "myparent": "torch.ao.nn.quantized.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.CELU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.ELU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.GELU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.GLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Hardshrink", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Hardsigmoid", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Hardswish", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Hardtanh", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.LeakyReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.LogSigmoid", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.LogSoftmax", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Mish", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.MultiheadAttention", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.PReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.RReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.ReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.ReLU6", "myparent": "torch.nn.modules.activation.Hardtanh", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.SELU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.SiLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Sigmoid", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softmax", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softmax2d", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softmin", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softplus", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softshrink", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Softsign", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Tanh", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Tanhshrink", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.activation.Threshold", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.adaptive.AdaptiveLogSoftmaxWithLoss", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.adaptive._ASMoutput", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "output", "loss", "__module__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.BatchNorm1d", "myparent": "torch.nn.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.BatchNorm2d", "myparent": "torch.nn.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.BatchNorm3d", "myparent": "torch.nn.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.LazyBatchNorm1d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.batchnorm._BatchNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.LazyBatchNorm2d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.batchnorm._BatchNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.LazyBatchNorm3d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.batchnorm._BatchNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm.SyncBatchNorm", "myparent": "torch.nn.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm._BatchNorm", "myparent": "torch.nn.modules.batchnorm._NormBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm._LazyNormBase", "myparent": "torch.nn.modules.lazy.LazyModuleMixin|torch.nn.modules.batchnorm._NormBas", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.batchnorm._NormBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_version", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.channelshuffle.ChannelShuffle", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.Container", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.ModuleDict", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.ModuleList", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.ParameterDict", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.ParameterList", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.container.Sequential", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.Conv1d", "myparent": "torch.nn.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.Conv2d", "myparent": "torch.nn.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.Conv3d", "myparent": "torch.nn.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.ConvTranspose1d", "myparent": "torch.nn.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.ConvTranspose2d", "myparent": "torch.nn.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.ConvTranspose3d", "myparent": "torch.nn.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConv1d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.Conv1", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConv2d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.Conv2", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConv3d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.Conv3", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConvTranspose1d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.ConvTranspose1", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConvTranspose2d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.ConvTranspose2", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv.LazyConvTranspose3d", "myparent": "torch.nn.modules.conv._LazyConvXdMixin|torch.nn.modules.conv.ConvTranspose3", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv._ConvNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv._ConvTransposeMixin", "myparent": "torch.nn.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv._ConvTransposeNd", "myparent": "torch.nn.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.conv._LazyConvXdMixin", "myparent": "torch.nn.modules.lazy.LazyModuleMixin", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.distance.CosineSimilarity", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.distance.PairwiseDistance", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.AlphaDropout", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.Dropout", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.Dropout1d", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.Dropout2d", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.Dropout3d", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout.FeatureAlphaDropout", "myparent": "torch.nn.modules.dropout._DropoutNd", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.dropout._DropoutNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.flatten.Flatten", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.flatten.Unflatten", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.fold.Fold", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.fold.Unfold", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.InstanceNorm1d", "myparent": "torch.nn.modules.instancenorm._InstanceNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.InstanceNorm2d", "myparent": "torch.nn.modules.instancenorm._InstanceNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.InstanceNorm3d", "myparent": "torch.nn.modules.instancenorm._InstanceNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.LazyInstanceNorm1d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.instancenorm._InstanceNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.LazyInstanceNorm2d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.instancenorm._InstanceNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm.LazyInstanceNorm3d", "myparent": "torch.nn.modules.batchnorm._LazyNormBase|torch.nn.modules.instancenorm._InstanceNor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.instancenorm._InstanceNorm", "myparent": "torch.nn.modules.batchnorm._NormBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.lazy.LazyModuleMixin", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "cls_to_become", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.nn.modules.lazy._LazyProtocol", "myparent": "typing_extensions.Protocol", "methods": [], "attributes": ["__module__", "__doc__", "_parameters", "_buffers", "_non_persistent_buffers_set", "_load_hook", "_initialize_hook", "__dict__", "__weakref__", "__parameters__", "_is_protocol", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.modules.linear.Bilinear", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.linear.Identity", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.linear.LazyLinear", "myparent": "torch.nn.modules.lazy.LazyModuleMixin|torch.nn.modules.linear.Linea", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.linear.Linear", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.linear.NonDynamicallyQuantizableLinear", "myparent": "torch.nn.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.BCELoss", "myparent": "torch.nn.modules.loss._WeightedLoss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.BCEWithLogitsLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.CTCLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.CosineEmbeddingLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.CrossEntropyLoss", "myparent": "torch.nn.modules.loss._WeightedLoss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.GaussianNLLLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.HingeEmbeddingLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.HuberLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.KLDivLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.L1Loss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.MSELoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.MarginRankingLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.MultiLabelMarginLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.MultiLabelSoftMarginLoss", "myparent": "torch.nn.modules.loss._WeightedLoss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.MultiMarginLoss", "myparent": "torch.nn.modules.loss._WeightedLoss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.NLLLoss", "myparent": "torch.nn.modules.loss._WeightedLoss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.NLLLoss2d", "myparent": "torch.nn.modules.loss.NLLLoss", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.PoissonNLLLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.SmoothL1Loss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.SoftMarginLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.TripletMarginLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss.TripletMarginWithDistanceLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss._Loss", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.loss._WeightedLoss", "myparent": "torch.nn.modules.loss._Loss", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.module.Module", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "dump_patches", "_version", "T_destination", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.nn.modules.module._IncompatibleKeys", "myparent": "torch.nn.modules.module.IncompatibleKeys", "methods": [], "attributes": ["__module__", "__dict__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.module._WrappedHook", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.normalization.CrossMapLRN2d", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.normalization.GroupNorm", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.normalization.LayerNorm", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.normalization.LocalResponseNorm", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ConstantPad1d", "myparent": "torch.nn.modules.padding._ConstantPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ConstantPad2d", "myparent": "torch.nn.modules.padding._ConstantPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ConstantPad3d", "myparent": "torch.nn.modules.padding._ConstantPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReflectionPad1d", "myparent": "torch.nn.modules.padding._ReflectionPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReflectionPad2d", "myparent": "torch.nn.modules.padding._ReflectionPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReflectionPad3d", "myparent": "torch.nn.modules.padding._ReflectionPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReplicationPad1d", "myparent": "torch.nn.modules.padding._ReplicationPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReplicationPad2d", "myparent": "torch.nn.modules.padding._ReplicationPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ReplicationPad3d", "myparent": "torch.nn.modules.padding._ReplicationPadNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding.ZeroPad2d", "myparent": "torch.nn.modules.padding.ConstantPad2d", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding._ConstantPadNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding._ReflectionPadNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.padding._ReplicationPadNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pixelshuffle.PixelShuffle", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pixelshuffle.PixelUnshuffle", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveAvgPool1d", "myparent": "torch.nn.modules.pooling._AdaptiveAvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveAvgPool2d", "myparent": "torch.nn.modules.pooling._AdaptiveAvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveAvgPool3d", "myparent": "torch.nn.modules.pooling._AdaptiveAvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveMaxPool1d", "myparent": "torch.nn.modules.pooling._AdaptiveMaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveMaxPool2d", "myparent": "torch.nn.modules.pooling._AdaptiveMaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AdaptiveMaxPool3d", "myparent": "torch.nn.modules.pooling._AdaptiveMaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AvgPool1d", "myparent": "torch.nn.modules.pooling._AvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AvgPool2d", "myparent": "torch.nn.modules.pooling._AvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.AvgPool3d", "myparent": "torch.nn.modules.pooling._AvgPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.FractionalMaxPool2d", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.FractionalMaxPool3d", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.LPPool1d", "myparent": "torch.nn.modules.pooling._LPPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.LPPool2d", "myparent": "torch.nn.modules.pooling._LPPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxPool1d", "myparent": "torch.nn.modules.pooling._MaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxPool2d", "myparent": "torch.nn.modules.pooling._MaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxPool3d", "myparent": "torch.nn.modules.pooling._MaxPoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxUnpool1d", "myparent": "torch.nn.modules.pooling._MaxUnpoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxUnpool2d", "myparent": "torch.nn.modules.pooling._MaxUnpoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling.MaxUnpool3d", "myparent": "torch.nn.modules.pooling._MaxUnpoolNd", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._AdaptiveAvgPoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._AdaptiveMaxPoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._AvgPoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._LPPoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._MaxPoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.pooling._MaxUnpoolNd", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.GRU", "myparent": "torch.nn.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.GRUCell", "myparent": "torch.nn.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.LSTM", "myparent": "torch.nn.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.LSTMCell", "myparent": "torch.nn.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.RNN", "myparent": "torch.nn.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.RNNBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__jit_unused_properties__", "all_weights", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.RNNCell", "myparent": "torch.nn.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.rnn.RNNCellBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.sparse.Embedding", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.sparse.EmbeddingBag", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.transformer.Transformer", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.transformer.TransformerDecoder", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.transformer.TransformerDecoderLayer", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.transformer.TransformerEncoder", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.transformer.TransformerEncoderLayer", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.upsampling.Upsample", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.nn.modules.upsampling.UpsamplingBilinear2d", "myparent": "torch.nn.modules.upsampling.Upsample", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.modules.upsampling.UpsamplingNearest2d", "myparent": "torch.nn.modules.upsampling.Upsample", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parallel.distributed.DistributedDataParallel", "myparent": "torch.nn.modules.module.Module|torch.distributed.algorithms.join.Joinabl", "methods": [], "attributes": ["__module__", "__doc__", "_active_ddp_module", "join_device", "join_process_group", "_distributed_rank", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.parallel.distributed._BufferCommHook", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.nn.parallel.distributed._BufferCommHookLocation", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "PRE_FORWARD", "POST_FORWARD"], "otherclasseslink": []}, {"name": "torch.nn.parallel.distributed._DDPJoinHook", "myparent": "torch.distributed.algorithms.join.JoinHook", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.parallel.distributed._DDPSink", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv1d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv1d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv2d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv2d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.Conv3d", "myparent": "torch.ao.nn.quantized.modules.conv.Conv3d", "methods": [], "attributes": ["__module__", "__doc__", "_NNIQAT_CONV_BN_MODULE", "_NNI_CONV_RELU_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose1d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose1d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose2d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose2d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv.ConvTranspose3d", "myparent": "torch.ao.nn.quantized.modules.conv.ConvTranspose3d", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.linear.Linear", "myparent": "torch.ao.nn.quantized.modules.linear.Linear", "methods": [], "attributes": ["__module__", "__doc__", "_version", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.GRU", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__", "__overloads__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.GRUCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.LSTM", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "methods": [], "attributes": ["__module__", "__doc__", "__overloads__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.LSTMCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.PackedParameter", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCell", "myparent": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn.RNNCellBase", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__constants__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.ELU", "myparent": "torch.nn.modules.activation.ELU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Hardswish", "myparent": "torch.nn.modules.activation.Hardswish", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.LeakyReLU", "myparent": "torch.nn.modules.activation.LeakyReLU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.MultiheadAttention", "myparent": "torch.ao.nn.quantizable.modules.activation.MultiheadAttention", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.PReLU", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.ReLU6", "myparent": "torch.nn.modules.activation.ReLU", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Sigmoid", "myparent": "torch.nn.modules.activation.Sigmoid", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.activation.Softmax", "myparent": "torch.nn.modules.activation.Softmax", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm2d", "myparent": "torch.ao.nn.quantized.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm.BatchNorm3d", "myparent": "torch.ao.nn.quantized.modules.batchnorm._BatchNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv1d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv2d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.Conv3d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose1d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose2d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.conv.ConvTranspose3d", "myparent": "torch.ao.nn.quantized.modules.conv._ConvTransposeNd", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.dropout.Dropout", "myparent": "torch.nn.modules.dropout.Dropout", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.Embedding", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "_version"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingBag", "myparent": "torch.ao.nn.quantized.modules.embedding_ops.Embedding", "methods": [], "attributes": ["__module__", "__doc__", "_version"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops.EmbeddingPackedParams", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.FXFloatFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.FloatFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules.QFunctional", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.linear.Linear", "myparent": "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule", "methods": [], "attributes": ["__module__", "__doc__", "_version", "_FLOAT_MODULE", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.linear.LinearPackedParams", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "_version", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.GroupNorm", "myparent": "torch.nn.modules.normalization.GroupNorm", "methods": [], "attributes": ["__module__", "__doc__", "__constants__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm1d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm1d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm2d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm2d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.InstanceNorm3d", "myparent": "torch.nn.modules.instancenorm.InstanceNorm3d", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.normalization.LayerNorm", "myparent": "torch.nn.modules.normalization.LayerNorm", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.rnn.LSTM", "myparent": "torch.ao.nn.quantizable.modules.rnn.LSTM", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.ao.nn.quantized.modules.utils.WeightedQuantizedModule", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.nn.utils.parametrizations._OrthMaps", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "matrix_exp", "cayley", "householder"], "otherclasseslink": []}, {"name": "torch.nn.utils.parametrizations._Orthogonal", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils.parametrizations._SpectralNorm", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils.parametrize.ParametrizationList", "myparent": "torch.nn.modules.container.ModuleList", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils.rnn.PackedSequence", "myparent": "torch.nn.utils.rnn.PackedSequence_", "methods": [], "attributes": ["__module__", "__doc__", "is_cuda", "__dict__"], "otherclasseslink": []}, {"name": "torch.nn.utils.rnn.PackedSequence_", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "data", "batch_sizes", "sorted_indices", "unsorted_indices", "__module__", "__annotations__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.conv_expanded_weights.ConvPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.embedding_expanded_weights.EmbeddingPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.expanded_weights_impl.ExpandedWeight", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "handled_functions", "dtype", "shape", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.group_norm_expanded_weights.GroupNormPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.instance_norm_expanded_weights.InstanceNormPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.layer_norm_expanded_weights.LayerNormPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.nn.utils._expanded_weights.linear_expanded_weights.LinearPerSampleGrad", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.CallHintViolationWarning", "myparent": "torch.onnx.errors.OnnxExporterWarning", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.CheckerError", "myparent": "torch.onnx.errors.OnnxExporterError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.OnnxExporterError", "myparent": "builtins.RuntimeError", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.OnnxExporterWarning", "myparent": "builtins.UserWarning", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.SymbolicValueError", "myparent": "torch.onnx.errors.OnnxExporterError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.onnx.errors.UnsupportedOperatorError", "myparent": "torch.onnx.errors.OnnxExporterError", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.onnx._internal.jit_utils.GraphContext", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.onnx._internal.registration.OverrideDict", "myparent": "collections.abc.Collection|typing.Generi", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__dict__", "__weakref__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.onnx._internal.registration.SymbolicRegistry", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.onnx._internal.registration._SymbolicFunctionGroup", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.onnx._internal.diagnostics.infra.engine.DiagnosticEngine", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.ChainedScheduler", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.ConstantLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.CosineAnnealingLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.CosineAnnealingWarmRestarts", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.CyclicLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.ExponentialLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.LambdaLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.LinearLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.MultiStepLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.MultiplicativeLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.OneCycleLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.PolynomialLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.ReduceLROnPlateau", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "in_cooldown", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.SequentialLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler.StepLR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.lr_scheduler._LRScheduler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.swa_utils.AveragedModel", "myparent": "torch.nn.modules.module.Module", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.optim.swa_utils.SWALR", "myparent": "torch.optim.lr_scheduler._LRScheduler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.package.file_structure_representation.Directory", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.find_file_dependencies._ExtractModuleReferences", "myparent": "ast.NodeVisitor", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.package.glob_group.GlobGroup", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.importer.Importer", "myparent": "abc.ABC", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.package.importer.ObjMismatchError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.importer.ObjNotFoundError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.importer.OrderedImporter", "myparent": "torch.package.importer.Importer", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.package.importer._SysImporter", "myparent": "torch.package.importer.Importer", "methods": [], "attributes": ["__module__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.package.package_exporter.EmptyMatchError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.package_exporter.PackageExporter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.package_exporter.PackagingError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.package_exporter.PackagingErrorReason", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "IS_EXTENSION_MODULE", "NO_DUNDER_FILE", "SOURCE_FILE_NOT_FOUND", "DEPENDENCY_RESOLUTION_FAILED", "NO_ACTION", "DENIED", "MOCKED_BUT_STILL_USED"], "otherclasseslink": []}, {"name": "torch.package.package_exporter._ModuleProviderAction", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "INTERN", "EXTERN", "MOCK", "DENY", "REPACKAGED_MOCK_MODULE", "SKIP"], "otherclasseslink": []}, {"name": "torch.package.package_exporter._PatternInfo", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__dict__", "__weakref__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch.package.package_importer.PackageImporter", "myparent": "torch.package.importer.Importer", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.package.package_importer._ExternNode", "myparent": "torch.package.package_importer._PathNode", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.package.package_importer._ModuleNode", "myparent": "torch.package.package_importer._PathNode", "methods": [], "attributes": ["__module__", "__slots__", "source_file", "__doc__"], "otherclasseslink": []}, {"name": "torch.package.package_importer._PackageNode", "myparent": "torch.package.package_importer._PathNode", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.package.package_importer._PackageResourceReader", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.package.package_importer._PathNode", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.profiler.profiler.ExecutionGraphObserver", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.profiler.profiler.ProfilerAction", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "NONE", "WARMUP", "RECORD", "RECORD_AND_SAVE"], "otherclasseslink": []}, {"name": "torch.profiler.profiler._KinetoProfile", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.profiler.profiler.profile", "myparent": "torch.profiler.profiler._KinetoProfile", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.checkpoint.CheckpointFunction", "myparent": "torch.autograd.function.Function", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.cpp_extension.BuildExtension", "myparent": "setuptools.command.build_ext.build_ext|builtins.objec", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.dlpack.DLDeviceType", "myparent": "enum.IntEnum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "kDLCPU", "kDLGPU", "kDLCPUPinned", "kDLOpenCL", "kDLVulkan", "kDLMetal", "kDLVPI", "kDLROCM", "kDLExtDev"], "otherclasseslink": []}, {"name": "torch.utils.file_baton.FileBaton", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.hooks.BackwardHook", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.hooks.RemovableHandle", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "next_id", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.show_pickle.DumpUnpickler", "myparent": "pickle._Unpickler", "methods": [], "attributes": ["__module__", "dispatch", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.show_pickle.FakeClass", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.show_pickle.FakeObject", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.throughput_benchmark.ExecutionStats", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "latency_avg_ms", "num_iters", "iters_per_second", "total_time_seconds", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.throughput_benchmark.ThroughputBenchmark", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader.DataLoader", "myparent": "typing.Generic", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_DataLoader__initialized", "multiprocessing_context", "_auto_collation", "_index_sampler", "__orig_bases__", "__dict__", "__weakref__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader._BaseDataLoaderIter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader._DatasetKind", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "Map", "Iterable", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader._InfiniteConstantSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader._MultiProcessingDataLoaderIter", "myparent": "torch.utils.data.dataloader._BaseDataLoaderIter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader._SingleProcessDataLoaderIter", "myparent": "torch.utils.data.dataloader._BaseDataLoaderIter", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader_experimental.DataLoader2", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataloader_experimental._ThreadingDataLoader2", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.ChainDataset", "myparent": "torch.utils.data.dataset.IterableDataset", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.ConcatDataset", "myparent": "torch.utils.data.dataset.Dataset", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "cummulative_sizes", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.Dataset", "myparent": "typing.Generic", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__dict__", "__weakref__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.IterableDataset", "myparent": "torch.utils.data.dataset.Dataset", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.Subset", "myparent": "torch.utils.data.dataset.Dataset", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.dataset.TensorDataset", "myparent": "torch.utils.data.dataset.Dataset", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.distributed.DistributedSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.BatchSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.RandomSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "num_samples", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.Sampler", "myparent": "typing.Generic", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__dict__", "__weakref__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.SequentialSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.SubsetRandomSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.sampler.WeightedRandomSampler", "myparent": "torch.utils.data.sampler.Sampler", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.iter.InvalidStateResetRequired", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__doc__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.iter.NonBlocking", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.iter.NotAvailable", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.iter.QueueWrapper", "myparent": "torch.utils.data.communication.iter.NonBlocking", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.map.NonBlockingMap", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.map.NotAvailable", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.map.QueueWrapperForMap", "myparent": "torch.utils.data.communication.map.NonBlockingMap", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.DataLoaderQueueMessage", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.GetItemRequest", "myparent": "torch.utils.data.communication.messages.Request", "methods": [], "attributes": ["__module__", "__slots__", "key", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.GetItemResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__slots__", "key", "value", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.GetNextRequest", "myparent": "torch.utils.data.communication.messages.Request", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.GetNextResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__slots__", "value", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.InvalidStateResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.LenRequest", "myparent": "torch.utils.data.communication.messages.Request", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.LenResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__slots__", "len", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.Request", "myparent": "torch.utils.data.communication.messages.DataLoaderQueueMessage", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.ResetIteratorRequest", "myparent": "torch.utils.data.communication.messages.Request", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.ResetIteratorResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.Response", "myparent": "torch.utils.data.communication.messages.DataLoaderQueueMessage", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.StopIterationResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.TerminateRequest", "myparent": "torch.utils.data.communication.messages.Request", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.messages.TerminateResponse", "myparent": "torch.utils.data.communication.messages.Response", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.EmptyQueue", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.IterDataPipeQueueProtocolClient", "myparent": "torch.utils.data.communication.protocol.ProtocolClient", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.IterDataPipeQueueProtocolServer", "myparent": "torch.utils.data.communication.protocol.ProtocolServer", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.MapDataPipeQueueProtocolClient", "myparent": "torch.utils.data.communication.protocol.ProtocolClient", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.MapDataPipeQueueProtocolServer", "myparent": "torch.utils.data.communication.protocol.ProtocolServer", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.Protocol", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__slots__", "request_queue", "response_queue", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.ProtocolClient", "myparent": "torch.utils.data.communication.protocol.Protocol", "methods": [], "attributes": ["__module__", "__doc__", "_req_sent", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.protocol.ProtocolServer", "myparent": "torch.utils.data.communication.protocol.Protocol", "methods": [], "attributes": ["__module__", "__doc__", "_req_received", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.queue.LocalQueue", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "ops", "stored", "uid", "empty", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.communication.queue.ThreadingQueue", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe.DataChunk", "myparent": "builtins.list|typing.Generi", "methods": [], "attributes": ["__module__", "__orig_bases__", "__dict__", "__weakref__", "__doc__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe.IterDataPipe", "myparent": "torch.utils.data.dataset.IterableDataset", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "functions", "reduce_ex_hook", "getstate_hook", "str_hook", "repr_hook", "_valid_iterator_id", "_number_of_samples_yielded", "_snapshot_state", "_fast_forward_iterator", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe.MapDataPipe", "myparent": "torch.utils.data.dataset.Dataset", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "functions", "reduce_ex_hook", "getstate_hook", "str_hook", "repr_hook", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe._DataPipeSerializationWrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe._IterDataPipeSerializationWrapper", "myparent": "torch.utils.data.datapipes.datapipe._DataPipeSerializationWrapper|torch.utils.data.datapipes.datapipe.IterDataPip", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.datapipe._MapDataPipeSerializationWrapper", "myparent": "torch.utils.data.datapipes.datapipe._DataPipeSerializationWrapper|torch.utils.data.datapipes.datapipe.MapDataPip", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "columns", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureA", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureF", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureAdd", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureCall", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureControl", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "disabled", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureDataFrame", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureInitial", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureDataFrameWithDataPipeOps", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureDataFrame", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureF", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureGetAttr", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureGetItem", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureInitial", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureVariable", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureLikeMock", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureMul", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureSetItem", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureSub", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureVariable", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.Capture", "methods": [], "attributes": ["__module__", "names_idx", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.CaptureVariableAssign", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureF", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.DataFrameTracedOps", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframes.DataFrameTracer", "myparent": "torch.utils.data.datapipes.dataframe.dataframes.CaptureDataFrameWithDataPipeOps|torch.utils.data.datapipes.datapipe.IterDataPip", "methods": [], "attributes": ["__module__", "source_datapipe", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframe_wrapper.PandasWrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframe_wrapper.default_wrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.ConcatDataFramesPipe", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.DataFramesAsTuplesPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.ExampleAggregateAsDataFrames", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.FilterDataFramesPipe", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.PerRowDataFramesPipe", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.datapipes.ShuffleDataFramesPipe", "myparent": "torch.utils.data.datapipes.datapipe.DFIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.dataframe.structures.DataChunkDF", "myparent": "torch.utils.data.datapipes.datapipe.DataChunk", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.callable.CollatorIterDataPipe", "myparent": "torch.utils.data.datapipes.iter.callable.MapperIterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.callable.MapperIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combinatorics.SamplerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combinatorics.ShufflerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining.ConcaterIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining.DemultiplexerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining.ForkerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining.MultiplexerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining.ZipperIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining._ChildDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "_is_child_datapipe", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining._DemultiplexerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.combining._ForkerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.filelister.FileListerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.fileopener.FileLoaderIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__orig_bases__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.fileopener.FileOpenerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.grouping.BatcherIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.grouping.GrouperIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.grouping.ShardingFilterIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.grouping.UnBatcherIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.routeddecoder.RoutedDecoderIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.selecting.FilterIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.streamreader.StreamReaderIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.iter.utils.IterableWrapperIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.callable.MapperMapDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.combinatorics.ShufflerIterDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.IterDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.combining.ConcaterMapDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.combining.ZipperMapDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.grouping.BatcherMapDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "__orig_bases__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.map.utils.SequenceWrapperMapDataPipe", "myparent": "torch.utils.data.datapipes.datapipe.MapDataPipe", "methods": [], "attributes": ["__module__", "__doc__", "__parameters__", "__abstractmethods__", "_abc_impl"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.utils.common.StreamWrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__", "session_streams", "debug_unclosed_streams", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.utils.decoder.Decoder", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.utils.decoder.ImageHandler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.data.datapipes.utils.decoder.MatHandler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.fetch._BaseDatasetFetcher", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.fetch._IterableDatasetFetcher", "myparent": "torch.utils.data._utils.fetch._BaseDatasetFetcher", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.fetch._MapDatasetFetcher", "myparent": "torch.utils.data._utils.fetch._BaseDatasetFetcher", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.worker.ManagerWatchdog", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.worker.WorkerInfo", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "_WorkerInfo__initialized", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.worker._IterableDatasetStopIteration", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.utils.data._utils.worker._ResumeIteration", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "seed", "__dict__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__"], "otherclasseslink": []}, {"name": "torch.utils.hipify.hipify_python.GeneratedFileCleaner", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.hipify.hipify_python.InputError", "myparent": "builtins.Exception", "methods": [], "attributes": ["__module__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.hipify.hipify_python.Trie", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.hipify.hipify_python.bcolors", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "HEADER", "OKBLUE", "OKGREEN", "WARNING", "FAIL", "ENDC", "BOLD", "UNDERLINE", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch.utils.tensorboard.writer.FileWriter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch.utils.tensorboard.writer.SummaryWriter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch._decomp.decompositions.Reduction", "myparent": "enum.Enum", "methods": [], "attributes": ["__module__", "__doc__", "_member_names_", "_member_map_", "_value2member_map_", "NONE", "MEAN", "SUM"], "otherclasseslink": []}, {"name": "torch._lazy.closure.AsyncClosureHandler", "myparent": "torch._lazy.closure.ClosureHandler", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch._lazy.closure.ClosureHandler", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch._lazy.device_context.DeviceContext", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "_CONTEXTS", "_CONTEXTS_LOCK", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch._prims_common.wrappers.elementwise_type_promotion_wrapper", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__doc__", "__dict__", "__weakref__"], "otherclasseslink": []}, {"name": "torch._refs.fft._CanonicalizeC2rReturn", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "shape", "dim", "last_dim_size", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch._refs.fft._ShapeAndDims", "myparent": "builtins.tuple", "methods": [], "attributes": ["__doc__", "__slots__", "_fields", "_fields_defaults", "shape", "dims", "__module__", "__annotations__", "_field_types", "_field_defaults"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.DataDependentOutputException", "myparent": "builtins.RuntimeError", "methods": [], "attributes": ["__module__", "__annotations__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.DynamicOutputShapeException", "myparent": "builtins.RuntimeError", "methods": [], "attributes": ["__module__", "__annotations__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.FakeCopyMode", "myparent": "torch.overrides.TorchFunctionMode", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.FakeTensor", "myparent": "torch.Tensor", "methods": [], "attributes": ["__module__", "__annotations__", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.FakeTensorConverter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__annotations__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.FakeTensorMode", "myparent": "torch.utils._python_dispatch.TorchDispatchMode", "methods": [], "attributes": ["__module__", "functions_with_cpp_meta_impl_that_support_symint", "lift_fns", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_tensor.UnsupportedFakeTensorException", "myparent": "builtins.RuntimeError", "methods": [], "attributes": ["__module__", "__annotations__", "__weakref__", "__doc__", "__dataclass_params__", "__dataclass_fields__", "__hash__"], "otherclasseslink": []}, {"name": "torch._subclasses.fake_utils.CrossRefFakeMode", "myparent": "torch.utils._python_dispatch.TorchDispatchMode", "methods": [], "attributes": ["__module__", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.meta_utils.MetaConverter", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "torch._subclasses.meta_utils.WeakTensorRefKey", "myparent": "builtins.object", "methods": [], "attributes": ["__module__", "__dict__", "__weakref__", "__doc__"], "otherclasseslink": []}, {"name": "builtins.object", "myparent": ""}, {"name": "builtins.tuple", "myparent": ""}, {"name": "builtins.Warning", "myparent": ""}, {"name": "torch._C.StorageBase", "myparent": ""}, {"name": "torch.storage._StorageBas", "myparent": ""}, {"name": "builtins.type", "myparent": ""}, {"name": "builtins.str", "myparent": ""}, {"name": "torch.nn.modules.conv.Conv1", "myparent": ""}, {"name": "torch.nn.modules.conv.Conv2", "myparent": ""}, {"name": "torch.nn.modules.conv.Conv3", "myparent": ""}, {"name": "torch.nn.modules.conv.ConvTranspose1", "myparent": ""}, {"name": "torch.nn.modules.conv.ConvTranspose2", "myparent": ""}, {"name": "torch.nn.modules.conv.ConvTranspose3", "myparent": ""}, {"name": "torch.ao.nn.quantized.reference.modules.utils.ReferenceQuantizedModul", "myparent": ""}, {"name": "torch.nn.modules.conv._ConvTransposeN", "myparent": ""}, {"name": "abc.ABC", "myparent": ""}, {"name": "torch.nn.modules.module.Modul", "myparent": ""}, {"name": "enum.IntEnum", "myparent": ""}, {"name": "enum.Enum", "myparent": ""}, {"name": "torch._C._FunctionBase", "myparent": ""}, {"name": "torch.autograd.function._HookMixi", "myparent": ""}, {"name": "contextlib.ContextDecorator", "myparent": ""}, {"name": "builtins.list", "myparent": ""}, {"name": "collections.defaultdict", "myparent": ""}, {"name": "torch.cuda._utils._CUDAGraph", "myparent": ""}, {"name": "torch.cuda._utils._CudaEventBase", "myparent": ""}, {"name": "torch.cuda._utils._CudaStreamBase", "myparent": ""}, {"name": "pybind11_builtins.pybind11_object", "myparent": ""}, {"name": "enum.Enu", "myparent": ""}, {"name": "builtins.Exception", "myparent": ""}, {"name": "enum.IntFlag", "myparent": ""}, {"name": "torch.optim.optimizer.Optimizer", "myparent": ""}, {"name": "torch.distributed.algorithms.join.Joinabl", "myparent": ""}, {"name": "torch.Tensor", "myparent": ""}, {"name": "builtins.BaseException", "myparent": ""}, {"name": "_io.BufferedReader", "myparent": ""}, {"name": "builtins.property", "myparent": ""}, {"name": "torch.distributions.constraints._Dependen", "myparent": ""}, {"name": "builtins.propert", "myparent": ""}, {"name": "builtins.dict", "myparent": ""}, {"name": "builtins.ValueError", "myparent": ""}, {"name": "builtins.NotImplementedError", "myparent": ""}, {"name": "torch.Tenso", "myparent": ""}, {"name": "torch.nn.parameter.Paramete", "myparent": ""}, {"name": "torch._C._TensorMeta", "myparent": ""}, {"name": "torch.ao.nn.intrinsic.modules.fused._FusedModul", "myparent": ""}, {"name": "torch.nn.modules.batchnorm._BatchNor", "myparent": ""}, {"name": "torch.nn.modules.batchnorm._NormBas", "myparent": ""}, {"name": "torch.nn.modules.instancenorm._InstanceNor", "myparent": ""}, {"name": "typing_extensions.Protocol", "myparent": ""}, {"name": "torch.nn.modules.linear.Linea", "myparent": ""}, {"name": "torch.nn.modules.module.IncompatibleKeys", "myparent": ""}, {"name": "builtins.RuntimeError", "myparent": ""}, {"name": "builtins.UserWarning", "myparent": ""}, {"name": "collections.abc.Collection", "myparent": ""}, {"name": "typing.Generi", "myparent": ""}, {"name": "ast.NodeVisitor", "myparent": ""}, {"name": "setuptools.command.build_ext.build_ext", "myparent": ""}, {"name": "builtins.objec", "myparent": ""}, {"name": "pickle._Unpickler", "myparent": ""}, {"name": "typing.Generic", "myparent": ""}, {"name": "torch.utils.data.datapipes.datapipe.IterDataPip", "myparent": ""}, {"name": "torch.utils.data.datapipes.datapipe.MapDataPip", "myparent": ""}, {"name": "torch.utils._python_dispatch.TorchDispatchMode", "myparent": ""}], "links": [{"source": 0, "target": 1206}, {"source": 1, "target": 2}, {"source": 2, "target": 1206}, {"source": 3, "target": 1206}, {"source": 4, "target": 1206}, {"source": 5, "target": 1206}, {"source": 6, "target": 1207}, {"source": 7, "target": 1207}, {"source": 8, "target": 1207}, {"source": 9, "target": 1207}, {"source": 10, "target": 1207}, {"source": 11, "target": 1207}, {"source": 12, "target": 1207}, {"source": 13, "target": 1207}, {"source": 14, "target": 1207}, {"source": 15, "target": 1207}, {"source": 16, "target": 1207}, {"source": 17, "target": 1207}, {"source": 18, "target": 1207}, {"source": 19, "target": 1207}, {"source": 20, "target": 1207}, {"source": 21, "target": 1207}, {"source": 22, "target": 1207}, {"source": 23, "target": 1207}, {"source": 24, "target": 1207}, {"source": 25, "target": 1207}, {"source": 26, "target": 1207}, {"source": 27, "target": 1207}, {"source": 28, "target": 1207}, {"source": 29, "target": 1207}, {"source": 30, "target": 1207}, {"source": 31, "target": 1207}, {"source": 32, "target": 1207}, {"source": 33, "target": 1207}, {"source": 34, "target": 1207}, {"source": 35, "target": 1207}, {"source": 36, "target": 1207}, {"source": 37, "target": 1207}, {"source": 38, "target": 1207}, {"source": 39, "target": 1207}, {"source": 40, "target": 1207}, {"source": 41, "target": 1207}, {"source": 42, "target": 1207}, {"source": 43, "target": 1207}, {"source": 44, "target": 1207}, {"source": 45, "target": 1207}, {"source": 46, "target": 1207}, {"source": 47, "target": 1207}, {"source": 48, "target": 1207}, {"source": 49, "target": 1207}, {"source": 50, "target": 1207}, {"source": 51, "target": 1207}, {"source": 52, "target": 1207}, {"source": 53, "target": 1207}, {"source": 54, "target": 1207}, {"source": 55, "target": 1207}, {"source": 56, "target": 1207}, {"source": 57, "target": 1207}, {"source": 58, "target": 1207}, {"source": 59, "target": 1207}, {"source": 60, "target": 1207}, {"source": 61, "target": 1207}, {"source": 62, "target": 1207}, {"source": 63, "target": 1207}, {"source": 64, "target": 1207}, {"source": 65, "target": 1207}, {"source": 66, "target": 1207}, {"source": 67, "target": 1207}, {"source": 68, "target": 1207}, {"source": 69, "target": 1207}, {"source": 70, "target": 1207}, {"source": 71, "target": 1207}, {"source": 72, "target": 1207}, {"source": 73, "target": 1207}, {"source": 74, "target": 1207}, {"source": 75, "target": 1207}, {"source": 76, "target": 1207}, {"source": 77, "target": 1207}, {"source": 78, "target": 1207}, {"source": 79, "target": 1207}, {"source": 80, "target": 1207}, {"source": 81, "target": 1207}, {"source": 82, "target": 1207}, {"source": 83, "target": 1207}, {"source": 84, "target": 1207}, {"source": 85, "target": 1207}, {"source": 86, "target": 1207}, {"source": 87, "target": 1207}, {"source": 88, "target": 1207}, {"source": 89, "target": 1207}, {"source": 90, "target": 1208}, {"source": 91, "target": 1206}, {"source": 92, "target": 98}, {"source": 93, "target": 98}, {"source": 94, "target": 98}, {"source": 95, "target": 98}, {"source": 96, "target": 98}, {"source": 97, "target": 98}, {"source": 98, "target": 1206}, {"source": 99, "target": 1206}, {"source": 100, "target": 1209}, {"source": 100, "target": 1210}, {"source": 101, "target": 99}, {"source": 102, "target": 1211}, {"source": 103, "target": 1206}, {"source": 104, "target": 1212}, {"source": 105, "target": 1206}, {"source": 106, "target": 1206}, {"source": 107, "target": 1206}, {"source": 108, "target": 1206}, {"source": 109, "target": 122}, {"source": 110, "target": 122}, {"source": 111, "target": 122}, {"source": 112, "target": 122}, {"source": 113, "target": 122}, {"source": 114, "target": 122}, {"source": 115, "target": 122}, {"source": 116, "target": 122}, {"source": 117, "target": 122}, {"source": 118, "target": 122}, {"source": 119, "target": 122}, {"source": 120, "target": 122}, {"source": 121, "target": 122}, {"source": 122, "target": 793}, {"source": 123, "target": 130}, {"source": 124, "target": 127}, {"source": 124, "target": 1213}, {"source": 125, "target": 127}, {"source": 125, "target": 1214}, {"source": 126, "target": 127}, {"source": 126, "target": 1215}, {"source": 127, "target": 806}, {"source": 128, "target": 916}, {"source": 129, "target": 917}, {"source": 130, "target": 835}, {"source": 131, "target": 758}, {"source": 132, "target": 861}, {"source": 133, "target": 861}, {"source": 134, "target": 861}, {"source": 135, "target": 861}, {"source": 136, "target": 162}, {"source": 137, "target": 163}, {"source": 138, "target": 164}, {"source": 139, "target": 165}, {"source": 140, "target": 166}, {"source": 141, "target": 167}, {"source": 142, "target": 177}, {"source": 143, "target": 148}, {"source": 144, "target": 150}, {"source": 145, "target": 148}, {"source": 146, "target": 150}, {"source": 147, "target": 861}, {"source": 148, "target": 861}, {"source": 149, "target": 150}, {"source": 150, "target": 861}, {"source": 151, "target": 747}, {"source": 152, "target": 752}, {"source": 153, "target": 754}, {"source": 154, "target": 131}, {"source": 155, "target": 861}, {"source": 156, "target": 761}, {"source": 157, "target": 765}, {"source": 158, "target": 766}, {"source": 159, "target": 161}, {"source": 160, "target": 161}, {"source": 161, "target": 784}, {"source": 162, "target": 168}, {"source": 163, "target": 168}, {"source": 164, "target": 168}, {"source": 165, "target": 169}, {"source": 166, "target": 169}, {"source": 167, "target": 169}, {"source": 168, "target": 185}, {"source": 169, "target": 168}, {"source": 170, "target": 813}, {"source": 171, "target": 861}, {"source": 172, "target": 171}, {"source": 173, "target": 861}, {"source": 174, "target": 861}, {"source": 175, "target": 861}, {"source": 176, "target": 861}, {"source": 177, "target": 185}, {"source": 178, "target": 861}, {"source": 179, "target": 865}, {"source": 180, "target": 823}, {"source": 181, "target": 824}, {"source": 182, "target": 825}, {"source": 183, "target": 866}, {"source": 184, "target": 132}, {"source": 185, "target": 861}, {"source": 186, "target": 192}, {"source": 186, "target": 1213}, {"source": 187, "target": 192}, {"source": 187, "target": 1214}, {"source": 188, "target": 192}, {"source": 188, "target": 1215}, {"source": 189, "target": 193}, {"source": 189, "target": 1216}, {"source": 190, "target": 193}, {"source": 190, "target": 1217}, {"source": 191, "target": 193}, {"source": 191, "target": 1218}, {"source": 192, "target": 806}, {"source": 192, "target": 1219}, {"source": 193, "target": 192}, {"source": 193, "target": 1220}, {"source": 194, "target": 835}, {"source": 194, "target": 1219}, {"source": 195, "target": 200}, {"source": 196, "target": 198}, {"source": 197, "target": 200}, {"source": 198, "target": 913}, {"source": 199, "target": 200}, {"source": 200, "target": 915}, {"source": 201, "target": 916}, {"source": 201, "target": 1219}, {"source": 202, "target": 917}, {"source": 202, "target": 1219}, {"source": 203, "target": 861}, {"source": 204, "target": 861}, {"source": 205, "target": 861}, {"source": 206, "target": 1206}, {"source": 207, "target": 861}, {"source": 208, "target": 209}, {"source": 209, "target": 1221}, {"source": 209, "target": 1222}, {"source": 210, "target": 208}, {"source": 211, "target": 208}, {"source": 212, "target": 218}, {"source": 213, "target": 223}, {"source": 214, "target": 223}, {"source": 215, "target": 214}, {"source": 216, "target": 219}, {"source": 217, "target": 218}, {"source": 218, "target": 1221}, {"source": 218, "target": 1222}, {"source": 219, "target": 223}, {"source": 220, "target": 218}, {"source": 221, "target": 218}, {"source": 222, "target": 218}, {"source": 223, "target": 218}, {"source": 224, "target": 218}, {"source": 225, "target": 1206}, {"source": 226, "target": 218}, {"source": 227, "target": 218}, {"source": 228, "target": 218}, {"source": 229, "target": 229}, {"source": 230, "target": 230}, {"source": 231, "target": 1206}, {"source": 232, "target": 1223}, {"source": 233, "target": 861}, {"source": 234, "target": 861}, {"source": 235, "target": 861}, {"source": 236, "target": 1206}, {"source": 237, "target": 1206}, {"source": 238, "target": 1206}, {"source": 239, "target": 1206}, {"source": 240, "target": 1206}, {"source": 241, "target": 1224}, {"source": 242, "target": 1206}, {"source": 243, "target": 1206}, {"source": 244, "target": 1206}, {"source": 245, "target": 1206}, {"source": 246, "target": 247}, {"source": 247, "target": 1221}, {"source": 248, "target": 655}, {"source": 249, "target": 655}, {"source": 250, "target": 249}, {"source": 251, "target": 655}, {"source": 252, "target": 263}, {"source": 253, "target": 263}, {"source": 254, "target": 263}, {"source": 255, "target": 263}, {"source": 256, "target": 263}, {"source": 257, "target": 263}, {"source": 258, "target": 263}, {"source": 259, "target": 263}, {"source": 260, "target": 263}, {"source": 261, "target": 263}, {"source": 262, "target": 263}, {"source": 263, "target": 1221}, {"source": 264, "target": 263}, {"source": 265, "target": 263}, {"source": 266, "target": 1207}, {"source": 267, "target": 1206}, {"source": 268, "target": 267}, {"source": 269, "target": 267}, {"source": 270, "target": 1221}, {"source": 271, "target": 270}, {"source": 272, "target": 861}, {"source": 273, "target": 270}, {"source": 274, "target": 1206}, {"source": 275, "target": 270}, {"source": 276, "target": 861}, {"source": 277, "target": 275}, {"source": 278, "target": 270}, {"source": 279, "target": 1206}, {"source": 280, "target": 1206}, {"source": 281, "target": 861}, {"source": 282, "target": 861}, {"source": 283, "target": 1206}, {"source": 284, "target": 1206}, {"source": 285, "target": 286}, {"source": 286, "target": 1207}, {"source": 287, "target": 296}, {"source": 288, "target": 1225}, {"source": 288, "target": 290}, {"source": 288, "target": 1226}, {"source": 289, "target": 1225}, {"source": 289, "target": 290}, {"source": 289, "target": 1226}, {"source": 290, "target": 1206}, {"source": 291, "target": 1211}, {"source": 292, "target": 289}, {"source": 293, "target": 289}, {"source": 294, "target": 1206}, {"source": 295, "target": 1206}, {"source": 296, "target": 1206}, {"source": 297, "target": 296}, {"source": 298, "target": 296}, {"source": 299, "target": 296}, {"source": 300, "target": 296}, {"source": 301, "target": 302}, {"source": 302, "target": 1206}, {"source": 303, "target": 1206}, {"source": 304, "target": 1206}, {"source": 305, "target": 1206}, {"source": 306, "target": 1206}, {"source": 307, "target": 1227}, {"source": 308, "target": 1228}, {"source": 309, "target": 1206}, {"source": 310, "target": 309}, {"source": 311, "target": 309}, {"source": 312, "target": 1206}, {"source": 313, "target": 1207}, {"source": 314, "target": 1206}, {"source": 315, "target": 1229}, {"source": 316, "target": 289}, {"source": 317, "target": 289}, {"source": 318, "target": 108}, {"source": 319, "target": 1230}, {"source": 320, "target": 1206}, {"source": 321, "target": 1206}, {"source": 322, "target": 1206}, {"source": 323, "target": 1206}, {"source": 324, "target": 1206}, {"source": 325, "target": 1206}, {"source": 326, "target": 1206}, {"source": 327, "target": 1206}, {"source": 328, "target": 1206}, {"source": 329, "target": 1206}, {"source": 330, "target": 1206}, {"source": 331, "target": 1206}, {"source": 332, "target": 1206}, {"source": 333, "target": 1231}, {"source": 334, "target": 335}, {"source": 335, "target": 1232}, {"source": 336, "target": 108}, {"source": 337, "target": 1206}, {"source": 338, "target": 1224}, {"source": 339, "target": 1206}, {"source": 340, "target": 1233}, {"source": 341, "target": 1233}, {"source": 342, "target": 1233}, {"source": 343, "target": 1206}, {"source": 344, "target": 1233}, {"source": 345, "target": 1233}, {"source": 346, "target": 1233}, {"source": 347, "target": 1233}, {"source": 348, "target": 1206}, {"source": 349, "target": 1206}, {"source": 350, "target": 357}, {"source": 351, "target": 1233}, {"source": 352, "target": 351}, {"source": 353, "target": 1233}, {"source": 354, "target": 1233}, {"source": 355, "target": 1233}, {"source": 356, "target": 1233}, {"source": 357, "target": 1233}, {"source": 358, "target": 1233}, {"source": 359, "target": 1206}, {"source": 360, "target": 1206}, {"source": 361, "target": 1206}, {"source": 362, "target": 1206}, {"source": 363, "target": 1206}, {"source": 364, "target": 1206}, {"source": 365, "target": 1221}, {"source": 366, "target": 1207}, {"source": 367, "target": 1206}, {"source": 368, "target": 1206}, {"source": 369, "target": 1221}, {"source": 370, "target": 369}, {"source": 371, "target": 1224}, {"source": 372, "target": 861}, {"source": 373, "target": 1206}, {"source": 374, "target": 373}, {"source": 375, "target": 1221}, {"source": 376, "target": 375}, {"source": 377, "target": 1221}, {"source": 378, "target": 1206}, {"source": 379, "target": 377}, {"source": 380, "target": 1206}, {"source": 381, "target": 1206}, {"source": 382, "target": 1206}, {"source": 383, "target": 1212}, {"source": 383, "target": 1234}, {"source": 384, "target": 1206}, {"source": 385, "target": 379}, {"source": 386, "target": 1206}, {"source": 387, "target": 1212}, {"source": 387, "target": 1234}, {"source": 388, "target": 1212}, {"source": 388, "target": 1234}, {"source": 389, "target": 1206}, {"source": 390, "target": 392}, {"source": 391, "target": 1207}, {"source": 392, "target": 1221}, {"source": 393, "target": 1206}, {"source": 394, "target": 1206}, {"source": 395, "target": 392}, {"source": 396, "target": 397}, {"source": 397, "target": 1221}, {"source": 398, "target": 1206}, {"source": 399, "target": 1235}, {"source": 400, "target": 1236}, {"source": 401, "target": 397}, {"source": 402, "target": 1206}, {"source": 403, "target": 1206}, {"source": 404, "target": 1206}, {"source": 405, "target": 407}, {"source": 406, "target": 407}, {"source": 407, "target": 1235}, {"source": 408, "target": 1221}, {"source": 409, "target": 1206}, {"source": 410, "target": 1206}, {"source": 411, "target": 407}, {"source": 412, "target": 407}, {"source": 413, "target": 408}, {"source": 414, "target": 1221}, {"source": 415, "target": 1206}, {"source": 416, "target": 1206}, {"source": 417, "target": 1224}, {"source": 418, "target": 429}, {"source": 419, "target": 427}, {"source": 420, "target": 1206}, {"source": 421, "target": 1206}, {"source": 422, "target": 1206}, {"source": 423, "target": 1206}, {"source": 424, "target": 1206}, {"source": 425, "target": 1206}, {"source": 426, "target": 1206}, {"source": 427, "target": 1221}, {"source": 428, "target": 1206}, {"source": 429, "target": 1221}, {"source": 430, "target": 1206}, {"source": 431, "target": 1221}, {"source": 432, "target": 1221}, {"source": 433, "target": 1206}, {"source": 434, "target": 1221}, {"source": 435, "target": 432}, {"source": 436, "target": 433}, {"source": 437, "target": 1206}, {"source": 438, "target": 432}, {"source": 439, "target": 434}, {"source": 440, "target": 431}, {"source": 441, "target": 1206}, {"source": 442, "target": 1206}, {"source": 443, "target": 1069}, {"source": 444, "target": 861}, {"source": 445, "target": 1206}, {"source": 446, "target": 1207}, {"source": 447, "target": 722}, {"source": 448, "target": 1206}, {"source": 449, "target": 1224}, {"source": 450, "target": 1224}, {"source": 451, "target": 1207}, {"source": 452, "target": 1207}, {"source": 453, "target": 1224}, {"source": 454, "target": 1206}, {"source": 455, "target": 462}, {"source": 456, "target": 861}, {"source": 457, "target": 462}, {"source": 458, "target": 1206}, {"source": 459, "target": 1224}, {"source": 460, "target": 462}, {"source": 461, "target": 1224}, {"source": 462, "target": 1206}, {"source": 463, "target": 1224}, {"source": 464, "target": 1224}, {"source": 465, "target": 1206}, {"source": 466, "target": 1224}, {"source": 467, "target": 1206}, {"source": 468, "target": 1206}, {"source": 469, "target": 1206}, {"source": 470, "target": 1206}, {"source": 471, "target": 1206}, {"source": 472, "target": 289}, {"source": 473, "target": 289}, {"source": 474, "target": 289}, {"source": 475, "target": 289}, {"source": 476, "target": 289}, {"source": 477, "target": 289}, {"source": 478, "target": 289}, {"source": 479, "target": 289}, {"source": 480, "target": 289}, {"source": 481, "target": 289}, {"source": 482, "target": 1206}, {"source": 483, "target": 1206}, {"source": 484, "target": 1206}, {"source": 485, "target": 1206}, {"source": 486, "target": 1206}, {"source": 487, "target": 1206}, {"source": 488, "target": 1206}, {"source": 489, "target": 1206}, {"source": 490, "target": 1237}, {"source": 491, "target": 1237}, {"source": 491, "target": 1238}, {"source": 492, "target": 1206}, {"source": 493, "target": 1206}, {"source": 494, "target": 1223}, {"source": 495, "target": 364}, {"source": 496, "target": 1206}, {"source": 497, "target": 1239}, {"source": 498, "target": 1239}, {"source": 499, "target": 1221}, {"source": 500, "target": 1240}, {"source": 501, "target": 515}, {"source": 502, "target": 518}, {"source": 503, "target": 522}, {"source": 504, "target": 523}, {"source": 505, "target": 1241}, {"source": 506, "target": 1206}, {"source": 507, "target": 1206}, {"source": 508, "target": 1206}, {"source": 509, "target": 1206}, {"source": 510, "target": 1206}, {"source": 511, "target": 1206}, {"source": 512, "target": 1206}, {"source": 513, "target": 1224}, {"source": 514, "target": 1206}, {"source": 515, "target": 1206}, {"source": 516, "target": 1206}, {"source": 517, "target": 1206}, {"source": 518, "target": 1221}, {"source": 519, "target": 1206}, {"source": 520, "target": 1206}, {"source": 521, "target": 1224}, {"source": 522, "target": 1221}, {"source": 523, "target": 1221}, {"source": 524, "target": 1206}, {"source": 525, "target": 1206}, {"source": 526, "target": 1237}, {"source": 527, "target": 528}, {"source": 528, "target": 1239}, {"source": 529, "target": 1224}, {"source": 530, "target": 1206}, {"source": 531, "target": 1206}, {"source": 532, "target": 1206}, {"source": 533, "target": 1206}, {"source": 534, "target": 1221}, {"source": 535, "target": 537}, {"source": 536, "target": 538}, {"source": 537, "target": 1221}, {"source": 538, "target": 1221}, {"source": 539, "target": 538}, {"source": 540, "target": 289}, {"source": 541, "target": 289}, {"source": 542, "target": 591}, {"source": 543, "target": 591}, {"source": 544, "target": 589}, {"source": 545, "target": 589}, {"source": 546, "target": 589}, {"source": 547, "target": 593}, {"source": 548, "target": 1206}, {"source": 549, "target": 548}, {"source": 550, "target": 548}, {"source": 551, "target": 548}, {"source": 552, "target": 548}, {"source": 553, "target": 1242}, {"source": 553, "target": 1243}, {"source": 554, "target": 548}, {"source": 555, "target": 548}, {"source": 556, "target": 548}, {"source": 557, "target": 548}, {"source": 558, "target": 548}, {"source": 559, "target": 548}, {"source": 560, "target": 548}, {"source": 561, "target": 548}, {"source": 562, "target": 548}, {"source": 563, "target": 548}, {"source": 564, "target": 548}, {"source": 565, "target": 548}, {"source": 566, "target": 548}, {"source": 567, "target": 573}, {"source": 568, "target": 573}, {"source": 569, "target": 548}, {"source": 570, "target": 548}, {"source": 571, "target": 548}, {"source": 572, "target": 548}, {"source": 573, "target": 571}, {"source": 574, "target": 548}, {"source": 575, "target": 1242}, {"source": 575, "target": 1243}, {"source": 576, "target": 548}, {"source": 577, "target": 548}, {"source": 578, "target": 548}, {"source": 579, "target": 548}, {"source": 580, "target": 548}, {"source": 581, "target": 548}, {"source": 582, "target": 548}, {"source": 583, "target": 548}, {"source": 584, "target": 548}, {"source": 585, "target": 1206}, {"source": 586, "target": 591}, {"source": 587, "target": 591}, {"source": 588, "target": 289}, {"source": 589, "target": 1206}, {"source": 590, "target": 591}, {"source": 591, "target": 589}, {"source": 592, "target": 589}, {"source": 593, "target": 591}, {"source": 594, "target": 589}, {"source": 595, "target": 620}, {"source": 596, "target": 620}, {"source": 597, "target": 620}, {"source": 598, "target": 589}, {"source": 599, "target": 1206}, {"source": 600, "target": 620}, {"source": 601, "target": 589}, {"source": 602, "target": 589}, {"source": 603, "target": 620}, {"source": 604, "target": 620}, {"source": 605, "target": 589}, {"source": 606, "target": 589}, {"source": 607, "target": 589}, {"source": 608, "target": 589}, {"source": 609, "target": 589}, {"source": 610, "target": 591}, {"source": 611, "target": 589}, {"source": 612, "target": 611}, {"source": 613, "target": 620}, {"source": 614, "target": 591}, {"source": 615, "target": 589}, {"source": 616, "target": 620}, {"source": 617, "target": 589}, {"source": 618, "target": 620}, {"source": 619, "target": 589}, {"source": 620, "target": 589}, {"source": 621, "target": 638}, {"source": 622, "target": 638}, {"source": 623, "target": 638}, {"source": 624, "target": 638}, {"source": 625, "target": 638}, {"source": 626, "target": 638}, {"source": 627, "target": 638}, {"source": 628, "target": 638}, {"source": 629, "target": 638}, {"source": 630, "target": 638}, {"source": 631, "target": 638}, {"source": 632, "target": 638}, {"source": 633, "target": 638}, {"source": 634, "target": 638}, {"source": 635, "target": 638}, {"source": 636, "target": 638}, {"source": 637, "target": 638}, {"source": 638, "target": 1206}, {"source": 639, "target": 638}, {"source": 640, "target": 589}, {"source": 641, "target": 642}, {"source": 641, "target": 1244}, {"source": 642, "target": 1206}, {"source": 643, "target": 589}, {"source": 644, "target": 620}, {"source": 645, "target": 591}, {"source": 646, "target": 1206}, {"source": 647, "target": 1206}, {"source": 648, "target": 1206}, {"source": 649, "target": 1207}, {"source": 650, "target": 1206}, {"source": 651, "target": 1206}, {"source": 652, "target": 646}, {"source": 653, "target": 1207}, {"source": 654, "target": 1206}, {"source": 655, "target": 861}, {"source": 656, "target": 1206}, {"source": 657, "target": 1206}, {"source": 658, "target": 1245}, {"source": 659, "target": 1228}, {"source": 660, "target": 1206}, {"source": 661, "target": 660}, {"source": 662, "target": 1206}, {"source": 663, "target": 1207}, {"source": 664, "target": 1206}, {"source": 665, "target": 668}, {"source": 666, "target": 670}, {"source": 667, "target": 668}, {"source": 668, "target": 1206}, {"source": 669, "target": 1246}, {"source": 670, "target": 1206}, {"source": 671, "target": 1207}, {"source": 672, "target": 1206}, {"source": 673, "target": 1208}, {"source": 674, "target": 1206}, {"source": 675, "target": 1247}, {"source": 676, "target": 674}, {"source": 677, "target": 1206}, {"source": 678, "target": 1211}, {"source": 679, "target": 1211}, {"source": 680, "target": 1206}, {"source": 681, "target": 1207}, {"source": 682, "target": 1235}, {"source": 683, "target": 1235}, {"source": 684, "target": 1235}, {"source": 685, "target": 1206}, {"source": 686, "target": 1206}, {"source": 687, "target": 1206}, {"source": 688, "target": 689}, {"source": 689, "target": 1221}, {"source": 690, "target": 660}, {"source": 691, "target": 1224}, {"source": 692, "target": 660}, {"source": 693, "target": 1207}, {"source": 694, "target": 1206}, {"source": 695, "target": 1235}, {"source": 696, "target": 1207}, {"source": 697, "target": 1206}, {"source": 698, "target": 1206}, {"source": 699, "target": 1206}, {"source": 700, "target": 1206}, {"source": 701, "target": 1206}, {"source": 702, "target": 1206}, {"source": 703, "target": 1221}, {"source": 704, "target": 704}, {"source": 705, "target": 1206}, {"source": 706, "target": 861}, {"source": 707, "target": 1206}, {"source": 708, "target": 1206}, {"source": 709, "target": 1206}, {"source": 710, "target": 1206}, {"source": 711, "target": 1206}, {"source": 712, "target": 711}, {"source": 713, "target": 1235}, {"source": 714, "target": 713}, {"source": 715, "target": 713}, {"source": 716, "target": 711}, {"source": 717, "target": 715}, {"source": 718, "target": 711}, {"source": 719, "target": 1239}, {"source": 720, "target": 1245}, {"source": 721, "target": 1206}, {"source": 722, "target": 1239}, {"source": 723, "target": 725}, {"source": 723, "target": 1248}, {"source": 724, "target": 725}, {"source": 724, "target": 1249}, {"source": 725, "target": 1206}, {"source": 726, "target": 1250}, {"source": 727, "target": 736}, {"source": 727, "target": 1213}, {"source": 728, "target": 736}, {"source": 728, "target": 1214}, {"source": 729, "target": 736}, {"source": 729, "target": 1215}, {"source": 730, "target": 727}, {"source": 731, "target": 728}, {"source": 732, "target": 729}, {"source": 733, "target": 124}, {"source": 733, "target": 1251}, {"source": 734, "target": 125}, {"source": 734, "target": 1251}, {"source": 735, "target": 126}, {"source": 735, "target": 1251}, {"source": 736, "target": 806}, {"source": 736, "target": 1251}, {"source": 737, "target": 835}, {"source": 737, "target": 1251}, {"source": 738, "target": 130}, {"source": 738, "target": 1251}, {"source": 739, "target": 142}, {"source": 740, "target": 159}, {"source": 741, "target": 160}, {"source": 742, "target": 162}, {"source": 743, "target": 163}, {"source": 744, "target": 164}, {"source": 745, "target": 177}, {"source": 746, "target": 861}, {"source": 747, "target": 861}, {"source": 748, "target": 861}, {"source": 749, "target": 861}, {"source": 750, "target": 861}, {"source": 751, "target": 861}, {"source": 752, "target": 861}, {"source": 753, "target": 861}, {"source": 754, "target": 861}, {"source": 755, "target": 861}, {"source": 756, "target": 861}, {"source": 757, "target": 861}, {"source": 758, "target": 861}, {"source": 759, "target": 861}, {"source": 760, "target": 861}, {"source": 761, "target": 861}, {"source": 762, "target": 753}, {"source": 763, "target": 861}, {"source": 764, "target": 861}, {"source": 765, "target": 861}, {"source": 766, "target": 861}, {"source": 767, "target": 861}, {"source": 768, "target": 861}, {"source": 769, "target": 861}, {"source": 770, "target": 861}, {"source": 771, "target": 861}, {"source": 772, "target": 861}, {"source": 773, "target": 861}, {"source": 774, "target": 861}, {"source": 775, "target": 861}, {"source": 776, "target": 1207}, {"source": 777, "target": 784}, {"source": 778, "target": 784}, {"source": 779, "target": 784}, {"source": 780, "target": 785}, {"source": 780, "target": 1252}, {"source": 781, "target": 785}, {"source": 781, "target": 1252}, {"source": 782, "target": 785}, {"source": 782, "target": 1252}, {"source": 783, "target": 784}, {"source": 784, "target": 786}, {"source": 785, "target": 830}, {"source": 785, "target": 1253}, {"source": 786, "target": 861}, {"source": 787, "target": 861}, {"source": 788, "target": 861}, {"source": 789, "target": 861}, {"source": 790, "target": 861}, {"source": 791, "target": 861}, {"source": 792, "target": 861}, {"source": 793, "target": 861}, {"source": 794, "target": 806}, {"source": 795, "target": 806}, {"source": 796, "target": 806}, {"source": 797, "target": 808}, {"source": 798, "target": 808}, {"source": 799, "target": 808}, {"source": 800, "target": 809}, {"source": 800, "target": 1213}, {"source": 801, "target": 809}, {"source": 801, "target": 1214}, {"source": 802, "target": 809}, {"source": 802, "target": 1215}, {"source": 803, "target": 809}, {"source": 803, "target": 1216}, {"source": 804, "target": 809}, {"source": 804, "target": 1217}, {"source": 805, "target": 809}, {"source": 805, "target": 1218}, {"source": 806, "target": 861}, {"source": 807, "target": 808}, {"source": 808, "target": 806}, {"source": 809, "target": 830}, {"source": 810, "target": 861}, {"source": 811, "target": 861}, {"source": 812, "target": 818}, {"source": 813, "target": 818}, {"source": 814, "target": 818}, {"source": 815, "target": 818}, {"source": 816, "target": 818}, {"source": 817, "target": 818}, {"source": 818, "target": 861}, {"source": 819, "target": 861}, {"source": 820, "target": 861}, {"source": 821, "target": 861}, {"source": 822, "target": 861}, {"source": 823, "target": 829}, {"source": 824, "target": 829}, {"source": 825, "target": 829}, {"source": 826, "target": 785}, {"source": 826, "target": 1254}, {"source": 827, "target": 785}, {"source": 827, "target": 1254}, {"source": 828, "target": 785}, {"source": 828, "target": 1254}, {"source": 829, "target": 786}, {"source": 830, "target": 1206}, {"source": 831, "target": 1255}, {"source": 832, "target": 861}, {"source": 833, "target": 861}, {"source": 834, "target": 830}, {"source": 834, "target": 1256}, {"source": 835, "target": 861}, {"source": 836, "target": 835}, {"source": 837, "target": 860}, {"source": 838, "target": 859}, {"source": 839, "target": 859}, {"source": 840, "target": 859}, {"source": 841, "target": 860}, {"source": 842, "target": 859}, {"source": 843, "target": 859}, {"source": 844, "target": 859}, {"source": 845, "target": 859}, {"source": 846, "target": 859}, {"source": 847, "target": 859}, {"source": 848, "target": 859}, {"source": 849, "target": 859}, {"source": 850, "target": 860}, {"source": 851, "target": 860}, {"source": 852, "target": 860}, {"source": 853, "target": 852}, {"source": 854, "target": 859}, {"source": 855, "target": 859}, {"source": 856, "target": 859}, {"source": 857, "target": 859}, {"source": 858, "target": 859}, {"source": 859, "target": 861}, {"source": 860, "target": 859}, {"source": 861, "target": 1206}, {"source": 862, "target": 1257}, {"source": 863, "target": 1206}, {"source": 864, "target": 861}, {"source": 865, "target": 861}, {"source": 866, "target": 861}, {"source": 867, "target": 861}, {"source": 868, "target": 878}, {"source": 869, "target": 878}, {"source": 870, "target": 878}, {"source": 871, "target": 879}, {"source": 872, "target": 879}, {"source": 873, "target": 879}, {"source": 874, "target": 880}, {"source": 875, "target": 880}, {"source": 876, "target": 880}, {"source": 877, "target": 869}, {"source": 878, "target": 861}, {"source": 879, "target": 861}, {"source": 880, "target": 861}, {"source": 881, "target": 861}, {"source": 882, "target": 861}, {"source": 883, "target": 902}, {"source": 884, "target": 902}, {"source": 885, "target": 902}, {"source": 886, "target": 903}, {"source": 887, "target": 903}, {"source": 888, "target": 903}, {"source": 889, "target": 904}, {"source": 890, "target": 904}, {"source": 891, "target": 904}, {"source": 892, "target": 861}, {"source": 893, "target": 861}, {"source": 894, "target": 905}, {"source": 895, "target": 905}, {"source": 896, "target": 906}, {"source": 897, "target": 906}, {"source": 898, "target": 906}, {"source": 899, "target": 907}, {"source": 900, "target": 907}, {"source": 901, "target": 907}, {"source": 902, "target": 861}, {"source": 903, "target": 861}, {"source": 904, "target": 861}, {"source": 905, "target": 861}, {"source": 906, "target": 861}, {"source": 907, "target": 861}, {"source": 908, "target": 913}, {"source": 909, "target": 915}, {"source": 910, "target": 913}, {"source": 911, "target": 915}, {"source": 912, "target": 913}, {"source": 913, "target": 861}, {"source": 914, "target": 915}, {"source": 915, "target": 861}, {"source": 916, "target": 861}, {"source": 917, "target": 861}, {"source": 918, "target": 861}, {"source": 919, "target": 861}, {"source": 920, "target": 861}, {"source": 921, "target": 861}, {"source": 922, "target": 861}, {"source": 923, "target": 861}, {"source": 924, "target": 923}, {"source": 925, "target": 923}, {"source": 926, "target": 861}, {"source": 926, "target": 1238}, {"source": 927, "target": 1206}, {"source": 928, "target": 1224}, {"source": 929, "target": 364}, {"source": 930, "target": 289}, {"source": 136, "target": 162}, {"source": 137, "target": 163}, {"source": 138, "target": 164}, {"source": 139, "target": 165}, {"source": 140, "target": 166}, {"source": 141, "target": 167}, {"source": 142, "target": 177}, {"source": 143, "target": 148}, {"source": 144, "target": 150}, {"source": 145, "target": 148}, {"source": 146, "target": 150}, {"source": 147, "target": 861}, {"source": 148, "target": 861}, {"source": 149, "target": 150}, {"source": 150, "target": 861}, {"source": 151, "target": 747}, {"source": 152, "target": 752}, {"source": 153, "target": 754}, {"source": 154, "target": 131}, {"source": 155, "target": 861}, {"source": 156, "target": 761}, {"source": 157, "target": 765}, {"source": 158, "target": 766}, {"source": 159, "target": 161}, {"source": 160, "target": 161}, {"source": 162, "target": 168}, {"source": 163, "target": 168}, {"source": 164, "target": 168}, {"source": 165, "target": 169}, {"source": 166, "target": 169}, {"source": 167, "target": 169}, {"source": 170, "target": 813}, {"source": 171, "target": 861}, {"source": 172, "target": 171}, {"source": 173, "target": 861}, {"source": 174, "target": 861}, {"source": 175, "target": 861}, {"source": 176, "target": 861}, {"source": 177, "target": 185}, {"source": 178, "target": 861}, {"source": 179, "target": 865}, {"source": 180, "target": 823}, {"source": 181, "target": 824}, {"source": 182, "target": 825}, {"source": 183, "target": 866}, {"source": 184, "target": 132}, {"source": 185, "target": 861}, {"source": 978, "target": 1224}, {"source": 979, "target": 861}, {"source": 980, "target": 861}, {"source": 981, "target": 790}, {"source": 982, "target": 983}, {"source": 983, "target": 1207}, {"source": 984, "target": 289}, {"source": 985, "target": 289}, {"source": 986, "target": 1239}, {"source": 987, "target": 289}, {"source": 988, "target": 289}, {"source": 989, "target": 289}, {"source": 990, "target": 289}, {"source": 991, "target": 994}, {"source": 992, "target": 993}, {"source": 993, "target": 1258}, {"source": 994, "target": 1259}, {"source": 995, "target": 993}, {"source": 996, "target": 993}, {"source": 997, "target": 1206}, {"source": 998, "target": 1260}, {"source": 998, "target": 1261}, {"source": 999, "target": 1206}, {"source": 1000, "target": 1206}, {"source": 1001, "target": 1206}, {"source": 1002, "target": 1017}, {"source": 1003, "target": 1017}, {"source": 1004, "target": 1017}, {"source": 1005, "target": 1017}, {"source": 1006, "target": 1017}, {"source": 1007, "target": 1017}, {"source": 1008, "target": 1017}, {"source": 1009, "target": 1017}, {"source": 1010, "target": 1017}, {"source": 1011, "target": 1017}, {"source": 1012, "target": 1017}, {"source": 1013, "target": 1017}, {"source": 1014, "target": 1206}, {"source": 1015, "target": 1017}, {"source": 1016, "target": 1017}, {"source": 1017, "target": 1206}, {"source": 1018, "target": 861}, {"source": 1019, "target": 1017}, {"source": 1020, "target": 1206}, {"source": 1021, "target": 1262}, {"source": 1022, "target": 1206}, {"source": 1023, "target": 1221}, {"source": 1024, "target": 1235}, {"source": 1025, "target": 1235}, {"source": 1026, "target": 1023}, {"source": 1027, "target": 1023}, {"source": 1028, "target": 1235}, {"source": 1029, "target": 1206}, {"source": 1030, "target": 1235}, {"source": 1031, "target": 1224}, {"source": 1032, "target": 1224}, {"source": 1033, "target": 1206}, {"source": 1034, "target": 1023}, {"source": 1035, "target": 1039}, {"source": 1036, "target": 1039}, {"source": 1037, "target": 1039}, {"source": 1038, "target": 1206}, {"source": 1039, "target": 1206}, {"source": 1040, "target": 1206}, {"source": 1041, "target": 1224}, {"source": 1042, "target": 1206}, {"source": 1043, "target": 1042}, {"source": 1044, "target": 289}, {"source": 1045, "target": 1263}, {"source": 1045, "target": 1264}, {"source": 1046, "target": 1223}, {"source": 1047, "target": 1206}, {"source": 1048, "target": 1206}, {"source": 1049, "target": 1206}, {"source": 1050, "target": 1265}, {"source": 1051, "target": 1206}, {"source": 1052, "target": 1206}, {"source": 1053, "target": 1206}, {"source": 1054, "target": 1206}, {"source": 1055, "target": 1266}, {"source": 1056, "target": 1206}, {"source": 1057, "target": 1206}, {"source": 1058, "target": 1072}, {"source": 1059, "target": 1056}, {"source": 1060, "target": 1056}, {"source": 1061, "target": 1206}, {"source": 1062, "target": 1206}, {"source": 1063, "target": 1066}, {"source": 1064, "target": 1065}, {"source": 1065, "target": 1266}, {"source": 1066, "target": 1065}, {"source": 1067, "target": 1065}, {"source": 1068, "target": 1065}, {"source": 1069, "target": 1072}, {"source": 1070, "target": 1072}, {"source": 1071, "target": 1072}, {"source": 1072, "target": 1266}, {"source": 1073, "target": 1072}, {"source": 1074, "target": 1072}, {"source": 1075, "target": 1072}, {"source": 1076, "target": 1235}, {"source": 1077, "target": 1110}, {"source": 1078, "target": 1235}, {"source": 1079, "target": 1077}, {"source": 1080, "target": 1111}, {"source": 1081, "target": 1235}, {"source": 1082, "target": 1080}, {"source": 1083, "target": 1206}, {"source": 1084, "target": 1091}, {"source": 1085, "target": 1094}, {"source": 1086, "target": 1091}, {"source": 1087, "target": 1094}, {"source": 1088, "target": 1094}, {"source": 1089, "target": 1091}, {"source": 1090, "target": 1094}, {"source": 1091, "target": 1083}, {"source": 1092, "target": 1091}, {"source": 1093, "target": 1094}, {"source": 1094, "target": 1083}, {"source": 1095, "target": 1094}, {"source": 1096, "target": 1091}, {"source": 1097, "target": 1094}, {"source": 1098, "target": 1235}, {"source": 1099, "target": 1104}, {"source": 1100, "target": 1105}, {"source": 1101, "target": 1104}, {"source": 1102, "target": 1105}, {"source": 1103, "target": 1206}, {"source": 1104, "target": 1103}, {"source": 1105, "target": 1103}, {"source": 1106, "target": 1206}, {"source": 1107, "target": 1206}, {"source": 1108, "target": 1110}, {"source": 1109, "target": 1228}, {"source": 1109, "target": 1261}, {"source": 1110, "target": 1066}, {"source": 1111, "target": 1065}, {"source": 1112, "target": 1206}, {"source": 1113, "target": 1112}, {"source": 1113, "target": 1267}, {"source": 1114, "target": 1112}, {"source": 1114, "target": 1268}, {"source": 1115, "target": 1206}, {"source": 1116, "target": 1122}, {"source": 1117, "target": 1115}, {"source": 1118, "target": 1115}, {"source": 1119, "target": 1206}, {"source": 1120, "target": 1125}, {"source": 1121, "target": 1120}, {"source": 1122, "target": 1115}, {"source": 1123, "target": 1115}, {"source": 1124, "target": 1115}, {"source": 1125, "target": 1130}, {"source": 1126, "target": 1206}, {"source": 1127, "target": 1115}, {"source": 1128, "target": 1115}, {"source": 1129, "target": 1115}, {"source": 1130, "target": 1115}, {"source": 1131, "target": 1122}, {"source": 1132, "target": 1108}, {"source": 1133, "target": 1121}, {"source": 1133, "target": 1267}, {"source": 1134, "target": 1206}, {"source": 1135, "target": 1206}, {"source": 1136, "target": 1108}, {"source": 1137, "target": 1110}, {"source": 1138, "target": 1108}, {"source": 1139, "target": 1108}, {"source": 1140, "target": 1108}, {"source": 1141, "target": 1108}, {"source": 1142, "target": 1109}, {"source": 1143, "target": 1144}, {"source": 1144, "target": 1110}, {"source": 1145, "target": 1110}, {"source": 1146, "target": 1110}, {"source": 1147, "target": 1110}, {"source": 1148, "target": 1110}, {"source": 1149, "target": 1110}, {"source": 1150, "target": 1110}, {"source": 1151, "target": 1110}, {"source": 1152, "target": 1110}, {"source": 1153, "target": 1110}, {"source": 1154, "target": 1110}, {"source": 1155, "target": 1110}, {"source": 1156, "target": 1110}, {"source": 1157, "target": 1110}, {"source": 1158, "target": 1110}, {"source": 1159, "target": 1110}, {"source": 1160, "target": 1110}, {"source": 1161, "target": 1110}, {"source": 1162, "target": 1110}, {"source": 1163, "target": 1110}, {"source": 1164, "target": 1110}, {"source": 1165, "target": 1110}, {"source": 1166, "target": 1111}, {"source": 1167, "target": 1110}, {"source": 1168, "target": 1111}, {"source": 1169, "target": 1111}, {"source": 1170, "target": 1111}, {"source": 1171, "target": 1111}, {"source": 1172, "target": 1206}, {"source": 1173, "target": 1206}, {"source": 1174, "target": 1206}, {"source": 1175, "target": 1206}, {"source": 1176, "target": 1206}, {"source": 1177, "target": 1176}, {"source": 1178, "target": 1176}, {"source": 1179, "target": 1206}, {"source": 1180, "target": 1206}, {"source": 1181, "target": 1206}, {"source": 1182, "target": 1206}, {"source": 1183, "target": 1206}, {"source": 1184, "target": 1235}, {"source": 1185, "target": 1206}, {"source": 1186, "target": 1206}, {"source": 1187, "target": 1206}, {"source": 1188, "target": 1206}, {"source": 1189, "target": 1224}, {"source": 1190, "target": 1191}, {"source": 1191, "target": 1206}, {"source": 1192, "target": 1206}, {"source": 1193, "target": 1206}, {"source": 1194, "target": 1207}, {"source": 1195, "target": 1207}, {"source": 1196, "target": 1258}, {"source": 1197, "target": 1258}, {"source": 1198, "target": 2}, {"source": 1199, "target": 1239}, {"source": 1200, "target": 1206}, {"source": 1201, "target": 1269}, {"source": 1202, "target": 1258}, {"source": 1203, "target": 1269}, {"source": 1204, "target": 1206}, {"source": 1205, "target": 1206}]}