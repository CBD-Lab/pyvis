{"nodes": [{"name": "torch", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\__init__.py", "ftype": ".py", "layer": 0, "hasclass": 123, "myclass": ["AggregationType", "AliasDb", "AnyType", "Argument", "ArgumentSpec", "BFloat16Storage", "BFloat16Tensor", "BenchmarkConfig", "BenchmarkExecutionStats", "Block", "BoolStorage", "BoolTensor", "BoolType", "BufferDict", "ByteStorage", "ByteTensor", "CallStack", "Capsule", "CharStorage", "CharTensor", "ClassType", "Code", "CompleteArgumentSpec", "ComplexDoubleStorage", "ComplexFloatStorage", "ComplexType", "ConcreteModuleType", "ConcreteModuleTypeBuilder", "DeepCopyMemoTable", "DeserializationStorageContext", "DeviceObjType", "DictType", "DispatchKey", "DispatchKeySet", "DoubleStorage", "DoubleTensor", "EnumType", "ErrorReport", "ExcludeDispatchKeyGuard", "ExecutionPlan", "FatalError", "FileCheck", "FloatStorage", "FloatTensor", "FloatType", "FunctionSchema", "Future", "FutureType", "Gradient", "Graph", "GraphExecutorState", "HalfStorage", "HalfTensor", "IODescriptor", "InferredType", "IntStorage", "IntTensor", "IntType", "InterfaceType", "ListType", "LiteScriptModule", "LockingLogger", "LongStorage", "LongTensor", "MobileOptimizerType", "ModuleDict", "Node", "NoneType", "NoopLogger", "NumberType", "OperatorInfo", "OptionalType", "ParameterDict", "PyObjectType", "PyTorchFileReader", "PyTorchFileWriter", "QInt32Storage", "QInt8Storage", "QUInt2x4Storage", "QUInt4x2Storage", "QUInt8Storage", "RRefType", "ScriptClass", "ScriptClassFunction", "ScriptDict", "ScriptDictIterator", "ScriptDictKeyIterator", "ScriptList", "ScriptListIterator", "ScriptMethod", "ScriptModule", "ScriptModuleSerializer", "ScriptObject", "ScriptObjectProperty", "SerializationStorageContext", "ShortStorage", "ShortTensor", "Size", "StaticModule", "Storage", "Stream", "StreamObjType", "StringType", "SymFloatNode", "SymIntNode", "SymIntType", "Tag", "Tensor", "TensorType", "ThroughputBenchmark", "TracingState", "TupleType", "Type", "UnionType", "Use", "Value", "device", "dtype", "finfo", "iinfo", "layout", "memory_format", "qscheme"], "hasfunction": 19, "myfunction": ["_assert", "_load_global_deps", "_preload_cuda_deps", "_register_device_module", "are_deterministic_algorithms_enabled", "compiled_with_cxx11_abi", "get_deterministic_debug_mode", "get_float32_matmul_precision", "is_deterministic_algorithms_warn_only_enabled", "is_storage", "is_tensor", "is_warn_always_enabled", "set_default_dtype", "set_default_tensor_type", "set_deterministic_debug_mode", "set_float32_matmul_precision", "set_warn_always", "typename", "use_deterministic_algorithms"]}, {"name": "torch._C", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_C.cp37-win_amd64.pyd", "ftype": ".pyd", "layer": 1, "hasclass": 31, "myclass": ["DisableTorchFunction", "Generator", "LoggerBase", "StorageBase", "_AliasInfo", "_AutoDispatchBelowAutograd", "_ConvBackend", "_DisableFuncTorch", "_DisablePythonDispatcher", "_DisableTorchDispatch", "_DispatchModule", "_DispatchOperatorHandle", "_EnablePythonDispatcher", "_EnableTorchFunction", "_FunctionBase", "_ImperativeEngine", "_InferenceMode", "_LegacyVariableBase", "_LinAlgError", "_LinalgBackend", "_RestorePythonTLSSnapshot", "_SchemaArgType", "_SchemaArgument", "_SchemaInfo", "_ShapeComputeGraphMapping", "_TensorBase", "_TensorMeta", "_UpgraderEntry", "_UpgraderRange", "_VariableFunctionsClass", "_WeakTensorRef"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._autograd", "file": "none", "ftype": "none", "layer": 2, "hasclass": 6, "myclass": ["DeviceType", "ProfilerEvent", "SavedTensor", "_KinetoEvent", "_ProfilerDisableOptions", "_ProfilerResult"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._distributed_c10d", "file": "none", "ftype": "none", "layer": 2, "hasclass": 10, "myclass": ["AllgatherOptions", "BuiltinCommHookType", "DDPLoggingData", "FileStore", "GradBucket", "Logger", "Reducer", "TCPStore", "_DistributedBackendOptions", "_ProcessGroupWrapper"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._fft", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._functions", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._functorch", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._itt", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._jit", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._jit_tree_views", "file": "none", "ftype": "none", "layer": 2, "hasclass": 45, "myclass": ["Apply", "Assert", "Assign", "Attribute", "AugAssign", "BinOp", "Break", "ClassDef", "Const", "Continue", "Decl", "Def", "Delete", "DictComp", "DictLiteral", "Dots", "EmptyTypeAnnotation", "Expr", "ExprStmt", "For", "Ident", "If", "ListComp", "ListLiteral", "Param", "Pass", "Property", "Raise", "Return", "Select", "SliceExpr", "SourceRange", "SourceRangeFactory", "Starred", "Stmt", "StringLiteral", "Subscript", "TernaryIf", "TreeView", "TupleLiteral", "UnaryOp", "Var", "While", "With", "WithItem"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._lazy", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._lazy_ts_backend", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._linalg", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._monitor", "file": "none", "ftype": "none", "layer": 2, "hasclass": 5, "myclass": ["Aggregation", "Event", "EventHandlerHandle", "Stat", "data_value_t"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._nested", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._nn", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._onnx", "file": "none", "ftype": "none", "layer": 2, "hasclass": 3, "myclass": ["OperatorExportTypes", "TensorProtoDataType", "TrainingMode"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._profiler", "file": "none", "ftype": "none", "layer": 2, "hasclass": 20, "myclass": ["ActiveProfilerType", "ProfilerActivity", "ProfilerConfig", "ProfilerState", "RecordScope", "_EventType", "_ExperimentalConfig", "_ExtraFields_Allocation", "_ExtraFields_Backend", "_ExtraFields_Kineto", "_ExtraFields_OutOfMemory", "_ExtraFields_PyCCall", "_ExtraFields_PyCall", "_ExtraFields_TorchOp", "_Inputs", "_NNModuleInfo", "_OptInfo", "_ProfilerEvent", "_PyFrameState", "_TensorMetadata"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._return_types", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._sparse", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._special", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._te", "file": "none", "ftype": "none", "layer": 2, "hasclass": 22, "myclass": ["ArgValue", "Block", "BufHandle", "BufferArg", "Cast", "CodeGen", "Cond", "Dtype", "ExprHandle", "ExternalCall", "For", "LoopNest", "Maximum", "Reducer", "ScalarType", "SimpleIREvaluator", "Stmt", "Store", "Sum", "Tensor", "TensorExprKernel", "VarHandle"], "hasfunction": 0, "myfunction": []}, {"name": "torch._C._verbose", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._C.cpp", "file": "none", "ftype": "none", "layer": 2, "hasclass": 2, "myclass": ["OrderedModuleDict", "OrderedTensorDict"], "hasfunction": 0, "myfunction": []}, {"name": "torch._VF", "file": "none", "ftype": "none", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.__config__", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\__config__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["_cxx_flags", "parallel_info", "show"]}, {"name": "torch.__future__", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\__future__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["get_overwrite_module_params_on_conversion", "set_overwrite_module_params_on_conversion"]}, {"name": "torch._classes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_classes.py", "layer": 1, "hasclass": 2, "myclass": ["_ClassNamespace", "_Classes"], "hasfunction": 0, "myfunction": []}, {"name": "torch._decomp", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_decomp\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["get_decompositions", "register_decomposition"]}, {"name": "torch._decomp.decompositions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_decomp\\decompositions.py", "layer": 2, "hasclass": 1, "myclass": ["Reduction"], "hasfunction": 101, "myfunction": ["_broadcast_batch_norm_backward", "_cast_grad_to_input_dtype", "_euclidean_dist", "_fused_dropout_decomposition", "_im2col_col2im_indices_along_dim", "_log_softmax", "_log_softmax_backward_data", "_maybe_cast", "_nll_loss_backward", "_reshape_alias", "_softmax", "_softmax_backward_data", "_squeeze_multiple", "_sum_tensors", "_to_copy", "_unsqueeze_to_dim", "_upsample_cubic_convolution1", "_upsample_cubic_convolution2", "_upsample_cubic_interp1d", "_upsample_get_cubic_coefficients", "adaptive_avg_pool2d", "addcmul", "addmm", "apply_loss_reduction", "binary_cross_entropy", "binary_cross_entropy_backward", "binary_cross_entropy_with_logits", "col2im", "cudnn_batch_norm", "cudnn_batch_norm_backward", "diagonal_backward", "dot", "elu", "elu_backward", "embedding", "embedding_dense_backward", "gelu_backward", "glu_backward", "grid_sampler_2d", "hardshrink_backward", "hardsigmoid", "hardsigmoid_backward", "hardswish", "hardswish_backward", "hardtanh_backward", "huber_loss_backward", "im2col", "index_add_", "is_same_size", "leaky_relu_backward", "log_sigmoid_backward", "log_sigmoid_forward", "logit_backward", "logsumexp", "matmul", "mish_backward", "mse_loss", "mse_loss_backward", "mv", "native_batch_norm", "native_batch_norm_backward", "native_dropout", "native_dropout_backward", "native_group_norm", "native_group_norm_backward", "native_layer_norm_backward", "nll_loss2d_backward", "nll_loss_backward", "nll_loss_forward", "nop_decomposition", "norm", "normalize", "prelu_backward", "prod", "register_inplace", "rrelu_with_noise_backward", "rsub_Scalar", "rsub_Tensor", "select_backward", "should_fold", "sigmoid_backward", "silu", "silu_backward", "slice_backward", "slice_forward", "soft_margin_loss", "soft_margin_loss_backward", "softplus_backward", "softshrink_backward", "split", "split_with_sizes", "std_decomposition", "tanh_backward", "threshold_backward", "to_real_dtype", "type_casts", "upsample_bicubic2d_default", "upsample_bicubic2d_vec", "upsample_bilinear2d_vec", "var_correction", "xlogy"]}, {"name": "torch._jit_internal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_jit_internal.py", "layer": 1, "hasclass": 5, "myclass": ["BroadcastingListCls", "FunctionModifiers", "SourceLoader", "_IgnoreContextManager", "_TensorExtractor"], "hasfunction": 53, "myfunction": ["_check_overload_body", "_clear_fn_overloads", "_copy_to_script_wrapper", "_create_named_tuple", "_disable_emit_hooks", "_disable_emit_hooks_decorator", "_extract_tensors", "_get_fn_overloads", "_get_named_tuple_properties", "_get_overloaded_methods", "_is_exception", "_isinstance", "_overload", "_overload_method", "_qualified_name", "_try_get_dispatched_fn", "boolean_dispatch", "can_compile_class", "check_args_exist", "check_empty_containers", "container_checker", "copy_torchscript_modifier", "createResolutionCallbackForClassMethods", "createResolutionCallbackFromClosure", "createResolutionCallbackFromEnv", "createResolutionCallbackFromFrame", "export", "get_annotation_str", "get_args", "get_callable_argument_names", "get_class_name_lineno", "get_closure", "get_origin", "get_overload_no_implementation_error_message", "get_static_fn", "get_torchscript_modifier", "get_type_hint_captures", "ignore", "is_dict", "is_final", "is_future", "is_ignored_fn", "is_list", "is_optional", "is_rref_instance", "is_scripting", "is_static_fn", "is_tuple", "is_union", "module_has_exports", "raise_error_container_parameter_missing", "should_drop", "unused"]}, {"name": "torch._linalg_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_linalg_utils.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 14, "myfunction": ["basis", "bform", "conjugate", "eig", "get_floating_dtype", "is_sparse", "lstsq", "matmul", "matrix_rank", "qform", "solve", "symeig", "transjugate", "transpose"]}, {"name": "torch._lobpcg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_lobpcg.py", "layer": 1, "hasclass": 2, "myclass": ["LOBPCG", "LOBPCGAutogradFunction"], "hasfunction": 11, "myfunction": ["LOBPCG_call_tracker", "call_tracker", "_lobpcg", "_matrix_polynomial_value", "_polynomial_coefficients_given_roots", "_polynomial_value", "_symeig_backward", "_symeig_backward_complete_eigenspace", "_symeig_backward_partial_eigenspace", "_vector_polynomial_value", "lobpcg"]}, {"name": "torch._lowrank", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_lowrank.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 4, "myfunction": ["_svd_lowrank", "get_approximate_basis", "pca_lowrank", "svd_lowrank"]}, {"name": "torch._meta_registrations", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_meta_registrations.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 60, "myfunction": ["_compute_reduction_shape", "_get_reduction_dtype", "arange", "arange_start", "avg_pool2d_backward_shape_check", "checkUplo", "check_dim_size", "common_meta_baddbmm_bmm", "div_rtn", "dot_check", "full", "meta_adaptive_avg_pool2d", "meta_adaptive_avg_pool3d", "meta_addbmm", "meta_alias", "meta_angle", "meta_angle_out", "meta_avg_pool2d", "meta_bernoulli", "meta_bmm", "meta_cdist_forward", "meta_complex", "meta_conv", "meta_copy_", "meta_diag", "meta_dot", "meta_embedding_bag", "meta_embedding_bag_forward_only", "meta_fft_c2c", "meta_fft_c2r", "meta_fft_r2c", "meta_fill_", "meta_index_Tensor", "meta_index_put", "meta_index_put_", "meta_index_select", "meta_index_select_out", "meta_like", "meta_linalg_eigh", "meta_logical_not_", "meta_masked_fill_", "meta_max", "meta_max_pool2d_with_indices", "meta_mm", "meta_nanmedian", "meta_nanmedian_dim", "meta_nansum", "meta_pad2d", "meta_randperm", "meta_relu_", "meta_repeat", "meta_repeat_interleave_Tensor", "meta_zero_", "pool2d_shape_check", "pooling_output_shape", "pooling_output_shape_pad_lr", "register_meta", "squareCheckInputs", "toRealValueType", "vdot"]}, {"name": "torch._namedtensor_internals", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_namedtensor_internals.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 12, "myfunction": ["build_dim_map", "check_serializing_named_tensor", "expand_single_ellipsis", "is_ellipsis", "namer_api_name", "replace_ellipsis_by_position", "resolve_ellipsis", "single_ellipsis_index", "unzip_namedshape", "update_names", "update_names_with_list", "update_names_with_mapping"]}, {"name": "torch._ops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_ops.py", "layer": 1, "hasclass": 7, "myclass": ["OpOverload", "OpOverloadPacket", "PyOperator", "PyOperatorABC", "_OpNamespace", "_Ops", "_PyOpNamespace"], "hasfunction": 7, "myfunction": ["_compute_keyset", "_get_tensors", "_to_flat_tuple", "dl_open_guard", "has_key", "key_extractor", "resolve_key"]}, {"name": "torch._prims", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_prims\\__init__.py", "layer": 1, "hasclass": 1, "myclass": ["ELEMENTWISE_PRIM_TYPE_PROMOTION_KIND"], "hasfunction": 86, "myfunction": ["TensorMeta", "_arange_aten", "_arange_meta", "_as_strided_aten", "_as_strided_meta", "_broadcast_in_dim_aten", "_broadcast_in_dim_meta", "_cat_aten", "_cat_meta", "_cbrt_aten", "_collapse_view_aten", "_collapse_view_helper", "_collapse_view_meta", "_complex_only_elementwise_meta", "_conj_meta", "_conj_physical_meta", "_convert_element_type_aten", "_convert_element_type_meta", "_copy_to_aten", "_copy_to_meta", "_device_put_aten", "_device_put_meta", "_div_aten", "_elementwise_meta", "_empty_aten", "_empty_meta", "_empty_strided_meta", "_fft_c2c_aten", "_fft_c2c_meta", "_fft_c2r_aten", "_fft_c2r_meta", "_fft_r2c_aten", "_fft_r2c_meta", "_fill_aten", "_fill_meta", "_full_aten", "_full_like_aten", "_full_like_meta", "_full_meta", "_item_meta", "_make_elementwise_binary_prim", "_make_elementwise_unary_prim", "_make_prim", "_make_reduction_prim", "_make_var_reduction_prim", "_maximum_aten", "_maximum_value_aten", "_maximum_value_meta", "_minimum_aten", "_minimum_value_aten", "_minimum_value_meta", "_normal_aten", "_normal_meta", "_not_impl", "_prod_aten", "_reduction_meta", "_reshape_aten", "_reshape_meta", "_resize_aten", "_resize_meta", "_rev_meta", "_scalar_tensor_aten", "_scalar_tensor_meta", "_slice_aten", "_slice_in_dim_aten", "_slice_in_dim_meta", "_slice_meta", "_split_dim_aten", "_split_dim_meta", "_squeeze_aten", "_squeeze_meta", "_svd_aten", "_svd_meta", "_to_dtype_aten", "_to_dtype_meta", "_transpose_aten", "_transpose_meta", "_uniform_aten", "_uniform_meta", "_var_reduction_meta", "_view_of_aten", "_view_of_meta", "_where_meta", "collapse", "expand_dims", "_not_impl"]}, {"name": "torch._prims.nvfuser_prims", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_prims\\nvfuser_prims.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 68, "myfunction": ["_abs_nvfuser", "_acos_nvfuser", "_add_nvfuser", "_amax_nvfuser", "_amin_nvfuser", "_asin_nvfuser", "_assert_nvfuser_op_exists", "_atan2_nvfuser", "_atan_nvfuser", "_atanh_nvfuser", "_bitwise_and_nvfuser", "_bitwise_not_nvfuser", "_bitwise_or_nvfuser", "_bitwise_xor_nvfuser", "_broadcast_in_dim_nvfuser", "_ceil_nvfuser", "_convert_element_type_nvfuser", "_cos_nvfuser", "_cosh_nvfuser", "_div_nvfuser", "_eq_nvfuser", "_erf_nvfuser", "_erfc_nvfuser", "_exp_nvfuser", "_expm1_nvfuser", "_floor_nvfuser", "_fmod_nvfuser", "_ge_nvfuser", "_gt_nvfuser", "_imag_nvfuser", "_isfinite_nvfuser", "_le_nvfuser", "_lgamma_nvfuser", "_log10_nvfuser", "_log1p_nvfuser", "_log2_nvfuser", "_log_nvfuser", "_lt_nvfuser", "_mul_nvfuser", "_native_batch_norm_nvfuser", "_ne_nvfuser", "_neg_nvfuser", "_pow_nvfuser", "_rand_like_nvfuser", "_real_nvfuser", "_reciprocal_nvfuser", "_remainder_nvfuser", "_round_nvfuser", "_rsqrt_nvfuser", "_sign_nvfuser", "_sin_nvfuser", "_sinh_nvfuser", "_sqrt_nvfuser", "_squeeze_nvfuser", "_sub_nvfuser", "_sum_nvfuser", "_tan_nvfuser", "_tanh_nvfuser", "_transpose_nvfuser", "_trunc_nvfuser", "_var_mean_nvfuser", "_var_nvfuser", "_view_of_nvfuser", "_where_nvfuser", "register_native_batch_norm", "register_nvprims", "register_rand_like", "register_var_mean"]}, {"name": "torch._prims_common", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_prims_common\\__init__.py", "layer": 2, "hasclass": 3, "myclass": ["ELEMENTWISE_TYPE_PROMOTION_KIND", "REDUCTION_OUTPUT_TYPE_KIND", "RETURN_TYPE"], "hasfunction": 73, "myfunction": ["are_strides_like_channels_last", "can_safe_cast_to", "canonicalize_device", "canonicalize_dim", "canonicalize_dims", "check", "check_fp_or_complex", "check_in_bounds_for_storage", "check_is_matrix", "check_layout", "check_pin_memory", "check_same_device", "check_same_dtype", "check_same_shape", "check_significant_strides", "compare_tensor_meta", "compute_elementwise_output_strides", "compute_reduction_output_shape", "corresponding_complex_dtype", "corresponding_real_dtype", "device_or_default", "dtype_or_default", "dtype_to_type", "dtype_to_type_ctor", "elementwise_dtypes", "extract_dims_from_varargs", "extract_shape", "extract_shape_from_varargs", "get_computation_dtype", "get_dtype", "get_higher_dtype", "get_higher_type", "getnvFuserDtype", "infer_size", "is_boolean_dtype", "is_channels_last_contiguous", "is_channels_last_contiguous_2d", "is_channels_last_contiguous_3d", "is_complex_dtype", "is_contiguous", "is_contiguous_for_memory_format", "is_cpu_scalar_tensor", "is_expandable_to", "is_float_dtype", "is_grad_dtype", "is_integer_dtype", "is_low_precision_dtype", "is_non_overlapping_and_dense", "is_same_shape", "is_valid_permutation", "is_weakly_lesser_type", "layout_or_default", "make_channels_last_2d_strides_for", "make_channels_last_3d_strides_for", "make_channels_last_strides_for", "make_contiguous_strides_for", "mask_tensor", "number_type", "prod", "reduction_dims", "reduction_dtypes", "same_shape", "set_correction", "suggest_memory_format", "type_to_dtype", "validate_dim_length", "validate_dimension_indices", "validate_exclusive_idx", "validate_idx", "validate_memory_format", "validate_no_repeating_dims", "validate_shape", "validate_strides"]}, {"name": "torch._prims_common.wrappers", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_prims_common\\wrappers.py", "layer": 3, "hasclass": 1, "myclass": ["elementwise_type_promotion_wrapper"], "hasfunction": 8, "myfunction": ["_annotation_has_type", "_maybe_convert_to_dtype", "_maybe_convert_to_type", "_maybe_resize_out", "_safe_copy_out", "backwards_not_supported", "elementwise_unary_scalar_wrapper", "out_wrapper"]}, {"name": "torch._refs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 246, "myfunction": ["_broadcast_shapes", "_check_close_args", "_check_stack_inputs", "_copysign", "_dim_var_dispatch", "_floor_divide", "_floor_divide_float", "_floor_divide_integer", "_get_tril_sizes", "_get_triu_sizes", "_get_unfold_copy_shape_stride", "_heaviside", "_lcm", "_logical_and", "_logical_or", "_logical_xor", "_make_elementwise_binary_reference", "_make_elementwise_unary_reference", "_make_r_binary_op", "_maybe_broadcast", "_neg_meta", "_normalize", "_pow", "_reduction", "_reshape_view_helper", "_to_device", "_to_device_str", "_to_dispatch", "_to_dtype", "_to_other", "_to_will_alias", "_trilu_checks", "_trunc_divide", "_unsqueeze_atleast", "abs", "acos", "acosh", "add", "addcdiv", "addr", "all", "allclose", "amax", "amin", "any", "arange", "as_strided", "asin", "asinh", "atan", "_ref", "atanh", "atleast_1d", "atleast_2d", "atleast_3d", "_ref", "_ref", "bitwise_not", "_ref", "_ref", "_ref", "broadcast_shapes", "broadcast_tensors", "broadcast_to", "canonicalize_to_arguments", "cat", "ceil", "chunk", "clamp", "clamp_max", "clamp_min", "clone", "column_stack", "conj", "conj_physical", "constant_pad_nd", "contiguous", "copy_to", "_ref", "cos", "cosh", "cumsum", "diag_embed", "diagonal", "digamma", "div", "dsplit", "dstack", "empty", "empty_like", "empty_strided", "_ref", "equal", "erf", "erfc", "erfinv", "exp", "exp2", "expand", "expand_as", "expm1", "eye", "fill", "fill_", "flatten", "flip", "fliplr", "flipud", "float_power", "floor", "_ref", "_ref", "_ref", "_ref", "frac", "full", "full_like", "_ref", "_ref", "_ref", "_ref", "hsplit", "hstack", "_ref", "i0", "_ref", "_ref", "imag", "index_add", "index_add_", "index_copy", "index_copy_", "index_fill", "index_fill_", "index_select", "isclose", "isfinite", "isinf", "isnan", "isneginf", "isposinf", "isreal", "item", "_ref", "_ref", "lgamma", "linspace", "log", "log10", "log1p", "log2", "log_softmax", "_ref", "logical_not", "_ref", "_ref", "logspace", "logsumexp", "_ref", "masked_fill", "_ref", "mean", "meshgrid", "_ref", "movedim", "_ref", "nan_to_num", "narrow", "native_layer_norm", "_ref", "neg", "new_empty", "new_empty_strided", "new_full", "new_ones", "new_zeros", "_ref", "norm", "ones", "permute", "positive", "_ref", "prod", "randn", "ravel", "real", "reciprocal", "_ref", "repeat", "reshape", "reshape_as", "rop", "roll", "rot90", "round", "rop", "rsqrt", "rsub", "rop", "scalar_tensor", "sgn", "sigmoid", "sign", "signbit", "sin", "sinc", "sinh", "softmax", "sqrt", "square", "squeeze", "stack", "std", "std_mean", "sub", "sum", "sum_to_size", "transpose", "t", "tan", "tanh", "tensor_split", "to", "trace", "transpose", "tril", "tril_indices", "triu", "triu_indices", "_ref", "trunc", "_ref", "unbind", "unflatten", "unfold_copy", "uniform", "unsqueeze", "var", "var_mean", "view", "view_as", "vsplit", "vstack", "where", "zero_", "zeros"]}, {"name": "torch._refs.fft", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\fft.py", "layer": 2, "hasclass": 2, "myclass": ["_CanonicalizeC2rReturn", "_ShapeAndDims"], "hasfunction": 32, "myfunction": ["_apply_norm", "_canonicalize_fft_c2r_shape_and_dim_args", "_canonicalize_fft_shape_and_dim_args", "_default_alldims", "_fft_c2c", "_fft_c2r", "_fft_r2c", "_fftn_c2c", "_maybe_promote_tensor_fft", "_prod", "_promote_type_fft", "_resize_fft_input", "fft", "fft2", "fftn", "fftshift", "hfft", "hfft2", "hfftn", "ifft", "ifft2", "ifftn", "ifftshift", "ihfft", "ihfft2", "ihfftn", "irfft", "irfft2", "irfftn", "rfft", "rfft2", "rfftn"]}, {"name": "torch._refs.linalg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\linalg\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["backshift_permutation", "check_norm_dtype", "inverse_permutation", "matrix_norm", "norm", "svd", "svdvals", "vector_norm"]}, {"name": "torch._refs.nn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\nn\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._refs.nn.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\nn\\functional\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 30, "myfunction": ["_apply_loss_reduction", "_check_reduction_value", "_get_string_reduction_arg", "_reduction_int_to_str", "celu", "dropout", "elu", "gelu", "glu", "hardshrink", "hardtanh", "hinge_embedding_loss", "huber_loss", "l1_loss", "layer_norm", "leaky_relu", "margin_ranking_loss", "mish", "mse_loss", "pairwise_distance", "pdist", "poisson_nll_loss", "prelu", "relu", "relu6", "selu", "softplus", "softshrink", "tanhshrink", "threshold"]}, {"name": "torch._refs.special", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_refs\\special\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["bessel_j0", "bessel_j1", "i0e", "i1", "i1e", "logit", "multigammaln", "spherical_bessel_j0"]}, {"name": "torch._six", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_six.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["with_metaclass"]}, {"name": "torch._sources", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_sources.py", "layer": 1, "hasclass": 2, "myclass": ["ParsedDef", "SourceContext"], "hasfunction": 4, "myfunction": ["fake_range", "get_source_lines_and_file", "normalize_source_lines", "parse_def"]}, {"name": "torch._subclasses", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_subclasses\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch._subclasses.fake_tensor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_subclasses\\fake_tensor.py", "layer": 2, "hasclass": 7, "myclass": ["DataDependentOutputException", "DynamicOutputShapeException", "FakeCopyMode", "FakeTensor", "FakeTensorConverter", "FakeTensorMode", "UnsupportedFakeTensorException"], "hasfunction": 18, "myfunction": ["_sparse_coo_tensor_with_dims_and_tensors", "check_no_bool_index_tensors", "constructors", "contains_tensor_types", "data_dep", "dyn_shape", "in_kernel_invocation_manager", "index_put", "index_put_", "index_tensor", "non_kwarg_to", "nyi", "register_op_impl", "resize_as_", "run_and_return_new_tensor_of_input_device", "run_fallback_kernel", "to_copy", "tree_flatten_only"]}, {"name": "torch._subclasses.fake_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_subclasses\\fake_utils.py", "layer": 2, "hasclass": 1, "myclass": ["CrossRefFakeMode"], "hasfunction": 3, "myfunction": ["output_alias_each_other", "outputs_alias_inputs", "outputs_are_inputs"]}, {"name": "torch._subclasses.meta_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_subclasses\\meta_utils.py", "layer": 2, "hasclass": 2, "myclass": ["MetaConverter", "WeakTensorRefKey"], "hasfunction": 1, "myfunction": ["safe_is_leaf"]}, {"name": "torch._tensor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_tensor.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 4, "myfunction": ["_convert", "_handle_torch_function_and_wrap_type_error_to_not_implemented", "_rebuild_from_type", "_rebuild_from_type_v2"]}, {"name": "torch._tensor_str", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_tensor_str.py", "layer": 1, "hasclass": 2, "myclass": ["_Formatter", "__PrinterOptions"], "hasfunction": 11, "myfunction": ["_add_suffixes", "_functorch_wrapper_str_intern", "_scalar_str", "_str", "_str_intern", "_tensor_str", "_tensor_str_with_formatter", "_vector_str", "get_summarized_data", "set_printoptions", "tensor_totype"]}, {"name": "torch._utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_utils.py", "layer": 1, "hasclass": 3, "myclass": ["ExceptionWrapper", "KeyErrorMessage", "_ClassPropertyDescriptor"], "hasfunction": 33, "myfunction": ["_accumulate", "_cuda", "_element_size", "_flatten_dense_tensors", "_flatten_sparse_tensors", "_get_all_device_indices", "_get_async_or_non_blocking", "_get_available_device_type", "_get_current_device_index", "_get_device_attr", "_get_device_index", "_get_devices_properties", "_handle_complex", "_import_dotted_name", "_rebuild_device_tensor_from_numpy", "_rebuild_meta_tensor_no_storage", "_rebuild_parameter", "_rebuild_qtensor", "_rebuild_sparse_csr_tensor", "_rebuild_sparse_tensor", "_rebuild_tensor", "_rebuild_tensor_v2", "_rebuild_wrapper_subclass", "_rebuild_device_tensor_from_numpy", "_reorder_tensors_as", "_take_tensors", "_type", "_unflatten_dense_tensors", "_unflatten_sparse_tensors", "_validate_loaded_sparse_tensors", "annotate", "classproperty", "get_current_device_index"]}, {"name": "torch._utils_internal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_utils_internal.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["get_file_path", "get_file_path_2", "get_writable_path", "prepare_multiprocessing_environment", "resolve_library_path"]}, {"name": "torch._vmap_internals", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_vmap_internals.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 10, "myfunction": ["_as_tuple", "_check_out_dims_is_int_or_int_tuple", "_create_batched_inputs", "_get_name", "_num_outputs", "_unwrap_batched", "_validate_and_get_batch_size", "_validate_outputs", "_vmap", "vmap"]}, {"name": "torch._weights_only_unpickler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\_weights_only_unpickler.py", "layer": 1, "hasclass": 1, "myclass": ["Unpickler"], "hasfunction": 1, "myfunction": ["load"]}, {"name": "torch.amp", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\amp\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.amp.autocast_mode", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\amp\\autocast_mode.py", "layer": 2, "hasclass": 1, "myclass": ["autocast"], "hasfunction": 1, "myfunction": ["autocast_decorator"]}, {"name": "torch.ao", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["__getattr__"]}, {"name": "torch.ao.nn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["__getattr__"]}, {"name": "torch.ao.nn.intrinsic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\intrinsic\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.intrinsic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\intrinsic\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.intrinsic.modules.fused", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\intrinsic\\modules\\fused.py", "layer": 5, "hasclass": 14, "myclass": ["BNReLU2d", "BNReLU3d", "ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "LinearBn1d", "LinearReLU", "_FusedModule"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\dynamic\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.dynamic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\dynamic\\modules\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.dynamic.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\dynamic\\modules\\linear.py", "layer": 6, "hasclass": 1, "myclass": ["Linear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\modules\\conv.py", "layer": 5, "hasclass": 4, "myclass": ["Conv1d", "Conv2d", "Conv3d", "_ConvNd"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.modules.embedding_ops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\modules\\embedding_ops.py", "layer": 5, "hasclass": 2, "myclass": ["Embedding", "EmbeddingBag"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.qat.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\qat\\modules\\linear.py", "layer": 5, "hasclass": 1, "myclass": ["Linear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantizable", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantizable\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantizable.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantizable\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantizable.modules.activation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantizable\\modules\\activation.py", "layer": 5, "hasclass": 1, "myclass": ["MultiheadAttention"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantizable.modules.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantizable\\modules\\rnn.py", "layer": 5, "hasclass": 4, "myclass": ["LSTM", "LSTMCell", "_LSTMLayer", "_LSTMSingleLayer"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.dynamic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\conv.py", "layer": 6, "hasclass": 6, "myclass": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\linear.py", "layer": 6, "hasclass": 1, "myclass": ["Linear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.dynamic.modules.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\dynamic\\modules\\rnn.py", "layer": 6, "hasclass": 8, "myclass": ["GRU", "GRUCell", "LSTM", "LSTMCell", "PackedParameter", "RNNBase", "RNNCell", "RNNCellBase"], "hasfunction": 3, "myfunction": ["_apply_permutation", "apply_permutation", "pack_weight_bias"]}, {"name": "torch.ao.nn.quantized.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\functional.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 22, "myfunction": ["adaptive_avg_pool2d", "adaptive_avg_pool3d", "avg_pool2d", "avg_pool3d", "celu", "clamp", "conv1d", "conv2d", "conv3d", "elu", "hardsigmoid", "hardswish", "hardtanh", "interpolate", "leaky_relu", "linear", "max_pool1d", "max_pool2d", "threshold", "upsample", "upsample_bilinear", "upsample_nearest"]}, {"name": "torch.ao.nn.quantized.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\__init__.py", "layer": 4, "hasclass": 2, "myclass": ["DeQuantize", "Quantize"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.activation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\activation.py", "layer": 5, "hasclass": 8, "myclass": ["ELU", "Hardswish", "LeakyReLU", "MultiheadAttention", "PReLU", "ReLU6", "Sigmoid", "Softmax"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.batchnorm", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\batchnorm.py", "layer": 5, "hasclass": 3, "myclass": ["BatchNorm2d", "BatchNorm3d", "_BatchNorm"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\conv.py", "layer": 5, "hasclass": 8, "myclass": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "_ConvNd", "_ConvTransposeNd"], "hasfunction": 1, "myfunction": ["_reverse_repeat_padding"]}, {"name": "torch.ao.nn.quantized.modules.dropout", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\dropout.py", "layer": 5, "hasclass": 1, "myclass": ["Dropout"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.embedding_ops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\embedding_ops.py", "layer": 5, "hasclass": 3, "myclass": ["Embedding", "EmbeddingBag", "EmbeddingPackedParams"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.functional_modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\functional_modules.py", "layer": 5, "hasclass": 3, "myclass": ["FXFloatFunctional", "FloatFunctional", "QFunctional"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\linear.py", "layer": 5, "hasclass": 2, "myclass": ["Linear", "LinearPackedParams"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.normalization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\normalization.py", "layer": 5, "hasclass": 5, "myclass": ["GroupNorm", "InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LayerNorm"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\rnn.py", "layer": 5, "hasclass": 1, "myclass": ["LSTM"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.modules.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\modules\\utils.py", "layer": 5, "hasclass": 1, "myclass": ["WeightedQuantizedModule"], "hasfunction": 7, "myfunction": ["_clamp_weights", "_get_weight_observer", "_needs_weight_clamping", "_ntuple_from_first", "parse", "_quantize_weight", "hide_packed_params_repr"]}, {"name": "torch.ao.nn.quantized.reference", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.reference.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.reference.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\conv.py", "layer": 6, "hasclass": 8, "myclass": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "_ConvNd", "_ConvTransposeNd"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.reference.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\linear.py", "layer": 6, "hasclass": 1, "myclass": ["Linear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.reference.modules.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\rnn.py", "layer": 6, "hasclass": 6, "myclass": ["GRUCell", "LSTM", "LSTMCell", "RNNBase", "RNNCell", "RNNCellBase"], "hasfunction": 4, "myfunction": ["_apply_permutation", "_get_quantize_and_dequantized_weight", "_get_weight_and_quantization_params", "get_quantized_weight"]}, {"name": "torch.ao.nn.quantized.reference.modules.sparse", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\sparse.py", "layer": 6, "hasclass": 2, "myclass": ["Embedding", "EmbeddingBag"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.quantized.reference.modules.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\quantized\\reference\\modules\\utils.py", "layer": 6, "hasclass": 1, "myclass": ["ReferenceQuantizedModule"], "hasfunction": 4, "myfunction": ["_get_weight_qparam_keys", "_quantize_and_dequantize_weight", "_quantize_weight", "_save_weight_qparams"]}, {"name": "torch.ao.nn.sparse", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.sparse.quantized", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.sparse.quantized.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\dynamic\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.sparse.quantized.dynamic.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\dynamic\\linear.py", "layer": 6, "hasclass": 1, "myclass": ["Linear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.sparse.quantized.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\linear.py", "layer": 5, "hasclass": 2, "myclass": ["Linear", "LinearPackedParams"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.nn.sparse.quantized.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\nn\\sparse\\quantized\\utils.py", "layer": 5, "hasclass": 1, "myclass": ["LinearBlockSparsePattern"], "hasfunction": 1, "myfunction": ["is_valid_linear_block_sparse_pattern"]}, {"name": "torch.ao.quantization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["default_eval_fn"]}, {"name": "torch.ao.quantization.fake_quantize", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\fake_quantize.py", "layer": 3, "hasclass": 4, "myclass": ["FakeQuantize", "FakeQuantizeBase", "FixedQParamsFakeQuantize", "FusedMovingAvgObsFakeQuantize"], "hasfunction": 9, "myfunction": ["_is_fake_quant_script_module", "_is_float_qparams", "_is_per_channel", "_is_per_tensor", "_is_symmetric_quant", "disable_fake_quant", "disable_observer", "enable_fake_quant", "enable_observer"]}, {"name": "torch.ao.quantization.fuser_method_mappings", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\fuser_method_mappings.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 11, "myfunction": ["fuse_conv_bn", "fuse_conv_bn_relu", "fuse_convtranspose_bn", "fuse_linear_bn", "get_fuser_method", "get_fuser_method_new", "get_valid_patterns", "reverse2", "reverse3", "reverse_sequential_wrapper2", "sequential_wrapper2"]}, {"name": "torch.ao.quantization.observer", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\observer.py", "layer": 3, "hasclass": 17, "myclass": ["FixedQParamsObserver", "HistogramObserver", "MinMaxObserver", "MovingAverageMinMaxObserver", "MovingAveragePerChannelMinMaxObserver", "NoopObserver", "ObserverBase", "PerChannelMinMaxObserver", "PlaceholderObserver", "RecordingObserver", "ReuseInputObserver", "UniformQuantizationObserverBase", "_ObserverBase", "_PartialWrapper", "default_debug_observer", "default_placeholder_observer", "default_reuse_input_observer"], "hasfunction": 7, "myfunction": ["_is_activation_post_process", "_is_observer_script_module", "_is_per_channel_script_obs_instance", "_with_args", "_with_callable_args", "get_observer_state_dict", "load_observer_state_dict"]}, {"name": "torch.ao.quantization.qconfig", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\qconfig.py", "layer": 3, "hasclass": 2, "myclass": ["QConfig", "QConfigDynamic"], "hasfunction": 11, "myfunction": ["_partial_wrapper_equals", "activation_is_memoryless", "add_module_to_qconfig_obs_ctr", "assert_valid_qconfig", "get_default_qat_qconfig", "get_default_qat_qconfig_dict", "get_default_qconfig", "get_default_qconfig_dict", "is_reuse_input_qconfig", "obs_or_fq_ctr_equals", "qconfig_equals"]}, {"name": "torch.ao.quantization.qconfig_mapping", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\qconfig_mapping.py", "layer": 3, "hasclass": 1, "myclass": ["QConfigMapping"], "hasfunction": 3, "myfunction": ["_get_default_qconfig_mapping", "get_default_qat_qconfig_mapping", "get_default_qconfig_mapping"]}, {"name": "torch.ao.quantization.quant_type", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\quant_type.py", "layer": 3, "hasclass": 1, "myclass": ["QuantType"], "hasfunction": 2, "myfunction": ["_quant_type_from_str", "quant_type_to_str"]}, {"name": "torch.ao.quantization.quantization_mappings", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\quantization_mappings.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 17, "myfunction": ["_get_special_act_post_process", "_has_special_act_post_process", "get_default_compare_output_module_list", "get_default_dynamic_quant_module_mappings", "get_default_dynamic_sparse_quant_module_mappings", "get_default_float_to_quantized_operator_mappings", "get_default_qat_module_mappings", "get_default_qconfig_propagation_list", "get_default_static_quant_module_mappings", "get_default_static_quant_reference_module_mappings", "get_default_static_sparse_quant_module_mappings", "get_dynamic_quant_module_class", "get_embedding_qat_module_mappings", "get_embedding_static_quant_module_mappings", "get_quantized_operator", "get_static_quant_module_class", "no_observer_set"]}, {"name": "torch.ao.quantization.stubs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\stubs.py", "layer": 3, "hasclass": 3, "myclass": ["DeQuantStub", "QuantStub", "QuantWrapper"], "hasfunction": 0, "myfunction": []}, {"name": "torch.ao.quantization.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\ao\\quantization\\utils.py", "layer": 3, "hasclass": 1, "myclass": ["MatchAllNode"], "hasfunction": 28, "myfunction": ["_get_default_kwargs", "_get_num_pos_args", "_get_path_of_module", "_get_signature_locals", "_normalize_kwargs", "_parent_name", "activation_dtype", "activation_is_dynamically_quantized", "activation_is_int32_quantized", "activation_is_int8_quantized", "activation_is_statically_quantized", "calculate_qmin_qmax", "check_min_max_valid", "check_node", "get_combined_dict", "get_fqn_to_example_inputs", "get_qconfig_dtypes", "get_qparam_dict", "get_quant_type", "get_swapped_custom_module_class", "getattr_from_fqn", "has_no_children_ignoring_parametrizations", "is_per_channel", "is_per_tensor", "op_is_int8_dynamically_quantized", "weight_dtype", "weight_is_quantized", "weight_is_statically_quantized"]}, {"name": "torch.autograd", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["_calculate_shape", "_is_checkpoint_valid", "_make_grads", "_register_py_tensor_class_for_device", "_tensor_or_tensors_to_tuple", "backward", "grad", "variable"]}, {"name": "torch.autograd.anomaly_mode", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\anomaly_mode.py", "layer": 2, "hasclass": 2, "myclass": ["detect_anomaly", "set_detect_anomaly"], "hasfunction": 0, "myfunction": []}, {"name": "torch.autograd.forward_ad", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\forward_ad.py", "layer": 2, "hasclass": 3, "myclass": ["UnpackedDualTensor", "_UnpackedDualTensor", "dual_level"], "hasfunction": 4, "myfunction": ["enter_dual_level", "exit_dual_level", "make_dual", "unpack_dual"]}, {"name": "torch.autograd.function", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\function.py", "layer": 2, "hasclass": 8, "myclass": ["BackwardCFunction", "Function", "FunctionCtx", "FunctionMeta", "InplaceFunction", "NestedIOFunction", "_ContextMethodMixin", "_HookMixin"], "hasfunction": 11, "myfunction": ["_iter", "_iter_filter", "_iter", "_iter", "_iter", "_jit_unwrap_structured", "_map", "_nested_map", "_unflatten", "once_differentiable", "traceable"]}, {"name": "torch.autograd.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\functional.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 17, "myfunction": ["_as_tuple", "_as_tuple_nocheck", "_autograd_grad", "_check_requires_grad", "_construct_standard_basis_for", "_fill_in_zeros", "_grad_postprocess", "_grad_preprocess", "_jacfwd", "_tuple_postprocess", "_validate_v", "hessian", "hvp", "jacobian", "jvp", "vhp", "vjp"]}, {"name": "torch.autograd.grad_mode", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\grad_mode.py", "layer": 2, "hasclass": 5, "myclass": ["_DecoratorContextManager", "enable_grad", "inference_mode", "no_grad", "set_grad_enabled"], "hasfunction": 0, "myfunction": []}, {"name": "torch.autograd.graph", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\graph.py", "layer": 2, "hasclass": 2, "myclass": ["save_on_cpu", "saved_tensors_hooks"], "hasfunction": 1, "myfunction": ["disable_saved_tensors_hooks"]}, {"name": "torch.autograd.profiler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\profiler.py", "layer": 2, "hasclass": 5, "myclass": ["EnforceUnique", "emit_itt", "emit_nvtx", "profile", "record_function"], "hasfunction": 3, "myfunction": ["kineto_step", "load_nvprof", "parse_nvprof_trace"]}, {"name": "torch.autograd.profiler_util", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\autograd\\profiler_util.py", "layer": 2, "hasclass": 8, "myclass": ["EventList", "FormattedTimesMixin", "FunctionEvent", "FunctionEventAvg", "Interval", "Kernel", "MemRecordsAcc", "StringTable"], "hasfunction": 8, "myfunction": ["_attr_formatter", "_build_table", "_filter_name", "_filter_stack_entry", "_format_memory", "_format_time", "_format_time_share", "_rewrite_name"]}, {"name": "torch.backends", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\backends\\__init__.py", "layer": 1, "hasclass": 2, "myclass": ["ContextProp", "PropModule"], "hasfunction": 3, "myfunction": ["__allow_nonbracketed_mutation", "disable_global_flags", "flags_frozen"]}, {"name": "torch.backends.cuda", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\backends\\cuda\\__init__.py", "layer": 2, "hasclass": 4, "myclass": ["cuBLASModule", "cuFFTPlanCache", "cuFFTPlanCacheAttrContextProp", "cuFFTPlanCacheManager"], "hasfunction": 7, "myfunction": ["enable_flash_sdp", "enable_math_sdp", "flash_sdp_enabled", "is_built", "math_sdp_enabled", "preferred_linalg_library", "sdp_kernel"]}, {"name": "torch.backends.cudnn", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.backends.mkl", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\backends\\mkl\\__init__.py", "layer": 2, "hasclass": 1, "myclass": ["verbose"], "hasfunction": 1, "myfunction": ["is_available"]}, {"name": "torch.backends.mkldnn", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.backends.mps", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\backends\\mps\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["is_built"]}, {"name": "torch.backends.openmp", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\backends\\openmp\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["is_available"]}, {"name": "torch.backends.opt_einsum", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.backends.quantized", "file": "none", "ftype": "none", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.classes", "file": "none", "ftype": "none", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.cpu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cpu\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.cpu.amp", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cpu\\amp\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.cpu.amp.autocast_mode", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cpu\\amp\\autocast_mode.py", "layer": 3, "hasclass": 1, "myclass": ["autocast"], "hasfunction": 0, "myfunction": []}, {"name": "torch.cuda", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\__init__.py", "layer": 1, "hasclass": 31, "myclass": ["BFloat16Storage", "BFloat16Tensor", "BoolStorage", "BoolTensor", "ByteStorage", "ByteTensor", "CharStorage", "CharTensor", "ComplexDoubleStorage", "ComplexFloatStorage", "CudaError", "DeferredCudaCallError", "DoubleStorage", "DoubleTensor", "FloatStorage", "FloatTensor", "HalfStorage", "HalfTensor", "IntStorage", "IntTensor", "LongStorage", "LongTensor", "OutOfMemoryError", "ShortStorage", "ShortTensor", "StreamContext", "_CudaBase", "_LazySeedTracker", "cudaStatus", "device", "device_of"], "hasfunction": 35, "myfunction": ["_check_capability", "_check_cubins", "_device_count_nvml", "_is_compiled", "<lambda>", "_lazy_call", "_lazy_init", "_parse_visible_devices", "_raw_device_count_nvml", "_sleep", "can_device_access_peer", "check_error", "cudart", "current_blas_handle", "current_device", "current_stream", "default_stream", "get_arch_list", "get_device_capability", "get_device_name", "get_device_properties", "get_gencode_flags", "get_sync_debug_mode", "init", "ipc_collect", "is_available", "is_bf16_supported", "is_initialized", "memory_usage", "set_device", "set_stream", "set_sync_debug_mode", "stream", "synchronize", "utilization"]}, {"name": "torch.cuda._memory_viz", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\_memory_viz.py", "layer": 2, "hasclass": 1, "myclass": ["Bytes"], "hasfunction": 7, "myfunction": ["_frame_fmt", "_write_blocks", "compare", "format_flamegraph", "memory", "segments", "stats"]}, {"name": "torch.cuda._utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\_utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["_dummy_type", "_get_device_index"]}, {"name": "torch.cuda.amp", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\amp\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.cuda.amp.autocast_mode", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\amp\\autocast_mode.py", "layer": 3, "hasclass": 1, "myclass": ["autocast"], "hasfunction": 3, "myfunction": ["_cast", "custom_bwd", "custom_fwd"]}, {"name": "torch.cuda.amp.common", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\amp\\common.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["amp_definitely_not_available"]}, {"name": "torch.cuda.amp.grad_scaler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\amp\\grad_scaler.py", "layer": 3, "hasclass": 3, "myclass": ["GradScaler", "OptState", "_MultiDeviceReplicator"], "hasfunction": 1, "myfunction": ["_refresh_per_optimizer_state"]}, {"name": "torch.cuda.graphs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\graphs.py", "layer": 2, "hasclass": 2, "myclass": ["CUDAGraph", "graph"], "hasfunction": 3, "myfunction": ["graph_pool_handle", "is_current_stream_capturing", "make_graphed_callables"]}, {"name": "torch.cuda.jiterator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\jiterator.py", "layer": 2, "hasclass": 2, "myclass": ["_CodeParser", "_JittedFunction"], "hasfunction": 2, "myfunction": ["_create_jit_fn", "_create_multi_output_jit_fn"]}, {"name": "torch.cuda.memory", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\memory.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 27, "myfunction": ["_free_mutex", "_host_allocator", "_record_memory_history", "_save_memory_usage", "_save_segment_usage", "_set_allocator_settings", "_snapshot", "caching_allocator_alloc", "caching_allocator_delete", "empty_cache", "list_gpu_processes", "max_memory_allocated", "max_memory_cached", "max_memory_reserved", "mem_get_info", "memory_allocated", "memory_cached", "memory_reserved", "memory_snapshot", "memory_stats", "memory_stats_as_nested_dict", "memory_summary", "reset_accumulated_memory_stats", "reset_max_memory_allocated", "reset_max_memory_cached", "reset_peak_memory_stats", "set_per_process_memory_fraction"]}, {"name": "torch.cuda.nccl", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\nccl.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 10, "myfunction": ["_check_sequence_type", "all_gather", "all_reduce", "broadcast", "init_rank", "is_available", "reduce", "reduce_scatter", "unique_id", "version"]}, {"name": "torch.cuda.nvtx", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\nvtx.py", "layer": 2, "hasclass": 1, "myclass": ["_NVTXStub"], "hasfunction": 6, "myfunction": ["mark", "range", "range_end", "range_pop", "range_push", "range_start"]}, {"name": "torch.cuda.profiler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\profiler.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 4, "myfunction": ["init", "profile", "start", "stop"]}, {"name": "torch.cuda.random", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\random.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 9, "myfunction": ["get_rng_state", "get_rng_state_all", "initial_seed", "manual_seed", "manual_seed_all", "seed", "seed_all", "set_rng_state", "set_rng_state_all"]}, {"name": "torch.cuda.sparse", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\sparse.py", "layer": 2, "hasclass": 9, "myclass": ["BFloat16Tensor", "ByteTensor", "CharTensor", "DoubleTensor", "FloatTensor", "HalfTensor", "IntTensor", "LongTensor", "ShortTensor"], "hasfunction": 0, "myfunction": []}, {"name": "torch.cuda.streams", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\cuda\\streams.py", "layer": 2, "hasclass": 3, "myclass": ["Event", "ExternalStream", "Stream"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributed", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["is_available"]}, {"name": "torch.distributed.algorithms", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\algorithms\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributed.algorithms.join", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\algorithms\\join.py", "layer": 3, "hasclass": 4, "myclass": ["Join", "JoinHook", "Joinable", "_JoinConfig"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributed.autograd", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\autograd\\__init__.py", "layer": 2, "hasclass": 1, "myclass": ["context"], "hasfunction": 1, "myfunction": ["is_available"]}, {"name": "torch.distributed.constants", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\constants.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributed.distributed_c10d", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\distributed_c10d.py", "layer": 2, "hasclass": 22, "myclass": ["AllToAllOptions", "AllreduceCoalescedOptions", "AllreduceOptions", "Backend", "BarrierOptions", "BroadcastOptions", "DebugLevel", "GatherOptions", "GroupMember", "P2POp", "PrefixStore", "ProcessGroup", "ProcessGroupGloo", "ReduceOp", "ReduceOptions", "ReduceScatterOptions", "ScatterOptions", "Store", "Work", "_reduce_op", "dist_backend", "group"], "hasfunction": 72, "myfunction": ["_all_gather_base", "_as_iterable", "_check_for_nccl_backend", "_check_op", "_check_p2p_op_list", "_check_single_tensor", "_check_tensor_list", "_coalescing_manager", "_create_process_group_wrapper", "_ensure_all_tensors_same_dtype", "_export_c_types", "_get_default_group", "_get_default_store", "_get_global_rank", "_get_group_size", "_get_pg_device", "_new_process_group_helper", "_object_to_tensor", "_rank_not_in_group", "_reduce_scatter_base", "_store_based_barrier", "_tensor_to_object", "_update_default_pg", "_validate_output_list_for_rank", "_warn_not_in_group", "all_gather", "all_gather_coalesced", "all_gather_into_tensor", "all_gather_multigpu", "all_gather_object", "all_reduce", "all_reduce_coalesced", "all_reduce_multigpu", "all_to_all", "all_to_all_single", "barrier", "batch_isend_irecv", "broadcast", "broadcast_multigpu", "broadcast_object_list", "destroy_process_group", "gather", "gather_object", "get_backend", "get_global_rank", "get_group_rank", "get_process_group_ranks", "get_rank", "get_world_size", "init_process_group", "irecv", "is_gloo_available", "is_initialized", "is_mpi_available", "is_nccl_available", "is_torchelastic_launched", "is_ucc_available", "isend", "monitored_barrier", "new_group", "new_subgroups", "new_subgroups_by_enumeration", "recv", "reduce", "reduce_multigpu", "reduce_scatter", "reduce_scatter_multigpu", "reduce_scatter_tensor", "scatter", "scatter_object_list", "send", "supports_complex"]}, {"name": "torch.distributed.remote_device", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\remote_device.py", "layer": 2, "hasclass": 1, "myclass": ["_remote_device"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributed.rpc", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\rpc\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["is_available"]}, {"name": "torch.distributed.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributed\\utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["_pack_kwargs", "_recursive_to", "_replace_by_prefix", "_sync_module_states", "_sync_params_and_buffers", "_to_kwargs", "_unpack_kwargs", "_verify_param_shape_across_processes"]}, {"name": "torch.distributions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.bernoulli", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\bernoulli.py", "layer": 2, "hasclass": 1, "myclass": ["Bernoulli"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.beta", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\beta.py", "layer": 2, "hasclass": 1, "myclass": ["Beta"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.binomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\binomial.py", "layer": 2, "hasclass": 1, "myclass": ["Binomial"], "hasfunction": 1, "myfunction": ["_clamp_by_zero"]}, {"name": "torch.distributions.categorical", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\categorical.py", "layer": 2, "hasclass": 1, "myclass": ["Categorical"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.cauchy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\cauchy.py", "layer": 2, "hasclass": 1, "myclass": ["Cauchy"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.chi2", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\chi2.py", "layer": 2, "hasclass": 1, "myclass": ["Chi2"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.constraint_registry", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\constraint_registry.py", "layer": 2, "hasclass": 1, "myclass": ["ConstraintRegistry"], "hasfunction": 15, "myfunction": ["_biject_to_cat", "_biject_to_independent", "_biject_to_simplex", "_biject_to_stack", "_transform_to_cat", "_transform_to_corr_cholesky", "_transform_to_greater_than", "_transform_to_independent", "_transform_to_interval", "_transform_to_less_than", "_transform_to_lower_cholesky", "_transform_to_positive", "_transform_to_real", "_transform_to_simplex", "_transform_to_stack"]}, {"name": "torch.distributions.constraints", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\constraints.py", "layer": 2, "hasclass": 37, "myclass": ["Constraint", "_Boolean", "_Cat", "_CorrCholesky", "_Dependent", "_DependentProperty", "_GreaterThan", "_GreaterThanEq", "_HalfOpenInterval", "_IndependentConstraint", "_IntegerGreaterThan", "_IntegerInterval", "_IntegerLessThan", "_Interval", "_LessThan", "_LowerCholesky", "_LowerTriangular", "_Multinomial", "_OneHot", "_PositiveDefinite", "_PositiveSemidefinite", "_Real", "_Simplex", "_Square", "_Stack", "_Symmetric", "cat", "dependent_property", "greater_than", "greater_than_eq", "half_open_interval", "independent", "integer_interval", "interval", "less_than", "multinomial", "stack"], "hasfunction": 1, "myfunction": ["is_dependent"]}, {"name": "torch.distributions.continuous_bernoulli", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\continuous_bernoulli.py", "layer": 2, "hasclass": 1, "myclass": ["ContinuousBernoulli"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.dirichlet", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\dirichlet.py", "layer": 2, "hasclass": 2, "myclass": ["Dirichlet", "_Dirichlet"], "hasfunction": 1, "myfunction": ["_Dirichlet_backward"]}, {"name": "torch.distributions.distribution", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\distribution.py", "layer": 2, "hasclass": 1, "myclass": ["Distribution"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.exp_family", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\exp_family.py", "layer": 2, "hasclass": 1, "myclass": ["ExponentialFamily"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.exponential", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\exponential.py", "layer": 2, "hasclass": 1, "myclass": ["Exponential"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.fishersnedecor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\fishersnedecor.py", "layer": 2, "hasclass": 1, "myclass": ["FisherSnedecor"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.gamma", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\gamma.py", "layer": 2, "hasclass": 1, "myclass": ["Gamma"], "hasfunction": 1, "myfunction": ["_standard_gamma"]}, {"name": "torch.distributions.geometric", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\geometric.py", "layer": 2, "hasclass": 1, "myclass": ["Geometric"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.gumbel", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\gumbel.py", "layer": 2, "hasclass": 1, "myclass": ["Gumbel"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.half_cauchy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\half_cauchy.py", "layer": 2, "hasclass": 1, "myclass": ["HalfCauchy"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.half_normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\half_normal.py", "layer": 2, "hasclass": 1, "myclass": ["HalfNormal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.independent", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\independent.py", "layer": 2, "hasclass": 1, "myclass": ["Independent"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.kl", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\kl.py", "layer": 2, "hasclass": 1, "myclass": ["_Match"], "hasfunction": 70, "myfunction": ["_add_kl_info", "_batch_trace_XXT", "_dispatch_kl", "_infinite_like", "_kl_bernoulli_bernoulli", "_kl_bernoulli_poisson", "_kl_beta_beta", "_kl_beta_continuous_bernoulli", "_kl_beta_exponential", "_kl_beta_gamma", "_kl_beta_infinity", "_kl_beta_normal", "_kl_beta_uniform", "_kl_binomial_binomial", "_kl_categorical_categorical", "_kl_cauchy_cauchy", "_kl_continuous_bernoulli_continuous_bernoulli", "_kl_continuous_bernoulli_exponential", "_kl_continuous_bernoulli_infinity", "_kl_continuous_bernoulli_normal", "_kl_continuous_bernoulli_uniform", "_kl_dirichlet_dirichlet", "_kl_expfamily_expfamily", "_kl_exponential_exponential", "_kl_exponential_gamma", "_kl_exponential_gumbel", "_kl_exponential_infinity", "_kl_exponential_normal", "_kl_gamma_exponential", "_kl_gamma_gamma", "_kl_gamma_gumbel", "_kl_gamma_infinity", "_kl_gamma_normal", "_kl_geometric_geometric", "_kl_gumbel_gumbel", "_kl_gumbel_infinity", "_kl_gumbel_normal", "_kl_halfnormal_halfnormal", "_kl_independent_independent", "_kl_laplace_infinity", "_kl_laplace_laplace", "_kl_laplace_normal", "_kl_lowrankmultivariatenormal_lowrankmultivariatenormal", "_kl_lowrankmultivariatenormal_multivariatenormal", "_kl_multivariatenormal_lowrankmultivariatenormal", "_kl_multivariatenormal_multivariatenormal", "_kl_normal_gumbel", "_kl_normal_infinity", "_kl_normal_laplace", "_kl_normal_normal", "_kl_onehotcategorical_onehotcategorical", "_kl_pareto_exponential", "_kl_pareto_gamma", "_kl_pareto_infinity", "_kl_pareto_normal", "_kl_pareto_pareto", "_kl_poisson_infinity", "_kl_poisson_poisson", "_kl_transformed_transformed", "_kl_uniform_beta", "_kl_uniform_continuous_bernoulli", "_kl_uniform_exponetial", "_kl_uniform_gamma", "_kl_uniform_gumbel", "_kl_uniform_normal", "_kl_uniform_pareto", "_kl_uniform_uniform", "_x_log_x", "kl_divergence", "register_kl"]}, {"name": "torch.distributions.kumaraswamy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\kumaraswamy.py", "layer": 2, "hasclass": 1, "myclass": ["Kumaraswamy"], "hasfunction": 1, "myfunction": ["_moments"]}, {"name": "torch.distributions.laplace", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\laplace.py", "layer": 2, "hasclass": 1, "myclass": ["Laplace"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.lkj_cholesky", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\lkj_cholesky.py", "layer": 2, "hasclass": 1, "myclass": ["LKJCholesky"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.log_normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\log_normal.py", "layer": 2, "hasclass": 1, "myclass": ["LogNormal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.logistic_normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\logistic_normal.py", "layer": 2, "hasclass": 1, "myclass": ["LogisticNormal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.lowrank_multivariate_normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\lowrank_multivariate_normal.py", "layer": 2, "hasclass": 1, "myclass": ["LowRankMultivariateNormal"], "hasfunction": 3, "myfunction": ["_batch_capacitance_tril", "_batch_lowrank_logdet", "_batch_lowrank_mahalanobis"]}, {"name": "torch.distributions.mixture_same_family", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\mixture_same_family.py", "layer": 2, "hasclass": 1, "myclass": ["MixtureSameFamily"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.multinomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\multinomial.py", "layer": 2, "hasclass": 1, "myclass": ["Multinomial"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.multivariate_normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\multivariate_normal.py", "layer": 2, "hasclass": 1, "myclass": ["MultivariateNormal"], "hasfunction": 3, "myfunction": ["_batch_mahalanobis", "_batch_mv", "_precision_to_scale_tril"]}, {"name": "torch.distributions.negative_binomial", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\negative_binomial.py", "layer": 2, "hasclass": 1, "myclass": ["NegativeBinomial"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.normal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\normal.py", "layer": 2, "hasclass": 1, "myclass": ["Normal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.one_hot_categorical", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\one_hot_categorical.py", "layer": 2, "hasclass": 2, "myclass": ["OneHotCategorical", "OneHotCategoricalStraightThrough"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.pareto", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\pareto.py", "layer": 2, "hasclass": 1, "myclass": ["Pareto"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.poisson", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\poisson.py", "layer": 2, "hasclass": 1, "myclass": ["Poisson"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.relaxed_bernoulli", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\relaxed_bernoulli.py", "layer": 2, "hasclass": 2, "myclass": ["LogitRelaxedBernoulli", "RelaxedBernoulli"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.relaxed_categorical", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\relaxed_categorical.py", "layer": 2, "hasclass": 2, "myclass": ["ExpRelaxedCategorical", "RelaxedOneHotCategorical"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.studentT", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\studentT.py", "layer": 2, "hasclass": 1, "myclass": ["StudentT"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.transformed_distribution", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\transformed_distribution.py", "layer": 2, "hasclass": 1, "myclass": ["TransformedDistribution"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.transforms", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\transforms.py", "layer": 2, "hasclass": 19, "myclass": ["AbsTransform", "AffineTransform", "CatTransform", "ComposeTransform", "CorrCholeskyTransform", "CumulativeDistributionTransform", "ExpTransform", "IndependentTransform", "LowerCholeskyTransform", "PowerTransform", "ReshapeTransform", "SigmoidTransform", "SoftmaxTransform", "SoftplusTransform", "StackTransform", "StickBreakingTransform", "TanhTransform", "Transform", "_InverseTransform"], "hasfunction": 1, "myfunction": ["_clipped_sigmoid"]}, {"name": "torch.distributions.uniform", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\uniform.py", "layer": 2, "hasclass": 1, "myclass": ["Uniform"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\utils.py", "layer": 2, "hasclass": 2, "myclass": ["_lazy_property_and_property", "lazy_property"], "hasfunction": 8, "myfunction": ["_standard_normal", "_sum_rightmost", "broadcast_all", "clamp_probs", "logits_to_probs", "probs_to_logits", "tril_matrix_to_vec", "vec_to_tril_matrix"]}, {"name": "torch.distributions.von_mises", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\von_mises.py", "layer": 2, "hasclass": 1, "myclass": ["VonMises"], "hasfunction": 3, "myfunction": ["_eval_poly", "_log_modified_bessel_fn", "_rejection_sample"]}, {"name": "torch.distributions.weibull", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\weibull.py", "layer": 2, "hasclass": 1, "myclass": ["Weibull"], "hasfunction": 0, "myfunction": []}, {"name": "torch.distributions.wishart", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\distributions\\wishart.py", "layer": 2, "hasclass": 1, "myclass": ["Wishart"], "hasfunction": 2, "myfunction": ["_clamp_above_eps", "_mvdigamma"]}, {"name": "torch.fft", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fft\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\functional.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 36, "myfunction": ["_check_list_size", "_consecutive_return_counts", "_consecutive_return_inverse", "unique_consecutive", "unique_consecutive", "_consecutive_return_output", "_lu_impl", "_lu_no_infos", "_lu_with_infos", "_meshgrid", "_return_counts", "_return_inverse", "unique", "unique", "_return_output", "_unique_consecutive_impl", "_unique_impl", "align_tensors", "atleast_1d", "atleast_2d", "atleast_3d", "block_diag", "broadcast_shapes", "broadcast_tensors", "cartesian_prod", "cdist", "chain_matmul", "einsum", "lu", "meshgrid", "norm", "split", "stft", "tensordot", "unique", "unique_consecutive"]}, {"name": "torch.futures", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\futures\\__init__.py", "layer": 1, "hasclass": 1, "myclass": ["_PyFutureMeta"], "hasfunction": 2, "myfunction": ["collect_all", "wait_all"]}, {"name": "torch.fx", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.fx._compatibility", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\_compatibility.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["compatibility"]}, {"name": "torch.fx._pytree", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\_pytree.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["_dict_flatten_spec", "_list_flatten_spec", "_namedtuple_flatten_spec", "_tuple_flatten_spec", "register_pytree_flatten_spec", "tree_flatten_spec"]}, {"name": "torch.fx._symbolic_trace", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\_symbolic_trace.py", "layer": 2, "hasclass": 8, "myclass": ["PHBase", "ProxyableClassMeta", "Tracer", "_PatchedFn", "_PatchedFnDel", "_PatchedFnSetAttr", "_PatchedFnSetItem", "_Patcher"], "hasfunction": 10, "myfunction": ["_assert_is_none", "_autowrap_check", "_create_wrapped_func", "_create_wrapped_method", "_find_proxy", "_patch_function", "_patch_wrapped_functions", "is_fx_tracing", "symbolic_trace", "wrap"]}, {"name": "torch.fx.graph", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\graph.py", "layer": 2, "hasclass": 9, "myclass": ["CodeGen", "Graph", "PythonCode", "_CustomBuiltin", "_InsertPoint", "_Namespace", "_PyTreeCodeGen", "_PyTreeInfo", "_node_list"], "hasfunction": 5, "myfunction": ["_format_target", "_is_from_torch", "_is_magic", "_register_custom_builtin", "_snake_case"]}, {"name": "torch.fx.graph_module", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\graph_module.py", "layer": 2, "hasclass": 3, "myclass": ["GraphModule", "_EvalCacheLoader", "_WrappedCall"], "hasfunction": 10, "myfunction": ["_assign_attr", "_copy_attr", "_deserialize_graph_module", "_exec_with_source", "_format_import_block", "_format_import_statement", "_forward_from_src", "reduce_deploy_graph_module", "reduce_graph_module", "reduce_package_graph_module"]}, {"name": "torch.fx.immutable_collections", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\immutable_collections.py", "layer": 2, "hasclass": 2, "myclass": ["immutable_dict", "immutable_list"], "hasfunction": 6, "myfunction": ["_create_immutable_container", "_immutable_dict_flatten", "_immutable_dict_unflatten", "_immutable_list_flatten", "_immutable_list_unflatten", "_no_mutation"]}, {"name": "torch.fx.interpreter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\interpreter.py", "layer": 2, "hasclass": 2, "myclass": ["Interpreter", "Transformer"], "hasfunction": 0, "myfunction": []}, {"name": "torch.fx.node", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\node.py", "layer": 2, "hasclass": 1, "myclass": ["Node"], "hasfunction": 6, "myfunction": ["_find_module_of_method", "_format_arg", "_get_qualified_name", "_type_repr", "map_aggregate", "map_arg"]}, {"name": "torch.fx.operator_schemas", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\operator_schemas.py", "layer": 2, "hasclass": 2, "myclass": ["ArgsKwargsPair", "_FakeGlobalNamespace"], "hasfunction": 10, "myfunction": ["_args_kwargs_to_normalized_args_kwargs", "_nonzero_schemas", "_torchscript_schema_to_signature", "_torchscript_type_to_python_type", "check_for_mutable_operation", "create_type_hint", "get_signature_for_torch_op", "normalize_function", "normalize_module", "type_matches"]}, {"name": "torch.fx.proxy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\proxy.py", "layer": 2, "hasclass": 6, "myclass": ["Attribute", "GraphAppendingTracer", "ParameterProxy", "Proxy", "TraceError", "TracerBase"], "hasfunction": 3, "myfunction": ["_define_reflectable", "_scope", "assert_fn"]}, {"name": "torch.fx.subgraph_rewriter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\subgraph_rewriter.py", "layer": 2, "hasclass": 1, "myclass": ["Match"], "hasfunction": 2, "myfunction": ["_replace_submodules", "replace_pattern"]}, {"name": "torch.fx.traceback", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\fx\\traceback.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["append_stack_trace", "format_stack", "is_stack_trace_overridden", "override_stack_trace", "set_stack_trace"]}, {"name": "torch.hub", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\hub.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 23, "myfunction": ["_check_dependencies", "_check_module_exists", "_check_repo_is_trusted", "_get_cache_or_reload", "_get_torch_home", "_git_archive_link", "_import_module", "_is_legacy_zip_format", "_legacy_zip_load", "_load_attr_from_module", "_load_entry_from_hubconf", "_load_local", "_parse_repo_info", "_read_url", "_remove_if_exists", "_validate_not_a_forked_repo", "download_url_to_file", "get_dir", "help", "list", "load", "load_state_dict_from_url", "set_dir"]}, {"name": "torch.jit", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\__init__.py", "layer": 1, "hasclass": 5, "myclass": ["CompilationUnit", "Error", "Future", "ScriptFunction", "strict_fusion"], "hasfunction": 7, "myfunction": ["_hide_source_ranges", "annotate", "enable_onednn_fusion", "export_opnames", "isinstance", "onednn_fusion_enabled", "script_if_tracing"]}, {"name": "torch.jit._async", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_async.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["fork", "wait"]}, {"name": "torch.jit._builtins", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_builtins.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_find_builtin", "_gen_torch_functional_registered_ops", "_get_builtin_table", "_is_special_functional_bound_op", "_register_builtin"]}, {"name": "torch.jit._check", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_check.py", "layer": 2, "hasclass": 1, "myclass": ["AttributeTypeIsSupportedChecker"], "hasfunction": 0, "myfunction": []}, {"name": "torch.jit._dataclass_impls", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_dataclass_impls.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["_get_fake_filename", "compose_fn", "synthesize__hash__", "synthesize__init__", "synthesize__repr__", "synthesize_comparison", "synthesize_equality", "synthesize_inequality"]}, {"name": "torch.jit._decomposition_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_decomposition_utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["_register_decomposition"]}, {"name": "torch.jit._freeze", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_freeze.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["freeze", "optimize_for_inference", "run_frozen_optimizations"]}, {"name": "torch.jit._fuser", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_fuser.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["_get_differentiable_graph_node", "_graph_for", "_script_method_graph_for", "fuser", "optimized_execution", "set_fusion_strategy"]}, {"name": "torch.jit._ir_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_ir_utils.py", "layer": 2, "hasclass": 1, "myclass": ["_InsertPoint"], "hasfunction": 1, "myfunction": ["insert_point_guard"]}, {"name": "torch.jit._monkeytype_config", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_monkeytype_config.py", "layer": 2, "hasclass": 3, "myclass": ["JitTypeTraceConfig", "JitTypeTraceStore", "JitTypeTraceStoreLogger"], "hasfunction": 5, "myfunction": ["get_optional_of_element_type", "get_qualified_name", "get_type", "is_torch_native_class", "jit_code_filter"]}, {"name": "torch.jit._recursive", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_recursive.py", "layer": 2, "hasclass": 4, "myclass": ["ConcreteTypeStore", "PropertyStub", "ScriptMethodStub", "SourceContext"], "hasfunction": 29, "myfunction": ["_check_no_signature", "_compile_and_register_class", "_get_valid_constant", "add_python_attr_to_scripted_model", "check_module_initialized", "compile_unbound_method", "create_hooks_from_stubs", "create_methods_and_properties_from_stubs", "create_script_class", "create_script_module", "create_script_module_impl", "get_hook_stubs", "get_module_concrete_type", "get_overload_annotations", "get_overload_name_mapping", "get_property_stubs", "infer_concrete_type_builder", "infer_methods_to_compile", "interface_script", "jit_ignored_properties", "lazy_bind", "make_stub", "make_stub_from_method", "make_stubs_for_overloads", "make_stubs_from_exported_methods", "script_model_defines_attr", "try_compile_fn", "wrap_cpp_class", "wrap_cpp_module"]}, {"name": "torch.jit._script", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_script.py", "layer": 2, "hasclass": 13, "myclass": ["Attribute", "ConstMap", "OrderedDictWrapper", "OrderedModuleDict", "RecursiveScriptClass", "RecursiveScriptModule", "ScriptMeta", "ScriptModule", "ScriptWarning", "_CachedForward", "_ScriptProfile", "_ScriptProfileColumn", "_ScriptProfileTable"], "hasfunction": 22, "myfunction": ["_check_directly_compile_overloaded", "_check_overload_defaults", "_compile_function_with_overload", "_get_function_from_type", "_get_methods", "_get_overloads", "_get_type_trace_db", "_is_new_style_class", "_make_fail", "_recursive_compile_class", "_reduce", "_unwrap_optional", "call_prepare_scriptable_func", "call_prepare_scriptable_func_impl", "create_script_dict", "create_script_list", "interface", "method_template", "pad", "script", "script_method", "unpackage_script_module"]}, {"name": "torch.jit._serialization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_serialization.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 7, "myfunction": ["get_ff_module", "get_flatbuffer_module_info", "jit_module_from_flatbuffer", "load", "save", "save_jit_module_to_flatbuffer", "validate_map_location"]}, {"name": "torch.jit._state", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_state.py", "layer": 2, "hasclass": 1, "myclass": ["EnabledProxy"], "hasfunction": 10, "myfunction": ["_add_script_class", "_clear_class_state", "_get_python_class", "_get_script_class", "_set_jit_function_cache", "_set_jit_overload_cache", "_try_get_jit_cached_function", "_try_get_jit_cached_overloads", "disable", "enable"]}, {"name": "torch.jit._trace", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\_trace.py", "layer": 2, "hasclass": 5, "myclass": ["ONNXTracedModule", "TopLevelTracedModule", "TracedModule", "TracerWarning", "TracingCheckError"], "hasfunction": 16, "myfunction": ["_check_trace", "_clone_inputs", "_create_interpreter_name_lookup_fn", "_get_trace_graph", "_script_if_tracing", "_time", "_unique_state_dict", "_verify_equal", "indent", "is_tracing", "make_module", "make_tuple", "trace", "trace_module", "verify", "wrap_check_inputs"]}, {"name": "torch.jit.annotations", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\annotations.py", "layer": 2, "hasclass": 2, "myclass": ["EvalEnv", "Module"], "hasfunction": 14, "myfunction": ["_eval_no_call", "ann_to_type", "check_fn", "get_enum_value_type", "get_param_names", "get_signature", "get_type_line", "is_function_or_method", "is_tensor", "is_vararg", "parse_type_line", "split_type_line", "try_ann_to_type", "try_real_annotations"]}, {"name": "torch.jit.frontend", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\jit\\frontend.py", "layer": 2, "hasclass": 8, "myclass": ["Builder", "ExprBuilder", "FrontendError", "FrontendTypeError", "NotSupportedError", "StmtBuilder", "UnsupportedNodeError", "WithItemBuilder"], "hasfunction": 16, "myfunction": ["build_class_def", "build_def", "build_ignore_context_manager", "build_param", "build_param_list", "build_stmts", "build_withitems", "find_before", "get_class_assigns", "get_class_properties", "get_default_args", "get_default_args_for_class", "get_jit_class_def", "get_jit_def", "is_reserved_name", "is_torch_jit_ignore_context_manager"]}, {"name": "torch.library", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\library.py", "layer": 1, "hasclass": 1, "myclass": ["Library"], "hasfunction": 2, "myfunction": ["define", "impl"]}, {"name": "torch.linalg", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\linalg\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.masked", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.masked._docs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\_docs.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.masked._ops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\_ops.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 34, "myfunction": ["_any", "_apply_docstring_templates", "_canonical_dim", "_combine_input_and_mask", "_generate_docstring", "_input_mask", "_output_mask", "_reduction_identity", "_sparse_coo_flatten_indices", "_sparse_coo_scatter_reduction_helper", "_sparse_coo_where", "_sparse_csr_segment_reduction_helper", "_sparse_csr_where", "_std_var", "_where", "amax", "amin", "argmax", "argmin", "cumprod", "cumsum", "log_softmax", "logaddexp", "logsumexp", "mean", "median", "norm", "normalize", "prod", "softmax", "softmin", "std", "sum", "var"]}, {"name": "torch.masked.maskedtensor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.masked.maskedtensor.binary", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\binary.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["_apply_native_binary", "_binary_helper", "_get_at_least_one_mask", "_is_native_binary", "_torch_binary", "_torch_inplace_binary"]}, {"name": "torch.masked.maskedtensor.core", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\core.py", "layer": 3, "hasclass": 1, "myclass": ["MaskedTensor"], "hasfunction": 8, "myfunction": ["_get_data", "_map_mt_args_kwargs", "_masked_tensor_str", "_masks_match", "_maybe_get_mask", "_tensors_match", "_wrap_result", "is_masked_tensor"]}, {"name": "torch.masked.maskedtensor.creation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\creation.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["as_masked_tensor", "masked_tensor"]}, {"name": "torch.masked.maskedtensor.passthrough", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\passthrough.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["_apply_pass_through_fn", "_is_pass_through_fn"]}, {"name": "torch.masked.maskedtensor.reductions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\reductions.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 12, "myfunction": ["_apply_reduction", "_get_masked_fn", "_is_reduction", "_masked_all", "_masked_all_all", "_masked_all_dim", "_multidim_any", "_reduce_dim_args", "_torch_grad_reduce", "_torch_reduce", "_torch_reduce_all", "_torch_reduce_dim"]}, {"name": "torch.masked.maskedtensor.unary", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\masked\\maskedtensor\\unary.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_apply_native_unary", "_is_native_unary", "_torch_inplace_unary", "_torch_unary", "_unary_helper"]}, {"name": "torch.multiprocessing", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\multiprocessing\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["get_all_sharing_strategies", "get_sharing_strategy", "set_sharing_strategy"]}, {"name": "torch.multiprocessing._atfork", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\multiprocessing\\_atfork.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["_register", "register_after_fork"]}, {"name": "torch.multiprocessing.reductions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\multiprocessing\\reductions.py", "layer": 2, "hasclass": 2, "myclass": ["SharedCache", "StorageWeakRef"], "hasfunction": 16, "myfunction": ["fd_id", "init_reductions", "rebuild_cuda_tensor", "rebuild_event", "rebuild_storage_empty", "rebuild_storage_fd", "rebuild_storage_filename", "rebuild_tensor", "rebuild_typed_storage", "rebuild_typed_storage_child", "reduce_event", "reduce_storage", "reduce_tensor", "reduce_typed_storage", "reduce_typed_storage_child", "storage_from_cache"]}, {"name": "torch.nested", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nested\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["as_nested_tensor", "nested_tensor"]}, {"name": "torch.nn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["factory_kwargs"]}, {"name": "torch.nn._reduction", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\_reduction.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["get_enum", "legacy_get_enum", "legacy_get_string"]}, {"name": "torch.nn.common_types", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\common_types.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\functional.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 107, "myfunction": ["_adaptive_max_pool1d", "_adaptive_max_pool2d", "_adaptive_max_pool3d", "_fractional_max_pool2d", "_fractional_max_pool3d", "_get_softmax_dim", "_in_projection", "_in_projection_packed", "_max_pool1d", "_max_pool2d", "_max_pool3d", "_mha_shape_check", "_no_grad_embedding_renorm_", "_threshold", "_unpool_output_size", "_verify_batch_size", "_verify_spatial_size", "adaptive_avg_pool2d", "adaptive_avg_pool3d", "adaptive_max_pool1d", "adaptive_max_pool1d_with_indices", "adaptive_max_pool2d", "adaptive_max_pool2d_with_indices", "adaptive_max_pool3d", "adaptive_max_pool3d_with_indices", "affine_grid", "alpha_dropout", "assert_int_or_pair", "batch_norm", "binary_cross_entropy", "binary_cross_entropy_with_logits", "celu", "cosine_embedding_loss", "cross_entropy", "ctc_loss", "dropout", "dropout1d", "dropout2d", "dropout3d", "elu", "embedding", "embedding_bag", "feature_alpha_dropout", "fold", "fractional_max_pool2d", "fractional_max_pool2d_with_indices", "fractional_max_pool3d", "fractional_max_pool3d_with_indices", "gaussian_nll_loss", "glu", "grid_sample", "group_norm", "gumbel_softmax", "hardsigmoid", "hardswish", "hardtanh", "hinge_embedding_loss", "huber_loss", "instance_norm", "interpolate", "kl_div", "l1_loss", "layer_norm", "leaky_relu", "local_response_norm", "log_softmax", "lp_pool1d", "lp_pool2d", "margin_ranking_loss", "max_pool1d", "max_pool1d_with_indices", "max_pool2d", "max_pool2d_with_indices", "max_pool3d", "max_pool3d_with_indices", "max_unpool1d", "max_unpool2d", "max_unpool3d", "mish", "mse_loss", "multi_head_attention_forward", "multi_margin_loss", "multilabel_margin_loss", "multilabel_soft_margin_loss", "nll_loss", "normalize", "poisson_nll_loss", "relu", "relu6", "rrelu", "selu", "sigmoid", "silu", "smooth_l1_loss", "soft_margin_loss", "softmax", "softmin", "softsign", "tanh", "tanhshrink", "_threshold", "triplet_margin_loss", "triplet_margin_with_distance_loss", "unfold", "upsample", "upsample_bilinear", "upsample_nearest"]}, {"name": "torch.nn.grad", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\grad.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["conv1d_input", "conv1d_weight", "conv2d_input", "conv2d_weight", "conv3d_input", "conv3d_weight"]}, {"name": "torch.nn.init", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\init.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 34, "myfunction": ["_calculate_correct_fan", "_calculate_fan_in_and_fan_out", "_make_deprecate", "_no_grad_fill_", "_no_grad_normal_", "_no_grad_trunc_normal_", "_no_grad_uniform_", "_no_grad_zero_", "calculate_gain", "constant", "constant_", "dirac", "dirac_", "eye", "eye_", "kaiming_normal", "kaiming_normal_", "kaiming_uniform", "kaiming_uniform_", "normal", "normal_", "ones_", "orthogonal", "orthogonal_", "sparse", "sparse_", "trunc_normal_", "uniform", "uniform_", "xavier_normal", "xavier_normal_", "xavier_uniform", "xavier_uniform_", "zeros_"]}, {"name": "torch.nn.intrinsic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\modules\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.modules.fused", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\modules\\fused.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.qat", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\qat\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.qat.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\qat\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.qat.modules.conv_fused", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\qat\\modules\\conv_fused.py", "layer": 5, "hasclass": 10, "myclass": ["ConvBn1d", "ConvBn2d", "ConvBn3d", "ConvBnReLU1d", "ConvBnReLU2d", "ConvBnReLU3d", "ConvReLU1d", "ConvReLU2d", "ConvReLU3d", "_ConvBnNd"], "hasfunction": 2, "myfunction": ["freeze_bn_stats", "update_bn_stats"]}, {"name": "torch.nn.intrinsic.qat.modules.linear_fused", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\qat\\modules\\linear_fused.py", "layer": 5, "hasclass": 1, "myclass": ["LinearBn1d"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.qat.modules.linear_relu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\qat\\modules\\linear_relu.py", "layer": 5, "hasclass": 1, "myclass": ["LinearReLU"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\dynamic\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.dynamic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\dynamic\\modules\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.dynamic.modules.linear_relu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\dynamic\\modules\\linear_relu.py", "layer": 6, "hasclass": 1, "myclass": ["LinearReLU"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.modules.bn_relu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\modules\\bn_relu.py", "layer": 5, "hasclass": 2, "myclass": ["BNReLU2d", "BNReLU3d"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.modules.conv_relu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\modules\\conv_relu.py", "layer": 5, "hasclass": 3, "myclass": ["ConvReLU1d", "ConvReLU2d", "ConvReLU3d"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.intrinsic.quantized.modules.linear_relu", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\intrinsic\\quantized\\modules\\linear_relu.py", "layer": 5, "hasclass": 1, "myclass": ["LinearReLU"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules._functions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\_functions.py", "layer": 3, "hasclass": 3, "myclass": ["BackwardHookFunction", "CrossMapLRN2d", "SyncBatchNorm"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.activation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\activation.py", "layer": 3, "hasclass": 29, "myclass": ["CELU", "ELU", "GELU", "GLU", "Hardshrink", "Hardsigmoid", "Hardswish", "Hardtanh", "LeakyReLU", "LogSigmoid", "LogSoftmax", "Mish", "MultiheadAttention", "PReLU", "RReLU", "ReLU", "ReLU6", "SELU", "SiLU", "Sigmoid", "Softmax", "Softmax2d", "Softmin", "Softplus", "Softshrink", "Softsign", "Tanh", "Tanhshrink", "Threshold"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.adaptive", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\adaptive.py", "layer": 3, "hasclass": 2, "myclass": ["AdaptiveLogSoftmaxWithLoss", "_ASMoutput"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.batchnorm", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\batchnorm.py", "layer": 3, "hasclass": 10, "myclass": ["BatchNorm1d", "BatchNorm2d", "BatchNorm3d", "LazyBatchNorm1d", "LazyBatchNorm2d", "LazyBatchNorm3d", "SyncBatchNorm", "_BatchNorm", "_LazyNormBase", "_NormBase"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.channelshuffle", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\channelshuffle.py", "layer": 3, "hasclass": 1, "myclass": ["ChannelShuffle"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.container", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\container.py", "layer": 3, "hasclass": 6, "myclass": ["Container", "ModuleDict", "ModuleList", "ParameterDict", "ParameterList", "Sequential"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\conv.py", "layer": 3, "hasclass": 16, "myclass": ["Conv1d", "Conv2d", "Conv3d", "ConvTranspose1d", "ConvTranspose2d", "ConvTranspose3d", "LazyConv1d", "LazyConv2d", "LazyConv3d", "LazyConvTranspose1d", "LazyConvTranspose2d", "LazyConvTranspose3d", "_ConvNd", "_ConvTransposeMixin", "_ConvTransposeNd", "_LazyConvXdMixin"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.distance", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\distance.py", "layer": 3, "hasclass": 2, "myclass": ["CosineSimilarity", "PairwiseDistance"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.dropout", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\dropout.py", "layer": 3, "hasclass": 7, "myclass": ["AlphaDropout", "Dropout", "Dropout1d", "Dropout2d", "Dropout3d", "FeatureAlphaDropout", "_DropoutNd"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.flatten", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\flatten.py", "layer": 3, "hasclass": 2, "myclass": ["Flatten", "Unflatten"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.fold", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\fold.py", "layer": 3, "hasclass": 2, "myclass": ["Fold", "Unfold"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.instancenorm", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\instancenorm.py", "layer": 3, "hasclass": 7, "myclass": ["InstanceNorm1d", "InstanceNorm2d", "InstanceNorm3d", "LazyInstanceNorm1d", "LazyInstanceNorm2d", "LazyInstanceNorm3d", "_InstanceNorm"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.lazy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\lazy.py", "layer": 3, "hasclass": 2, "myclass": ["LazyModuleMixin", "_LazyProtocol"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\linear.py", "layer": 3, "hasclass": 5, "myclass": ["Bilinear", "Identity", "LazyLinear", "Linear", "NonDynamicallyQuantizableLinear"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.loss", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\loss.py", "layer": 3, "hasclass": 24, "myclass": ["BCELoss", "BCEWithLogitsLoss", "CTCLoss", "CosineEmbeddingLoss", "CrossEntropyLoss", "GaussianNLLLoss", "HingeEmbeddingLoss", "HuberLoss", "KLDivLoss", "L1Loss", "MSELoss", "MarginRankingLoss", "MultiLabelMarginLoss", "MultiLabelSoftMarginLoss", "MultiMarginLoss", "NLLLoss", "NLLLoss2d", "PoissonNLLLoss", "SmoothL1Loss", "SoftMarginLoss", "TripletMarginLoss", "TripletMarginWithDistanceLoss", "_Loss", "_WeightedLoss"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.module", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\module.py", "layer": 3, "hasclass": 3, "myclass": ["Module", "_IncompatibleKeys", "_WrappedHook"], "hasfunction": 6, "myfunction": ["_addindent", "_forward_unimplemented", "register_module_backward_hook", "register_module_forward_hook", "register_module_forward_pre_hook", "register_module_full_backward_hook"]}, {"name": "torch.nn.modules.normalization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\normalization.py", "layer": 3, "hasclass": 4, "myclass": ["CrossMapLRN2d", "GroupNorm", "LayerNorm", "LocalResponseNorm"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.padding", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\padding.py", "layer": 3, "hasclass": 13, "myclass": ["ConstantPad1d", "ConstantPad2d", "ConstantPad3d", "ReflectionPad1d", "ReflectionPad2d", "ReflectionPad3d", "ReplicationPad1d", "ReplicationPad2d", "ReplicationPad3d", "ZeroPad2d", "_ConstantPadNd", "_ReflectionPadNd", "_ReplicationPadNd"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.pixelshuffle", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\pixelshuffle.py", "layer": 3, "hasclass": 2, "myclass": ["PixelShuffle", "PixelUnshuffle"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.pooling", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\pooling.py", "layer": 3, "hasclass": 25, "myclass": ["AdaptiveAvgPool1d", "AdaptiveAvgPool2d", "AdaptiveAvgPool3d", "AdaptiveMaxPool1d", "AdaptiveMaxPool2d", "AdaptiveMaxPool3d", "AvgPool1d", "AvgPool2d", "AvgPool3d", "FractionalMaxPool2d", "FractionalMaxPool3d", "LPPool1d", "LPPool2d", "MaxPool1d", "MaxPool2d", "MaxPool3d", "MaxUnpool1d", "MaxUnpool2d", "MaxUnpool3d", "_AdaptiveAvgPoolNd", "_AdaptiveMaxPoolNd", "_AvgPoolNd", "_LPPoolNd", "_MaxPoolNd", "_MaxUnpoolNd"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\rnn.py", "layer": 3, "hasclass": 8, "myclass": ["GRU", "GRUCell", "LSTM", "LSTMCell", "RNN", "RNNBase", "RNNCell", "RNNCellBase"], "hasfunction": 2, "myfunction": ["_apply_permutation", "apply_permutation"]}, {"name": "torch.nn.modules.sparse", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\sparse.py", "layer": 3, "hasclass": 2, "myclass": ["Embedding", "EmbeddingBag"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.transformer", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\transformer.py", "layer": 3, "hasclass": 5, "myclass": ["Transformer", "TransformerDecoder", "TransformerDecoderLayer", "TransformerEncoder", "TransformerEncoderLayer"], "hasfunction": 2, "myfunction": ["_get_activation_fn", "_get_clones"]}, {"name": "torch.nn.modules.upsampling", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\upsampling.py", "layer": 3, "hasclass": 3, "myclass": ["Upsample", "UpsamplingBilinear2d", "UpsamplingNearest2d"], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.modules.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\modules\\utils.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["_list_with_default", "_ntuple", "_pair", "_quadruple", "_reverse_repeat_tuple", "_single", "_triple", "consume_prefix_in_state_dict_if_present"]}, {"name": "torch.nn.parallel", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["DistributedDataParallelCPU"]}, {"name": "torch.nn.parallel._functions", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\_functions.py", "layer": 3, "hasclass": 4, "myclass": ["Broadcast", "Gather", "ReduceAddCoalesced", "Scatter"], "hasfunction": 1, "myfunction": ["_get_stream"]}, {"name": "torch.nn.parallel._replicated_tensor_ddp_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\_replicated_tensor_ddp_utils.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["_ddp_replicated_tensor", "_ddp_with_replicated_tensor_enabled", "_set_ddp_with_replicated_tensor"]}, {"name": "torch.nn.parallel.comm", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\comm.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["broadcast", "broadcast_coalesced", "gather", "reduce_add", "reduce_add_coalesced", "scatter"]}, {"name": "torch.nn.parallel.distributed", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\distributed.py", "layer": 3, "hasclass": 5, "myclass": ["DistributedDataParallel", "_BufferCommHook", "_BufferCommHookLocation", "_DDPJoinHook", "_DDPSink"], "hasfunction": 4, "myfunction": ["_dump_DDP_relevant_env_vars", "_find_tensors", "_tree_flatten_with_rref", "_tree_unflatten_with_rref"]}, {"name": "torch.nn.parallel.scatter_gather", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parallel\\scatter_gather.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_is_namedtuple", "gather", "is_namedtuple", "scatter", "scatter_kwargs"]}, {"name": "torch.nn.parameter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\parameter.py", "layer": 2, "hasclass": 5, "myclass": ["Parameter", "UninitializedBuffer", "UninitializedParameter", "UninitializedTensorMixin", "_ParameterMeta"], "hasfunction": 1, "myfunction": ["is_lazy"]}, {"name": "torch.nn.qat", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\dynamic\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.dynamic.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\dynamic\\modules\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.dynamic.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\dynamic\\modules\\linear.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\modules\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.modules.conv", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\modules\\conv.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.modules.embedding_ops", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\modules\\embedding_ops.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.qat.modules.linear", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\qat\\modules\\linear.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantizable", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantizable\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantizable.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantizable\\modules\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantized", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantized\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantized.dynamic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantized\\dynamic\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantized.functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantized\\functional.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.quantized.modules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\quantized\\modules\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.nn.utils.clip_grad", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\clip_grad.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["clip_grad_norm", "clip_grad_norm_", "clip_grad_value_"]}, {"name": "torch.nn.utils.convert_parameters", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\convert_parameters.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["_check_param_device", "parameters_to_vector", "vector_to_parameters"]}, {"name": "torch.nn.utils.fusion", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\fusion.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 4, "myfunction": ["fuse_conv_bn_eval", "fuse_conv_bn_weights", "fuse_linear_bn_eval", "fuse_linear_bn_weights"]}, {"name": "torch.nn.utils.init", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\init.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["skip_init"]}, {"name": "torch.nn.utils.memory_format", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\memory_format.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["convert_conv2d_weight_memory_format"]}, {"name": "torch.nn.utils.parametrizations", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\parametrizations.py", "layer": 3, "hasclass": 3, "myclass": ["_OrthMaps", "_Orthogonal", "_SpectralNorm"], "hasfunction": 4, "myfunction": ["_is_orthogonal", "_make_orthogonal", "orthogonal", "spectral_norm"]}, {"name": "torch.nn.utils.parametrize", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\parametrize.py", "layer": 3, "hasclass": 1, "myclass": ["ParametrizationList"], "hasfunction": 9, "myfunction": ["_inject_new_class", "_inject_property", "_register_parameter_or_buffer", "cached", "is_parametrized", "register_parametrization", "remove_parametrizations", "transfer_parametrizations_and_params", "type_before_parametrizations"]}, {"name": "torch.nn.utils.rnn", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\rnn.py", "layer": 3, "hasclass": 2, "myclass": ["PackedSequence", "PackedSequence_"], "hasfunction": 10, "myfunction": ["_packed_sequence_init", "_packed_sequence_init_args", "bind", "invert_permutation", "pack_padded_sequence", "pack_sequence", "pad_packed_sequence", "pad_sequence", "unpack_sequence", "unpad_sequence"]}, {"name": "torch.nn.utils.stateless", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\nn\\utils\\stateless.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 7, "myfunction": ["_apply_func_submodules", "_change_class", "_check_tied_val_already_replaced", "_create_swap_params", "_remove_swap", "_reparametrize_module", "functional_call"]}, {"name": "torch.onnx", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\__init__.py", "layer": 1, "hasclass": 2, "myclass": ["ExportTypes", "JitScalarType"], "hasfunction": 3, "myfunction": ["_export", "disable_log", "enable_log"]}, {"name": "torch.onnx._constants", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_constants.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._deprecation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_deprecation.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["deprecated"]}, {"name": "torch.onnx._exporter_states", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_exporter_states.py", "layer": 2, "hasclass": 2, "myclass": ["RuntimeTypeCheckState", "SymbolicContext"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._globals", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_globals.py", "layer": 2, "hasclass": 1, "myclass": ["_InternalGlobals"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal._beartype", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\_beartype.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["_create_beartype_decorator", "_no_op_decorator", "_no_op_decorator"]}, {"name": "torch.onnx._internal.diagnostics", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics._diagnostic", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\_diagnostic.py", "layer": 4, "hasclass": 3, "myclass": ["ExportDiagnostic", "ExportDiagnosticEngine", "ExportDiagnosticTool"], "hasfunction": 1, "myfunction": ["create_export_diagnostic_context"]}, {"name": "torch.onnx._internal.diagnostics._rules", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\_rules.py", "layer": 4, "hasclass": 1, "myclass": ["_POERules"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra._infra", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\_infra.py", "layer": 5, "hasclass": 12, "myclass": ["Diagnostic", "DiagnosticContext", "DiagnosticOptions", "DiagnosticTool", "Invocation", "Level", "Location", "Rule", "RuleCollection", "Stack", "Tag", "levels"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.engine", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\engine.py", "layer": 5, "hasclass": 1, "myclass": ["DiagnosticEngine"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.formatter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\formatter.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 4, "myfunction": ["_camel_case_to_snake_case", "_convert_key", "kebab_case_to_snake_case", "sarif_to_json"]}, {"name": "torch.onnx._internal.diagnostics.infra.sarif", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\__init__.py", "layer": 5, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._address", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_address.py", "layer": 6, "hasclass": 1, "myclass": ["Address"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._artifact", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_artifact.py", "layer": 6, "hasclass": 1, "myclass": ["Artifact"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._artifact_content", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_artifact_content.py", "layer": 7, "hasclass": 1, "myclass": ["ArtifactContent"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._artifact_location", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_artifact_location.py", "layer": 7, "hasclass": 1, "myclass": ["ArtifactLocation"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._artifact_change", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_artifact_change.py", "layer": 6, "hasclass": 1, "myclass": ["ArtifactChange"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._attachment", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_attachment.py", "layer": 6, "hasclass": 1, "myclass": ["Attachment"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._code_flow", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_code_flow.py", "layer": 6, "hasclass": 1, "myclass": ["CodeFlow"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._configuration_override", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_configuration_override.py", "layer": 6, "hasclass": 1, "myclass": ["ConfigurationOverride"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._conversion", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_conversion.py", "layer": 6, "hasclass": 1, "myclass": ["Conversion"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._edge", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_edge.py", "layer": 6, "hasclass": 1, "myclass": ["Edge"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._edge_traversal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_edge_traversal.py", "layer": 6, "hasclass": 1, "myclass": ["EdgeTraversal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._exception", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_exception.py", "layer": 6, "hasclass": 1, "myclass": ["Exception"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._external_properties", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_external_properties.py", "layer": 6, "hasclass": 1, "myclass": ["ExternalProperties"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_reference", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_external_property_file_reference.py", "layer": 6, "hasclass": 1, "myclass": ["ExternalPropertyFileReference"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._external_property_file_references", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_external_property_file_references.py", "layer": 6, "hasclass": 1, "myclass": ["ExternalPropertyFileReferences"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._fix", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_fix.py", "layer": 6, "hasclass": 1, "myclass": ["Fix"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._graph", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_graph.py", "layer": 6, "hasclass": 1, "myclass": ["Graph"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._graph_traversal", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_graph_traversal.py", "layer": 6, "hasclass": 1, "myclass": ["GraphTraversal"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._invocation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_invocation.py", "layer": 6, "hasclass": 1, "myclass": ["Invocation"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._location", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_location.py", "layer": 6, "hasclass": 1, "myclass": ["Location"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._location_relationship", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_location_relationship.py", "layer": 7, "hasclass": 1, "myclass": ["LocationRelationship"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._logical_location", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_logical_location.py", "layer": 6, "hasclass": 1, "myclass": ["LogicalLocation"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._message", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_message.py", "layer": 6, "hasclass": 1, "myclass": ["Message"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._multiformat_message_string", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_multiformat_message_string.py", "layer": 6, "hasclass": 1, "myclass": ["MultiformatMessageString"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._node", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_node.py", "layer": 6, "hasclass": 1, "myclass": ["Node"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._notification", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_notification.py", "layer": 6, "hasclass": 1, "myclass": ["Notification"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._physical_location", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_physical_location.py", "layer": 6, "hasclass": 1, "myclass": ["PhysicalLocation"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._property_bag", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_property_bag.py", "layer": 6, "hasclass": 1, "myclass": ["PropertyBag"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._rectangle", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_rectangle.py", "layer": 6, "hasclass": 1, "myclass": ["Rectangle"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._region", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_region.py", "layer": 6, "hasclass": 1, "myclass": ["Region"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._replacement", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_replacement.py", "layer": 6, "hasclass": 1, "myclass": ["Replacement"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._reporting_configuration", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_reporting_configuration.py", "layer": 6, "hasclass": 1, "myclass": ["ReportingConfiguration"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_reporting_descriptor.py", "layer": 6, "hasclass": 1, "myclass": ["ReportingDescriptor"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_relationship", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_reporting_descriptor_relationship.py", "layer": 7, "hasclass": 1, "myclass": ["ReportingDescriptorRelationship"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._reporting_descriptor_reference", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_reporting_descriptor_reference.py", "layer": 6, "hasclass": 1, "myclass": ["ReportingDescriptorReference"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._result", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_result.py", "layer": 6, "hasclass": 1, "myclass": ["Result"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._result_provenance", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_result_provenance.py", "layer": 7, "hasclass": 1, "myclass": ["ResultProvenance"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._run", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_run.py", "layer": 6, "hasclass": 1, "myclass": ["Run"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._run_automation_details", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_run_automation_details.py", "layer": 7, "hasclass": 1, "myclass": ["RunAutomationDetails"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._sarif_log", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_sarif_log.py", "layer": 6, "hasclass": 1, "myclass": ["SarifLog"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._special_locations", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_special_locations.py", "layer": 6, "hasclass": 1, "myclass": ["SpecialLocations"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._stack", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_stack.py", "layer": 6, "hasclass": 1, "myclass": ["Stack"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._stack_frame", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_stack_frame.py", "layer": 7, "hasclass": 1, "myclass": ["StackFrame"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._suppression", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_suppression.py", "layer": 6, "hasclass": 1, "myclass": ["Suppression"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._thread_flow", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_thread_flow.py", "layer": 6, "hasclass": 1, "myclass": ["ThreadFlow"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._thread_flow_location", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_thread_flow_location.py", "layer": 7, "hasclass": 1, "myclass": ["ThreadFlowLocation"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._tool", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_tool.py", "layer": 6, "hasclass": 1, "myclass": ["Tool"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._tool_component", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_tool_component.py", "layer": 7, "hasclass": 1, "myclass": ["ToolComponent"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._tool_component_reference", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_tool_component_reference.py", "layer": 8, "hasclass": 1, "myclass": ["ToolComponentReference"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._translation_metadata", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_translation_metadata.py", "layer": 6, "hasclass": 1, "myclass": ["TranslationMetadata"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._version_control_details", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_version_control_details.py", "layer": 6, "hasclass": 1, "myclass": ["VersionControlDetails"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._web_request", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_web_request.py", "layer": 6, "hasclass": 1, "myclass": ["WebRequest"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif._web_response", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\_web_response.py", "layer": 6, "hasclass": 1, "myclass": ["WebResponse"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.diagnostics.infra.sarif.version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\diagnostics\\infra\\sarif\\version.py", "layer": 6, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx._internal.jit_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\jit_utils.py", "layer": 3, "hasclass": 1, "myclass": ["GraphContext"], "hasfunction": 10, "myfunction": ["_add_attribute", "_add_op", "_const_if_tensor", "_create_node", "_is_caffe2_aten_fallback", "_is_onnx_list", "_is_tensor", "_scalar", "add_op_with_blocks", "get_device_from_value"]}, {"name": "torch.onnx._internal.registration", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_internal\\registration.py", "layer": 3, "hasclass": 3, "myclass": ["OverrideDict", "SymbolicRegistry", "_SymbolicFunctionGroup"], "hasfunction": 3, "myfunction": ["_dispatch_opset_version", "custom_onnx_symbolic", "onnx_symbolic"]}, {"name": "torch.onnx._patch_torch", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_patch_torch.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 11, "myfunction": ["_add_attribute", "_aten_op", "_block_op", "_const_if_tensor", "_graph_constant", "_graph_op", "_is_caffe2_aten_fallback", "_is_onnx_list", "_new_node", "_node_getitem", "_scalar"]}, {"name": "torch.onnx._type_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\_type_utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["valid_scalar_name", "valid_torch_name"]}, {"name": "torch.onnx.errors", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\errors.py", "layer": 2, "hasclass": 6, "myclass": ["CallHintViolationWarning", "CheckerError", "OnnxExporterError", "OnnxExporterWarning", "SymbolicValueError", "UnsupportedOperatorError"], "hasfunction": 0, "myfunction": []}, {"name": "torch.onnx.symbolic_caffe2", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_caffe2.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 21, "myfunction": ["_empty_affine_quantized", "_permute_helper", "add", "avg_pool2d", "cat", "conv2d", "conv2d_relu", "conv_prepack", "dequantize", "linear", "linear_prepack", "max_pool2d", "nchw2nhwc", "nhwc2nchw", "quantize_per_tensor", "register_quantized_ops", "relu", "reshape", "sigmoid", "slice", "upsample_nearest2d"]}, {"name": "torch.onnx.symbolic_helper", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_helper.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 78, "myfunction": ["__interpolate_helper", "_arange_cast_helper", "_arange_helper", "_argmin_argmax_helper", "_as_list_type", "_avgpool_helper", "_batchnorm_helper", "_block_list_in_opset", "_flatten_helper", "_generate_wrapped_number", "_get_const", "_get_dim_for_cross", "_get_interpolate_attributes", "_get_tensor_dim_size", "_get_tensor_rank", "_get_tensor_sizes", "_handle_reduce_dim_none", "_if_scalar_type_as", "_index_fill_reshape_helper", "_interpolate_get_scales", "_interpolate_get_scales_and_mode", "_interpolate_get_scales_if_available", "_interpolate_helper", "_interpolate_size_to_scales", "_interpolate_warning", "_is_bool", "_is_constant", "_is_fp", "_is_in_type_group", "_is_list", "_is_none", "_is_onnx_constant", "_is_packed_list", "_is_scalar_list", "_is_split_static", "_is_tensor", "_is_tensor_list", "_is_tuple_construct", "_is_value", "_lt_helper", "_maybe_get_const", "_maybe_get_scalar", "_node_get", "_onnx_opset_unsupported", "_onnx_opset_unsupported_detailed", "_onnx_unsupported", "_optional_input_placeholder_tensor", "_parse_arg", "_reducesum_helper", "_repeat_interleave_split_helper", "_reshape_helper", "_scalar", "_scatter_helper", "_select_helper", "_set_onnx_shape_inference", "_set_operator_export_type", "_set_opset_version", "_size_helper", "_slice_helper", "_sort_helper", "_squeeze_helper", "_topk_helper", "_try_get_scalar_type", "_unbind_helper", "_unimplemented", "_unpack_list", "_unpack_quantized_tensor", "_unpack_tuple", "_unsqueeze_helper", "args_have_same_dtype", "check_training_mode", "dequantize_helper", "is_caffe2_aten_fallback", "is_complex_value", "parse_args", "quantize_helper", "quantized_args", "requantize_bias_helper"]}, {"name": "torch.onnx.symbolic_opset10", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset10.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 34, "myfunction": ["__interpolate", "_apply_params", "_avg_pool", "_div_rounding_mode", "_floor_divide", "_interpolate", "_max_pool", "_slice", "dequantize", "div", "embedding_bag", "fake_quantize_per_tensor_affine", "flip", "fmod", "isfinite", "isinf", "nan_to_num", "quantize_per_tensor", "quantized_add", "quantized_add_relu", "quantized_cat", "quantized_conv2d", "quantized_conv2d_relu", "quantized_group_norm", "quantized_hardswish", "quantized_instance_norm", "quantized_layer_norm", "quantized_leaky_relu", "quantized_linear", "quantized_mul", "quantized_sigmoid", "slice", "sort", "topk"]}, {"name": "torch.onnx.symbolic_opset11", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset11.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 67, "myfunction": ["Delete", "__getitem_", "__interpolate", "__lshift_", "__rshift_", "_apply_params", "_avg_pool", "_dim_arange", "_get_im2col_indices_along_dim", "_get_im2col_output_shape", "_get_im2col_padded_input", "_interpolate", "_len", "_prepare_onnx_paddings", "_set_item", "_unique2", "add", "append", "arange", "argsort", "cat", "chunk", "clamp", "clamp_max", "clamp_min", "constant_pad_nd", "cumsum", "embedding_bag", "embedding_renorm", "flatten", "gather", "hardtanh", "im2col", "index", "index_copy", "index_fill", "index_put", "insert", "linalg_det", "linalg_vector_norm", "logdet", "masked_scatter", "masked_select", "mm", "narrow", "normal", "pad", "pixel_shuffle", "pop", "prim_constant_chunk", "reflection_pad", "relu6", "remainder", "replication_pad", "round", "scatter", "select", "size", "sort", "split", "split_with_sizes", "squeeze", "stack", "topk", "unbind", "unique_dim", "unsqueeze"]}, {"name": "torch.onnx.symbolic_opset12", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset12.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 19, "myfunction": ["_dropout_returns_masked_input_and_mask", "_einsum_helper", "argmax", "argmin", "binary_cross_entropy_with_logits", "celu", "cross_entropy_loss", "dropout", "einsum", "ge", "le", "native_dropout", "nll_loss", "nll_loss2d", "nll_loss_nd", "outer", "pow", "tensordot", "unfold"]}, {"name": "torch.onnx.symbolic_opset13", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset13.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 22, "myfunction": ["_apply_params", "_reduce_op_symbolic", "_reduce_with_dtype", "diagonal", "fake_quantize_per_channel_affine", "fake_quantize_per_tensor_affine", "frobenius_norm", "log_softmax", "nonzero_numpy", "quantized_conv2d", "quantized_conv2d_relu", "quantized_linear", "repeat_interleave", "softmax", "split", "split_with_sizes", "tensor_split", "unbind", "unsafe_chunk", "unsafe_split", "unsafe_split_with_sizes", "where"]}, {"name": "torch.onnx.symbolic_opset14", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset14.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["batch_norm", "hardswish", "quantized_hardswish", "reshape", "tril", "triu"]}, {"name": "torch.onnx.symbolic_opset15", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset15.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["aten__is_", "aten__isnot_", "prim_unchecked_cast"]}, {"name": "torch.onnx.symbolic_opset16", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset16.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["grid_sampler", "scatter_add"]}, {"name": "torch.onnx.symbolic_opset17", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset17.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["layer_norm"]}, {"name": "torch.onnx.symbolic_opset7", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset7.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["max", "min"]}, {"name": "torch.onnx.symbolic_opset8", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset8.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 24, "myfunction": ["__interpolate", "_apply_params", "_cast_to_type", "_comparison_operator", "_constant_fill", "_interpolate", "_try_cast_integer_to_float", "addmm", "bmm", "empty", "empty_like", "flatten", "full", "full_like", "gt", "lt", "matmul", "mm", "ones", "ones_like", "prelu", "repeat", "zeros", "zeros_like"]}, {"name": "torch.onnx.symbolic_opset9", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\symbolic_opset9.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 325, "myfunction": ["__and_", "__derive_index", "__getitem_", "__interpolate", "__is_", "__isnot_", "__lshift_", "__not_", "__or_", "__range_length", "__rshift_", "__xor_", "_adaptive_pool", "_all", "_any", "_apply_params", "_avg_pool", "_cast_func_template", "_convert_padding_node", "_convolution", "_dim_arange", "_div_rounding_mode", "_export", "_floor_divide", "_generic_rnn", "_gt_impl", "_interpolate", "_kl_div_log_target_impl", "_kl_div_non_log_target_impl", "_len", "_list", "_log_softmax", "_lstm_full", "_lstm_packed", "_lt_impl", "_max_pool", "_maybe_cast_reduce_op_input", "_one_hidden_rnn", "_op_with_optional_float_cast", "_pack_padded_sequence", "_pad_circular", "_pad_packed_sequence", "_prepare_onnx_paddings", "_reduce_op_symbolic", "_reduce_with_dtype", "_reshape_from_tensor", "_sample_dirichlet", "_shape_as_tensor", "_slice", "_standard_gamma", "_trunc_divide", "_unique", "_unique2", "_unsupported_dropout", "_var_mean", "_weight_norm", "abs", "acos", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "add", "addcmul", "addmm", "alias", "amax", "amin", "aminmax", "arange", "argmax", "argmin", "as_strided", "as_tensor", "asin", "atan", "symbolic_fn", "symbolic_fn", "symbolic_fn", "baddbmm", "batch_norm", "bernoulli", "bitwise_not", "bmm", "broadcast_tensors", "bucketize", "cat", "cdist", "ceil", "clamp", "clamp_max", "clamp_min", "clone", "constant_pad_nd", "contiguous", "conv1d", "conv2d", "conv3d", "conv_tbc", "conv_transpose1d", "conv_transpose2d", "conv_transpose3d", "convolution", "cos", "cosine_similarity", "cross", "cumsum", "detach", "dim", "div", "dot", "dropout", "elu", "embedding", "embedding_bag", "empty", "empty_like", "eq", "erf", "exp", "expand", "expand_as", "eye", "fill", "flatten", "floor", "floor_divide", "floordiv", "frobenius_norm", "full", "full_like", "gather", "ge", "gelu", "get_pool_ceil_padding", "glu", "group_norm", "symbolic", "gt", "hann_window", "hardshrink", "hardsigmoid", "hardswish", "hardtanh", "index", "index_add", "index_copy", "index_fill", "index_put", "index_select", "instance_norm", "is_floating_point", "is_pinned", "isnan", "item", "kl_div", "layer_norm", "le", "leaky_relu", "lerp", "lift", "linalg_cross", "linalg_matrix_norm", "linalg_norm", "linalg_vector_norm", "linear", "linspace", "log", "log10", "log1p", "log2", "log_sigmoid", "log_softmax", "logical_and", "logical_or", "logical_xor", "logsumexp", "lstm", "lstm_cell", "lt", "masked_fill", "matmul", "max", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "maximum", "meshgrid", "min", "minimum", "mish", "mm", "movedim", "mul", "multinomial", "mv", "narrow", "native_layer_norm", "ne", "neg", "new_empty", "new_full", "new_ones", "new_zeros", "nonzero", "nonzero_numpy", "noop_complex_operators", "norm", "numel", "numpy_T", "one_hot", "ones", "ones_like", "onnx_placeholder", "overload_by_arg_count", "pad", "pairwise_distance", "permute", "pixel_shuffle", "pixel_unshuffle", "pow", "prelu", "prim_constant", "prim_constant_chunk", "prim_constant_split", "prim_data", "prim_device", "prim_dtype", "prim_if", "prim_layout", "prim_list_construct", "prim_list_unpack", "prim_loop", "prim_max", "prim_min", "prim_shape", "prim_tolist", "prim_tuple_construct", "prim_type", "prim_unchecked_cast", "prim_uninitialized", "rand", "rand_like", "randn", "randn_like", "reciprocal", "reflection_pad", "relu", "relu6", "remainder", "repeat", "repeat_interleave", "replication_pad", "reshape", "reshape_as", "symbolic", "symbolic", "roll", "rrelu", "rsqrt", "rsub", "scalar_tensor", "scatter", "scatter_add", "select", "selu", "sigmoid", "sign", "silu", "sin", "size", "slice", "softmax", "softplus", "softshrink", "sort", "split", "split_with_sizes", "sqrt", "square", "squeeze", "stack", "std", "std_mean", "sub", "t", "take", "tan", "tanh", "tanhshrink", "tensor", "threshold", "to", "topk", "transpose", "true_divide", "type_as", "unbind", "unfold", "unsafe_chunk", "unsafe_split", "unsafe_split_with_sizes", "unsqueeze", "unsupported_complex_operators", "unused", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "symbolic_fn", "var", "var_mean", "view", "view_as", "where", "wrap_logical_op_with_cast_to", "wrap_logical_op_with_negation", "zeros", "zeros_like"]}, {"name": "torch.onnx.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\onnx\\utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 47, "myfunction": ["_add_block", "_add_input_to_block", "_add_output_to_block", "_apply_friendly_debug_names", "_check_flatten_did_not_remove", "_create_jit_graph", "_decide_add_node_names", "_decide_constant_folding", "_decide_input_format", "_decide_keep_init_as_input", "_export", "_get_aten_op_overload_name", "_get_example_outputs", "_get_module_attributes", "_get_named_param_dict", "_get_param_count_list", "_is_constant_tensor_list", "_model_to_graph", "_need_symbolic_context", "_optimize_graph", "_pre_trace_quant_model", "_reset_trace_module_map", "_resolve_args_by_export_type", "_run_symbolic_function", "_run_symbolic_method", "_set_input_and_output_names", "_setup_trace_module_map", "_should_aten_fallback", "_signature", "_split_tensor_list_constants", "_symbolic_context_handler", "_trace", "_trace_and_get_graph_from_model", "_validate_dynamic_axes", "_verify_custom_op_name", "disable_apex_o2_state_dict_hook", "export", "export_to_pretty_string", "exporter_context", "is_in_onnx_export", "register_custom_op_symbolic", "select_model_mode_for_export", "setup_onnx_logging", "unconvertible_ops", "unpack_quantized_tensor", "unregister_custom_op_symbolic", "warn_on_static_input_change"]}, {"name": "torch.ops", "file": "none", "ftype": "none", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.optim", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\optim\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.optim._functional", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\optim\\_functional.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["sparse_adam"]}, {"name": "torch.optim._multi_tensor", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\optim\\_multi_tensor\\__init__.py", "layer": 2, "hasclass": 11, "myclass": ["ASGD", "Adadelta", "Adagrad", "Adam", "AdamW", "Adamax", "NAdam", "RAdam", "RMSprop", "Rprop", "SGD"], "hasfunction": 1, "myfunction": ["partialclass"]}, {"name": "torch.optim.lr_scheduler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\optim\\lr_scheduler.py", "layer": 2, "hasclass": 16, "myclass": ["ChainedScheduler", "ConstantLR", "CosineAnnealingLR", "CosineAnnealingWarmRestarts", "CyclicLR", "ExponentialLR", "LambdaLR", "LinearLR", "MultiStepLR", "MultiplicativeLR", "OneCycleLR", "PolynomialLR", "ReduceLROnPlateau", "SequentialLR", "StepLR", "_LRScheduler"], "hasfunction": 0, "myfunction": []}, {"name": "torch.optim.swa_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\optim\\swa_utils.py", "layer": 2, "hasclass": 2, "myclass": ["AveragedModel", "SWALR"], "hasfunction": 1, "myfunction": ["update_bn"]}, {"name": "torch.overrides", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\overrides.py", "layer": 1, "hasclass": 4, "myclass": ["BaseTorchFunctionMode", "TorchFunctionMode", "_TorchFunctionStackMode", "enable_reentrant_dispatch"], "hasfunction": 14, "myfunction": ["_get_current_function_mode", "_get_current_function_mode_stack", "_get_overloaded_args", "_no_torch_function_mode", "_pop_mode", "_pop_mode_temporarily", "_push_mode", "get_buffer", "get_overridable_functions", "handle_torch_function", "is_tensor_like", "is_tensor_method_or_property", "resolve_name", "wrap_torch_function"]}, {"name": "torch.package", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.package._digraph", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_digraph.py", "layer": 2, "hasclass": 1, "myclass": ["DiGraph"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package._directory_reader", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_directory_reader.py", "layer": 2, "hasclass": 2, "myclass": ["DirectoryReader", "_HasStorage"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package._importlib", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_importlib.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_calc___package__", "_normalize_line_endings", "_normalize_path", "_resolve_name", "_sanity_check"]}, {"name": "torch.package._mangling", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_mangling.py", "layer": 2, "hasclass": 1, "myclass": ["PackageMangler"], "hasfunction": 3, "myfunction": ["demangle", "get_mangle_prefix", "is_mangled"]}, {"name": "torch.package._package_pickler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_package_pickler.py", "layer": 2, "hasclass": 1, "myclass": ["PackagePickler"], "hasfunction": 1, "myfunction": ["create_pickler"]}, {"name": "torch.package._package_unpickler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_package_unpickler.py", "layer": 2, "hasclass": 1, "myclass": ["PackageUnpickler"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package._stdlib", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\_stdlib.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["_get_stdlib_modules", "is_stdlib_module"]}, {"name": "torch.package.analyze", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\analyze\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.package.analyze.is_from_package", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\analyze\\is_from_package.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["is_from_package"]}, {"name": "torch.package.file_structure_representation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\file_structure_representation.py", "layer": 2, "hasclass": 1, "myclass": ["Directory"], "hasfunction": 1, "myfunction": ["_create_directory_from_file_list"]}, {"name": "torch.package.find_file_dependencies", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\find_file_dependencies.py", "layer": 2, "hasclass": 1, "myclass": ["_ExtractModuleReferences"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package.glob_group", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\glob_group.py", "layer": 2, "hasclass": 1, "myclass": ["GlobGroup"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package.importer", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\importer.py", "layer": 2, "hasclass": 5, "myclass": ["Importer", "ObjMismatchError", "ObjNotFoundError", "OrderedImporter", "_SysImporter"], "hasfunction": 0, "myfunction": []}, {"name": "torch.package.package_exporter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\package_exporter.py", "layer": 2, "hasclass": 6, "myclass": ["EmptyMatchError", "PackageExporter", "PackagingError", "PackagingErrorReason", "_ModuleProviderAction", "_PatternInfo"], "hasfunction": 1, "myfunction": ["_read_file"]}, {"name": "torch.package.package_importer", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\package\\package_importer.py", "layer": 2, "hasclass": 6, "myclass": ["PackageImporter", "_ExternNode", "_ModuleNode", "_PackageNode", "_PackageResourceReader", "_PathNode"], "hasfunction": 1, "myfunction": ["_patched_getfile"]}, {"name": "torch.profiler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\profiler\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.profiler.itt", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\profiler\\itt.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["is_available", "mark", "range", "range_pop", "range_push"]}, {"name": "torch.profiler.profiler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\profiler\\profiler.py", "layer": 2, "hasclass": 4, "myclass": ["ExecutionGraphObserver", "ProfilerAction", "_KinetoProfile", "profile"], "hasfunction": 4, "myfunction": ["_default_schedule_fn", "schedule", "supported_activities", "tensorboard_trace_handler"]}, {"name": "torch.quantization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["default_eval_fn"]}, {"name": "torch.quantization.fake_quantize", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\fake_quantize.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.fuser_method_mappings", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\fuser_method_mappings.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.observer", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\observer.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.qconfig", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\qconfig.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.quant_type", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\quant_type.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.quantization_mappings", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\quantization_mappings.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quantization.stubs", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quantization\\stubs.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.quasirandom", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\quasirandom.py", "layer": 1, "hasclass": 1, "myclass": ["SobolEngine"], "hasfunction": 0, "myfunction": []}, {"name": "torch.random", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\random.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 6, "myfunction": ["fork_rng", "get_rng_state", "initial_seed", "manual_seed", "seed", "set_rng_state"]}, {"name": "torch.return_types", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\return_types.py", "layer": 1, "hasclass": 84, "myclass": ["_attr", "_fake_quantize_per_tensor_affine_cachemask_tensor_qparams", "_fused_moving_avg_obs_fq_helper", "_linalg_det", "_linalg_det_out", "_linalg_eigh", "_linalg_eigh_out", "_linalg_slogdet", "_linalg_slogdet_out", "_linalg_solve_ex", "_linalg_solve_ex_out", "_linalg_svd", "_linalg_svd_out", "_lu_with_info", "_unpack_dual", "aminmax", "aminmax_out", "cummax", "cummax_out", "cummin", "cummin_out", "frexp", "frexp_out", "geqrf", "geqrf_out", "histogram", "histogram_out", "histogramdd", "kthvalue", "kthvalue_out", "linalg_cholesky_ex", "linalg_cholesky_ex_out", "linalg_eig", "linalg_eig_out", "linalg_eigh", "linalg_eigh_out", "linalg_inv_ex", "linalg_inv_ex_out", "linalg_ldl_factor", "linalg_ldl_factor_ex", "linalg_ldl_factor_ex_out", "linalg_ldl_factor_out", "linalg_lstsq", "linalg_lstsq_out", "linalg_lu", "linalg_lu_factor", "linalg_lu_factor_ex", "linalg_lu_factor_ex_out", "linalg_lu_factor_out", "linalg_lu_out", "linalg_qr", "linalg_qr_out", "linalg_slogdet", "linalg_slogdet_out", "linalg_solve_ex", "linalg_solve_ex_out", "linalg_svd", "linalg_svd_out", "lu_unpack", "lu_unpack_out", "max", "max_out", "median", "median_out", "min", "min_out", "mode", "mode_out", "nanmedian", "nanmedian_out", "qr", "qr_out", "slogdet", "slogdet_out", "sort", "sort_out", "svd", "svd_out", "symeig", "symeig_out", "topk", "topk_out", "triangular_solve", "triangular_solve_out"], "hasfunction": 1, "myfunction": ["pytree_register_structseq"]}, {"name": "torch.serialization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\serialization.py", "layer": 1, "hasclass": 9, "myclass": ["SourceChangeWarning", "StorageType", "_open_buffer_reader", "_open_buffer_writer", "_open_file", "_open_zipfile_reader", "_open_zipfile_writer_buffer", "_open_zipfile_writer_file", "_opener"], "hasfunction": 34, "myfunction": ["_check_dill_version", "_check_seekable", "_cpu_deserialize", "_cpu_tag", "_cuda_deserialize", "_cuda_tag", "_get_layout", "_get_restore_location", "_is_compressed_file", "_is_path", "_is_torchscript_zip", "_is_zipfile", "_legacy_load", "_legacy_save", "_load", "_maybe_decode_ascii", "_meta_deserialize", "_meta_tag", "_mps_deserialize", "_mps_tag", "_open_file_like", "_open_zipfile_writer", "_save", "_should_read_directly", "check_module_version_greater_or_equal", "default_restore_location", "load", "location_tag", "mkdtemp", "normalize_storage_type", "register_package", "save", "storage_to_tensor_type", "validate_cuda_device"]}, {"name": "torch.sparse", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\sparse\\__init__.py", "layer": 1, "hasclass": 9, "myclass": ["BFloat16Tensor", "ByteTensor", "CharTensor", "DoubleTensor", "FloatTensor", "HalfTensor", "IntTensor", "LongTensor", "ShortTensor"], "hasfunction": 1, "myfunction": ["sum"]}, {"name": "torch.special", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\special\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.storage", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\storage.py", "layer": 1, "hasclass": 5, "myclass": ["TypedStorage", "UntypedStorage", "_LegacyStorage", "_LegacyStorageMeta", "_StorageBase"], "hasfunction": 4, "myfunction": ["_get_dtype_from_pickle_storage_type", "_get_storage_from_sequence", "_isint", "_load_from_bytes"]}, {"name": "torch.testing", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\testing\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.testing._comparison", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\testing\\_comparison.py", "layer": 2, "hasclass": 8, "myclass": ["BooleanPair", "ErrorMeta", "NonePair", "NumberPair", "ObjectPair", "Pair", "TensorLikePair", "UnsupportedInputs"], "hasfunction": 8, "myfunction": ["_make_mismatch_msg", "assert_close", "assert_equal", "default_tolerances", "get_tolerances", "make_scalar_mismatch_msg", "make_tensor_mismatch_msg", "originate_pairs"]}, {"name": "torch.testing._creation", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\testing\\_creation.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["make_tensor"]}, {"name": "torch.testing._deprecated", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\testing\\_deprecated.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_get_default_rtol_and_atol", "assert_allclose", "<lambda>", "make_non_contiguous", "warn_deprecated"]}, {"name": "torch.testing._legacy", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\testing\\_legacy.py", "layer": 2, "hasclass": 1, "myclass": ["_dispatch_dtypes"], "hasfunction": 24, "myfunction": ["_validate_dtypes", "all_types", "all_types_and", "all_types_and_complex", "all_types_and_complex_and", "all_types_and_half", "complex_types", "complex_types_and", "double_types", "empty_types", "floating_and_complex_types", "floating_and_complex_types_and", "floating_types", "floating_types_and", "floating_types_and_half", "get_all_complex_dtypes", "get_all_device_types", "get_all_dtypes", "get_all_fp_dtypes", "get_all_int_dtypes", "get_all_math_dtypes", "get_all_qint_dtypes", "integral_types", "integral_types_and"]}, {"name": "torch.torch_version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\torch_version.py", "layer": 1, "hasclass": 2, "myclass": ["TorchVersion", "_LazyImport"], "hasfunction": 0, "myfunction": []}, {"name": "torch.types", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\types.py", "layer": 1, "hasclass": 2, "myclass": ["Storage", "SymInt"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\__init__.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["set_module"]}, {"name": "torch.utils._crash_handler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\_crash_handler.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["disable_minidumps", "enable_minidumps", "enable_minidumps_on_exceptions"]}, {"name": "torch.utils._mode_utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\_mode_utils.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["all_same_mode", "no_dispatch"]}, {"name": "torch.utils._python_dispatch", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\_python_dispatch.py", "layer": 2, "hasclass": 3, "myclass": ["BaseTorchDispatchMode", "TorchDispatchMode", "_TorchDispatchStackMode"], "hasfunction": 5, "myfunction": ["_get_current_dispatch_mode", "_get_current_dispatch_mode_stack", "_pop_mode", "_pop_mode_temporarily", "_push_mode"]}, {"name": "torch.utils._pytree", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\_pytree.py", "layer": 2, "hasclass": 3, "myclass": ["LeafSpec", "NodeDef", "TreeSpec"], "hasfunction": 24, "myfunction": ["_broadcast_to_and_flatten", "_dict_flatten", "_dict_unflatten", "_get_node_type", "_is_leaf", "_is_namedtuple_instance", "_list_flatten", "_list_unflatten", "_namedtuple_flatten", "_namedtuple_unflatten", "_odict_flatten", "_odict_unflatten", "_register_pytree_node", "_tuple_flatten", "_tuple_unflatten", "map_only", "tree_all", "tree_all_only", "tree_any", "tree_any_only", "tree_flatten", "tree_map", "tree_map_only", "tree_unflatten"]}, {"name": "torch.utils.backcompat", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\backcompat\\__init__.py", "layer": 2, "hasclass": 1, "myclass": ["Warning"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.cpp_backtrace", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\cpp_backtrace.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["get_cpp_backtrace"]}, {"name": "torch.utils.data", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\__init__.py", "layer": 2, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data._utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["_set_python_exit_flag"]}, {"name": "torch.utils.data._utils.collate", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\collate.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 9, "myfunction": ["collate", "collate_float_fn", "collate_int_fn", "collate_numpy_array_fn", "collate_numpy_scalar_fn", "collate_str_fn", "collate_tensor_fn", "default_collate", "default_convert"]}, {"name": "torch.utils.data._utils.fetch", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\fetch.py", "layer": 4, "hasclass": 3, "myclass": ["_BaseDatasetFetcher", "_IterableDatasetFetcher", "_MapDatasetFetcher"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data._utils.pin_memory", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\pin_memory.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 2, "myfunction": ["_pin_memory_loop", "pin_memory"]}, {"name": "torch.utils.data._utils.serialization", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\serialization.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data._utils.signal_handling", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\signal_handling.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["_set_SIGCHLD_handler"]}, {"name": "torch.utils.data._utils.worker", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\_utils\\worker.py", "layer": 4, "hasclass": 4, "myclass": ["ManagerWatchdog", "WorkerInfo", "_IterableDatasetStopIteration", "_ResumeIteration"], "hasfunction": 3, "myfunction": ["_generate_state", "_worker_loop", "get_worker_info"]}, {"name": "torch.utils.data.backward_compatibility", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\backward_compatibility.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 1, "myfunction": ["worker_init_fn"]}, {"name": "torch.utils.data.communication", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.communication.eventloop", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\eventloop.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 3, "myfunction": ["DataPipeToQueuesLoop", "SpawnProcessForDataPipeline", "SpawnThreadForDataPipeline"]}, {"name": "torch.utils.data.communication.iter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\iter.py", "layer": 4, "hasclass": 4, "myclass": ["InvalidStateResetRequired", "NonBlocking", "NotAvailable", "QueueWrapper"], "hasfunction": 3, "myfunction": ["DataPipeBehindQueues", "EnsureNonBlockingDataPipe", "default_not_available_hook"]}, {"name": "torch.utils.data.communication.map", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\map.py", "layer": 4, "hasclass": 3, "myclass": ["NonBlockingMap", "NotAvailable", "QueueWrapperForMap"], "hasfunction": 3, "myfunction": ["DataPipeBehindQueues", "EnsureNonBlockingMapDataPipe", "default_not_available_hook"]}, {"name": "torch.utils.data.communication.messages", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\messages.py", "layer": 4, "hasclass": 15, "myclass": ["DataLoaderQueueMessage", "GetItemRequest", "GetItemResponse", "GetNextRequest", "GetNextResponse", "InvalidStateResponse", "LenRequest", "LenResponse", "Request", "ResetIteratorRequest", "ResetIteratorResponse", "Response", "StopIterationResponse", "TerminateRequest", "TerminateResponse"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.communication.protocol", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\protocol.py", "layer": 4, "hasclass": 8, "myclass": ["EmptyQueue", "IterDataPipeQueueProtocolClient", "IterDataPipeQueueProtocolServer", "MapDataPipeQueueProtocolClient", "MapDataPipeQueueProtocolServer", "Protocol", "ProtocolClient", "ProtocolServer"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.communication.queue", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\communication\\queue.py", "layer": 4, "hasclass": 2, "myclass": ["LocalQueue", "ThreadingQueue"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.dataloader", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\dataloader.py", "layer": 3, "hasclass": 6, "myclass": ["DataLoader", "_BaseDataLoaderIter", "_DatasetKind", "_InfiniteConstantSampler", "_MultiProcessingDataLoaderIter", "_SingleProcessDataLoaderIter"], "hasfunction": 3, "myfunction": ["_get_distributed_settings", "_sharding_worker_init_fn", "_share_dist_seed"]}, {"name": "torch.utils.data.dataloader_experimental", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\dataloader_experimental.py", "layer": 3, "hasclass": 2, "myclass": ["DataLoader2", "_ThreadingDataLoader2"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\__init__.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes._decorator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\_decorator.py", "layer": 4, "hasclass": 4, "myclass": ["functional_datapipe", "guaranteed_datapipes_determinism", "non_deterministic", "runtime_validation_disabled"], "hasfunction": 2, "myfunction": ["argument_validation", "runtime_validation"]}, {"name": "torch.utils.data.datapipes._hook_iterator", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\_hook_iterator.py", "layer": 4, "hasclass": 1, "myclass": ["_SnapshotState"], "hasfunction": 7, "myfunction": ["_check_iterator_valid", "_gen_invalid_iterdatapipe_msg", "_generate_input_args_string", "_generate_iterdatapipe_msg", "_set_datapipe_valid_iterator_id", "_simplify_obj_name", "hook_iterator"]}, {"name": "torch.utils.data.datapipes._typing", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\_typing.py", "layer": 4, "hasclass": 6, "myclass": ["Boolean", "GenericMeta", "Integer", "_DataPipeMeta", "_DataPipeType", "_IterDataPipeMeta"], "hasfunction": 6, "myfunction": ["_decompose_type", "_dp_init_subclass", "_issubtype_with_constraints", "issubinstance", "issubtype", "reinforce_type"]}, {"name": "torch.utils.data.datapipes.dataframe", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.dataframe.dataframe_wrapper", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframe_wrapper.py", "layer": 5, "hasclass": 2, "myclass": ["PandasWrapper", "default_wrapper"], "hasfunction": 12, "myfunction": ["_try_import_pandas", "_with_pandas", "concat", "create_dataframe", "get_columns", "get_df_wrapper", "get_item", "get_len", "is_column", "is_dataframe", "iterate", "set_df_wrapper"]}, {"name": "torch.utils.data.datapipes.dataframe.dataframes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\dataframes.py", "layer": 5, "hasclass": 19, "myclass": ["Capture", "CaptureA", "CaptureAdd", "CaptureCall", "CaptureControl", "CaptureDataFrame", "CaptureDataFrameWithDataPipeOps", "CaptureF", "CaptureGetAttr", "CaptureGetItem", "CaptureInitial", "CaptureLikeMock", "CaptureMul", "CaptureSetItem", "CaptureSub", "CaptureVariable", "CaptureVariableAssign", "DataFrameTracedOps", "DataFrameTracer"], "hasfunction": 2, "myfunction": ["disable_capture", "get_val"]}, {"name": "torch.utils.data.datapipes.dataframe.datapipes", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\datapipes.py", "layer": 5, "hasclass": 6, "myclass": ["ConcatDataFramesPipe", "DataFramesAsTuplesPipe", "ExampleAggregateAsDataFrames", "FilterDataFramesPipe", "PerRowDataFramesPipe", "ShuffleDataFramesPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.dataframe.structures", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\dataframe\\structures.py", "layer": 5, "hasclass": 1, "myclass": ["DataChunkDF"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.datapipe", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\datapipe.py", "layer": 4, "hasclass": 7, "myclass": ["DFIterDataPipe", "DataChunk", "IterDataPipe", "MapDataPipe", "_DataPipeSerializationWrapper", "_IterDataPipeSerializationWrapper", "_MapDataPipeSerializationWrapper"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.callable", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\callable.py", "layer": 5, "hasclass": 2, "myclass": ["CollatorIterDataPipe", "MapperIterDataPipe"], "hasfunction": 1, "myfunction": ["_collate_helper"]}, {"name": "torch.utils.data.datapipes.iter.combinatorics", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\combinatorics.py", "layer": 5, "hasclass": 2, "myclass": ["SamplerIterDataPipe", "ShufflerIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.combining", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\combining.py", "layer": 5, "hasclass": 8, "myclass": ["ConcaterIterDataPipe", "DemultiplexerIterDataPipe", "ForkerIterDataPipe", "MultiplexerIterDataPipe", "ZipperIterDataPipe", "_ChildDataPipe", "_DemultiplexerIterDataPipe", "_ForkerIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.filelister", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\filelister.py", "layer": 5, "hasclass": 1, "myclass": ["FileListerIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.fileopener", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\fileopener.py", "layer": 5, "hasclass": 2, "myclass": ["FileLoaderIterDataPipe", "FileOpenerIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.grouping", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\grouping.py", "layer": 5, "hasclass": 4, "myclass": ["BatcherIterDataPipe", "GrouperIterDataPipe", "ShardingFilterIterDataPipe", "UnBatcherIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.routeddecoder", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\routeddecoder.py", "layer": 5, "hasclass": 1, "myclass": ["RoutedDecoderIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.selecting", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\selecting.py", "layer": 5, "hasclass": 1, "myclass": ["FilterIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.streamreader", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\streamreader.py", "layer": 5, "hasclass": 1, "myclass": ["StreamReaderIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.iter.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\iter\\utils.py", "layer": 5, "hasclass": 1, "myclass": ["IterableWrapperIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.map", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.map.callable", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\callable.py", "layer": 5, "hasclass": 1, "myclass": ["MapperMapDataPipe"], "hasfunction": 1, "myfunction": ["default_fn"]}, {"name": "torch.utils.data.datapipes.map.combinatorics", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\combinatorics.py", "layer": 5, "hasclass": 1, "myclass": ["ShufflerIterDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.map.combining", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\combining.py", "layer": 5, "hasclass": 2, "myclass": ["ConcaterMapDataPipe", "ZipperMapDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.map.grouping", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\grouping.py", "layer": 5, "hasclass": 1, "myclass": ["BatcherMapDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.map.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\map\\utils.py", "layer": 5, "hasclass": 1, "myclass": ["SequenceWrapperMapDataPipe"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.utils", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\utils\\__init__.py", "layer": 4, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.datapipes.utils.common", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\utils\\common.py", "layer": 5, "hasclass": 1, "myclass": ["StreamWrapper"], "hasfunction": 8, "myfunction": ["_check_unpickable_fn", "_deprecation_warning", "_is_local_fn", "get_file_binaries_from_pathnames", "get_file_pathnames_from_root", "match_masks", "validate_input_col", "validate_pathname_binary_tuple"]}, {"name": "torch.utils.data.datapipes.utils.decoder", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\datapipes\\utils\\decoder.py", "layer": 5, "hasclass": 3, "myclass": ["Decoder", "ImageHandler", "MatHandler"], "hasfunction": 7, "myfunction": ["audiohandler", "basichandlers", "extension_extract_fn", "handle_extension", "imagehandler", "mathandler", "videohandler"]}, {"name": "torch.utils.data.dataset", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\dataset.py", "layer": 3, "hasclass": 6, "myclass": ["ChainDataset", "ConcatDataset", "Dataset", "IterableDataset", "Subset", "TensorDataset"], "hasfunction": 1, "myfunction": ["random_split"]}, {"name": "torch.utils.data.distributed", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\distributed.py", "layer": 3, "hasclass": 1, "myclass": ["DistributedSampler"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.data.graph", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\graph.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 5, "myfunction": ["_list_connected_datapipes", "_stub_unpickler", "_traverse_helper", "traverse", "traverse_dps"]}, {"name": "torch.utils.data.graph_settings", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\graph_settings.py", "layer": 3, "hasclass": 0, "myclass": [], "hasfunction": 8, "myfunction": ["_get_all_graph_pipes_helper", "_is_random_datapipe", "_is_shuffle_datapipe", "apply_random_seed", "apply_sharding", "apply_shuffle_seed", "apply_shuffle_settings", "get_all_graph_pipes"]}, {"name": "torch.utils.data.sampler", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\data\\sampler.py", "layer": 3, "hasclass": 6, "myclass": ["BatchSampler", "RandomSampler", "Sampler", "SequentialSampler", "SubsetRandomSampler", "WeightedRandomSampler"], "hasfunction": 0, "myfunction": []}, {"name": "torch.utils.dlpack", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\dlpack.py", "layer": 2, "hasclass": 1, "myclass": ["DLDeviceType"], "hasfunction": 1, "myfunction": ["from_dlpack"]}, {"name": "torch.utils.hooks", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\hooks.py", "layer": 2, "hasclass": 2, "myclass": ["BackwardHook", "RemovableHandle"], "hasfunction": 2, "myfunction": ["unserializable_hook", "warn_if_has_hooks"]}, {"name": "torch.utils.throughput_benchmark", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\utils\\throughput_benchmark.py", "layer": 2, "hasclass": 2, "myclass": ["ExecutionStats", "ThroughputBenchmark"], "hasfunction": 1, "myfunction": ["format_time"]}, {"name": "torch.version", "file": "D:\\ProgramFiles\\Anaconda3\\envs\\newtorch\\lib\\site-packages\\torch\\version.py", "layer": 1, "hasclass": 0, "myclass": [], "hasfunction": 0, "myfunction": []}], "links": [{"source": 0, "target": 1}, {"source": 0, "target": 24}, {"source": 0, "target": 25}, {"source": 0, "target": 26}, {"source": 0, "target": 27}, {"source": 0, "target": 28}, {"source": 0, "target": 30}, {"source": 0, "target": 31}, {"source": 0, "target": 32}, {"source": 0, "target": 33}, {"source": 0, "target": 34}, {"source": 0, "target": 35}, {"source": 0, "target": 36}, {"source": 0, "target": 37}, {"source": 0, "target": 39}, {"source": 0, "target": 41}, {"source": 0, "target": 47}, {"source": 0, "target": 48}, {"source": 0, "target": 49}, {"source": 0, "target": 53}, {"source": 0, "target": 54}, {"source": 0, "target": 55}, {"source": 0, "target": 56}, {"source": 0, "target": 57}, {"source": 0, "target": 58}, {"source": 0, "target": 59}, {"source": 0, "target": 61}, {"source": 0, "target": 119}, {"source": 0, "target": 128}, {"source": 0, "target": 137}, {"source": 0, "target": 23}, {"source": 0, "target": 138}, {"source": 0, "target": 141}, {"source": 0, "target": 157}, {"source": 0, "target": 166}, {"source": 0, "target": 212}, {"source": 0, "target": 213}, {"source": 0, "target": 214}, {"source": 0, "target": 215}, {"source": 0, "target": 228}, {"source": 0, "target": 229}, {"source": 0, "target": 246}, {"source": 0, "target": 247}, {"source": 0, "target": 248}, {"source": 0, "target": 258}, {"source": 0, "target": 261}, {"source": 0, "target": 262}, {"source": 0, "target": 341}, {"source": 0, "target": 429}, {"source": 0, "target": 430}, {"source": 0, "target": 435}, {"source": 0, "target": 436}, {"source": 0, "target": 452}, {"source": 0, "target": 455}, {"source": 0, "target": 463}, {"source": 0, "target": 464}, {"source": 0, "target": 465}, {"source": 0, "target": 466}, {"source": 0, "target": 467}, {"source": 0, "target": 468}, {"source": 0, "target": 469}, {"source": 0, "target": 470}, {"source": 0, "target": 0}, {"source": 0, "target": 475}, {"source": 0, "target": 476}, {"source": 0, "target": 477}, {"source": 0, "target": 540}, {"source": 1, "target": 2}, {"source": 1, "target": 3}, {"source": 1, "target": 4}, {"source": 1, "target": 5}, {"source": 1, "target": 6}, {"source": 1, "target": 7}, {"source": 1, "target": 8}, {"source": 1, "target": 9}, {"source": 1, "target": 10}, {"source": 1, "target": 11}, {"source": 1, "target": 12}, {"source": 1, "target": 13}, {"source": 1, "target": 14}, {"source": 1, "target": 15}, {"source": 1, "target": 16}, {"source": 1, "target": 17}, {"source": 1, "target": 18}, {"source": 1, "target": 19}, {"source": 1, "target": 20}, {"source": 1, "target": 21}, {"source": 1, "target": 22}, {"source": 1, "target": 23}, {"source": 25, "target": 0}, {"source": 27, "target": 137}, {"source": 27, "target": 0}, {"source": 28, "target": 29}, {"source": 28, "target": 0}, {"source": 29, "target": 265}, {"source": 29, "target": 0}, {"source": 29, "target": 39}, {"source": 30, "target": 440}, {"source": 30, "target": 0}, {"source": 31, "target": 0}, {"source": 32, "target": 31}, {"source": 32, "target": 0}, {"source": 33, "target": 31}, {"source": 33, "target": 0}, {"source": 34, "target": 0}, {"source": 34, "target": 39}, {"source": 36, "target": 56}, {"source": 36, "target": 429}, {"source": 36, "target": 0}, {"source": 37, "target": 38}, {"source": 37, "target": 0}, {"source": 37, "target": 39}, {"source": 38, "target": 0}, {"source": 39, "target": 0}, {"source": 39, "target": 40}, {"source": 40, "target": 0}, {"source": 40, "target": 39}, {"source": 41, "target": 42}, {"source": 41, "target": 43}, {"source": 41, "target": 44}, {"source": 41, "target": 37}, {"source": 41, "target": 46}, {"source": 41, "target": 0}, {"source": 41, "target": 39}, {"source": 42, "target": 37}, {"source": 42, "target": 0}, {"source": 42, "target": 39}, {"source": 43, "target": 43}, {"source": 43, "target": 37}, {"source": 43, "target": 41}, {"source": 43, "target": 0}, {"source": 43, "target": 39}, {"source": 44, "target": 45}, {"source": 45, "target": 37}, {"source": 45, "target": 41}, {"source": 45, "target": 0}, {"source": 45, "target": 39}, {"source": 46, "target": 37}, {"source": 46, "target": 41}, {"source": 46, "target": 0}, {"source": 46, "target": 39}, {"source": 49, "target": 50}, {"source": 49, "target": 51}, {"source": 49, "target": 52}, {"source": 49, "target": 0}, {"source": 50, "target": 481}, {"source": 50, "target": 0}, {"source": 51, "target": 481}, {"source": 51, "target": 0}, {"source": 52, "target": 0}, {"source": 52, "target": 39}, {"source": 53, "target": 1}, {"source": 53, "target": 538}, {"source": 53, "target": 0}, {"source": 54, "target": 0}, {"source": 55, "target": 0}, {"source": 57, "target": 0}, {"source": 58, "target": 0}, {"source": 59, "target": 60}, {"source": 60, "target": 0}, {"source": 61, "target": 62}, {"source": 61, "target": 109}, {"source": 62, "target": 63}, {"source": 62, "target": 66}, {"source": 62, "target": 74}, {"source": 62, "target": 78}, {"source": 62, "target": 103}, {"source": 63, "target": 64}, {"source": 64, "target": 65}, {"source": 65, "target": 0}, {"source": 66, "target": 67}, {"source": 66, "target": 70}, {"source": 67, "target": 68}, {"source": 68, "target": 69}, {"source": 69, "target": 0}, {"source": 70, "target": 71}, {"source": 70, "target": 72}, {"source": 70, "target": 73}, {"source": 71, "target": 262}, {"source": 71, "target": 0}, {"source": 72, "target": 265}, {"source": 72, "target": 262}, {"source": 72, "target": 0}, {"source": 73, "target": 265}, {"source": 73, "target": 262}, {"source": 73, "target": 0}, {"source": 74, "target": 75}, {"source": 75, "target": 76}, {"source": 75, "target": 77}, {"source": 76, "target": 262}, {"source": 76, "target": 265}, {"source": 76, "target": 0}, {"source": 77, "target": 0}, {"source": 78, "target": 79}, {"source": 78, "target": 84}, {"source": 78, "target": 85}, {"source": 78, "target": 96}, {"source": 79, "target": 80}, {"source": 80, "target": 81}, {"source": 80, "target": 82}, {"source": 80, "target": 83}, {"source": 81, "target": 265}, {"source": 81, "target": 262}, {"source": 81, "target": 78}, {"source": 81, "target": 429}, {"source": 81, "target": 0}, {"source": 82, "target": 63}, {"source": 82, "target": 78}, {"source": 82, "target": 0}, {"source": 83, "target": 262}, {"source": 83, "target": 0}, {"source": 84, "target": 0}, {"source": 85, "target": 86}, {"source": 85, "target": 87}, {"source": 85, "target": 88}, {"source": 85, "target": 89}, {"source": 85, "target": 90}, {"source": 85, "target": 91}, {"source": 85, "target": 92}, {"source": 85, "target": 93}, {"source": 85, "target": 94}, {"source": 85, "target": 0}, {"source": 85, "target": 95}, {"source": 86, "target": 0}, {"source": 87, "target": 268}, {"source": 87, "target": 0}, {"source": 88, "target": 265}, {"source": 88, "target": 262}, {"source": 88, "target": 268}, {"source": 88, "target": 271}, {"source": 88, "target": 429}, {"source": 88, "target": 0}, {"source": 89, "target": 0}, {"source": 90, "target": 262}, {"source": 90, "target": 0}, {"source": 91, "target": 429}, {"source": 91, "target": 0}, {"source": 92, "target": 262}, {"source": 92, "target": 268}, {"source": 92, "target": 271}, {"source": 92, "target": 0}, {"source": 93, "target": 0}, {"source": 94, "target": 0}, {"source": 95, "target": 0}, {"source": 96, "target": 97}, {"source": 97, "target": 98}, {"source": 97, "target": 99}, {"source": 97, "target": 100}, {"source": 97, "target": 101}, {"source": 97, "target": 102}, {"source": 98, "target": 265}, {"source": 98, "target": 262}, {"source": 98, "target": 0}, {"source": 99, "target": 265}, {"source": 99, "target": 262}, {"source": 99, "target": 0}, {"source": 100, "target": 24}, {"source": 100, "target": 262}, {"source": 100, "target": 0}, {"source": 101, "target": 265}, {"source": 101, "target": 262}, {"source": 102, "target": 0}, {"source": 103, "target": 104}, {"source": 104, "target": 105}, {"source": 104, "target": 107}, {"source": 104, "target": 108}, {"source": 105, "target": 106}, {"source": 106, "target": 107}, {"source": 106, "target": 268}, {"source": 106, "target": 0}, {"source": 107, "target": 0}, {"source": 109, "target": 265}, {"source": 109, "target": 62}, {"source": 109, "target": 110}, {"source": 109, "target": 111}, {"source": 109, "target": 262}, {"source": 109, "target": 268}, {"source": 109, "target": 276}, {"source": 109, "target": 271}, {"source": 109, "target": 277}, {"source": 109, "target": 78}, {"source": 109, "target": 66}, {"source": 109, "target": 67}, {"source": 109, "target": 79}, {"source": 109, "target": 96}, {"source": 109, "target": 112}, {"source": 109, "target": 113}, {"source": 109, "target": 114}, {"source": 109, "target": 115}, {"source": 109, "target": 116}, {"source": 109, "target": 117}, {"source": 109, "target": 0}, {"source": 109, "target": 118}, {"source": 110, "target": 0}, {"source": 111, "target": 262}, {"source": 111, "target": 268}, {"source": 112, "target": 262}, {"source": 112, "target": 0}, {"source": 113, "target": 262}, {"source": 113, "target": 0}, {"source": 114, "target": 0}, {"source": 116, "target": 265}, {"source": 116, "target": 62}, {"source": 116, "target": 262}, {"source": 116, "target": 268}, {"source": 116, "target": 276}, {"source": 116, "target": 271}, {"source": 116, "target": 277}, {"source": 116, "target": 78}, {"source": 116, "target": 66}, {"source": 116, "target": 67}, {"source": 116, "target": 79}, {"source": 116, "target": 96}, {"source": 116, "target": 0}, {"source": 117, "target": 262}, {"source": 118, "target": 0}, {"source": 119, "target": 57}, {"source": 119, "target": 120}, {"source": 119, "target": 121}, {"source": 119, "target": 122}, {"source": 119, "target": 123}, {"source": 119, "target": 124}, {"source": 119, "target": 125}, {"source": 119, "target": 126}, {"source": 119, "target": 127}, {"source": 119, "target": 0}, {"source": 120, "target": 0}, {"source": 121, "target": 0}, {"source": 122, "target": 1}, {"source": 122, "target": 5}, {"source": 122, "target": 538}, {"source": 122, "target": 0}, {"source": 123, "target": 121}, {"source": 123, "target": 0}, {"source": 124, "target": 0}, {"source": 125, "target": 0}, {"source": 126, "target": 0}, {"source": 127, "target": 0}, {"source": 128, "target": 129}, {"source": 128, "target": 130}, {"source": 128, "target": 131}, {"source": 128, "target": 132}, {"source": 128, "target": 133}, {"source": 128, "target": 134}, {"source": 128, "target": 135}, {"source": 128, "target": 136}, {"source": 129, "target": 0}, {"source": 130, "target": 130}, {"source": 131, "target": 0}, {"source": 132, "target": 132}, {"source": 133, "target": 0}, {"source": 134, "target": 0}, {"source": 135, "target": 135}, {"source": 136, "target": 136}, {"source": 138, "target": 139}, {"source": 139, "target": 140}, {"source": 140, "target": 0}, {"source": 141, "target": 142}, {"source": 141, "target": 143}, {"source": 141, "target": 144}, {"source": 141, "target": 148}, {"source": 141, "target": 149}, {"source": 141, "target": 150}, {"source": 141, "target": 151}, {"source": 141, "target": 152}, {"source": 141, "target": 153}, {"source": 141, "target": 154}, {"source": 141, "target": 155}, {"source": 141, "target": 156}, {"source": 141, "target": 0}, {"source": 143, "target": 0}, {"source": 144, "target": 145}, {"source": 144, "target": 146}, {"source": 144, "target": 147}, {"source": 145, "target": 0}, {"source": 146, "target": 0}, {"source": 147, "target": 0}, {"source": 148, "target": 0}, {"source": 149, "target": 0}, {"source": 150, "target": 1}, {"source": 150, "target": 0}, {"source": 151, "target": 0}, {"source": 154, "target": 0}, {"source": 156, "target": 0}, {"source": 157, "target": 158}, {"source": 157, "target": 160}, {"source": 157, "target": 161}, {"source": 157, "target": 162}, {"source": 157, "target": 163}, {"source": 157, "target": 164}, {"source": 157, "target": 0}, {"source": 157, "target": 165}, {"source": 158, "target": 159}, {"source": 159, "target": 157}, {"source": 159, "target": 0}, {"source": 160, "target": 0}, {"source": 162, "target": 0}, {"source": 163, "target": 0}, {"source": 164, "target": 157}, {"source": 164, "target": 0}, {"source": 165, "target": 157}, {"source": 165, "target": 0}, {"source": 166, "target": 167}, {"source": 166, "target": 168}, {"source": 166, "target": 169}, {"source": 166, "target": 170}, {"source": 166, "target": 171}, {"source": 166, "target": 172}, {"source": 166, "target": 173}, {"source": 166, "target": 174}, {"source": 166, "target": 175}, {"source": 166, "target": 176}, {"source": 166, "target": 177}, {"source": 166, "target": 178}, {"source": 166, "target": 179}, {"source": 166, "target": 180}, {"source": 166, "target": 181}, {"source": 166, "target": 182}, {"source": 166, "target": 183}, {"source": 166, "target": 184}, {"source": 166, "target": 185}, {"source": 166, "target": 186}, {"source": 166, "target": 187}, {"source": 166, "target": 188}, {"source": 166, "target": 189}, {"source": 166, "target": 190}, {"source": 166, "target": 191}, {"source": 166, "target": 192}, {"source": 166, "target": 193}, {"source": 166, "target": 194}, {"source": 166, "target": 195}, {"source": 166, "target": 196}, {"source": 166, "target": 197}, {"source": 166, "target": 198}, {"source": 166, "target": 199}, {"source": 166, "target": 200}, {"source": 166, "target": 201}, {"source": 166, "target": 202}, {"source": 166, "target": 203}, {"source": 166, "target": 204}, {"source": 166, "target": 205}, {"source": 166, "target": 206}, {"source": 166, "target": 207}, {"source": 166, "target": 208}, {"source": 166, "target": 209}, {"source": 166, "target": 210}, {"source": 166, "target": 211}, {"source": 167, "target": 174}, {"source": 167, "target": 0}, {"source": 168, "target": 174}, {"source": 168, "target": 0}, {"source": 169, "target": 174}, {"source": 169, "target": 0}, {"source": 170, "target": 174}, {"source": 170, "target": 0}, {"source": 171, "target": 174}, {"source": 171, "target": 0}, {"source": 172, "target": 174}, {"source": 173, "target": 174}, {"source": 173, "target": 206}, {"source": 174, "target": 0}, {"source": 175, "target": 174}, {"source": 175, "target": 0}, {"source": 176, "target": 174}, {"source": 176, "target": 0}, {"source": 177, "target": 174}, {"source": 177, "target": 0}, {"source": 178, "target": 0}, {"source": 179, "target": 174}, {"source": 179, "target": 0}, {"source": 180, "target": 174}, {"source": 180, "target": 0}, {"source": 181, "target": 174}, {"source": 181, "target": 0}, {"source": 182, "target": 174}, {"source": 182, "target": 0}, {"source": 183, "target": 174}, {"source": 183, "target": 0}, {"source": 184, "target": 174}, {"source": 184, "target": 0}, {"source": 185, "target": 174}, {"source": 185, "target": 0}, {"source": 186, "target": 174}, {"source": 186, "target": 0}, {"source": 187, "target": 0}, {"source": 188, "target": 174}, {"source": 188, "target": 0}, {"source": 189, "target": 174}, {"source": 189, "target": 0}, {"source": 190, "target": 174}, {"source": 190, "target": 0}, {"source": 191, "target": 174}, {"source": 192, "target": 174}, {"source": 193, "target": 174}, {"source": 193, "target": 0}, {"source": 194, "target": 174}, {"source": 194, "target": 0}, {"source": 195, "target": 174}, {"source": 195, "target": 0}, {"source": 196, "target": 174}, {"source": 196, "target": 0}, {"source": 197, "target": 265}, {"source": 197, "target": 174}, {"source": 197, "target": 0}, {"source": 198, "target": 174}, {"source": 198, "target": 0}, {"source": 199, "target": 174}, {"source": 199, "target": 0}, {"source": 200, "target": 174}, {"source": 201, "target": 174}, {"source": 201, "target": 0}, {"source": 202, "target": 174}, {"source": 202, "target": 0}, {"source": 203, "target": 174}, {"source": 203, "target": 0}, {"source": 204, "target": 174}, {"source": 204, "target": 0}, {"source": 205, "target": 174}, {"source": 205, "target": 0}, {"source": 206, "target": 265}, {"source": 206, "target": 174}, {"source": 206, "target": 0}, {"source": 207, "target": 174}, {"source": 207, "target": 0}, {"source": 208, "target": 265}, {"source": 208, "target": 0}, {"source": 209, "target": 174}, {"source": 209, "target": 0}, {"source": 210, "target": 174}, {"source": 210, "target": 0}, {"source": 211, "target": 174}, {"source": 211, "target": 0}, {"source": 212, "target": 4}, {"source": 212, "target": 0}, {"source": 213, "target": 265}, {"source": 213, "target": 24}, {"source": 213, "target": 135}, {"source": 213, "target": 0}, {"source": 214, "target": 0}, {"source": 215, "target": 216}, {"source": 215, "target": 217}, {"source": 215, "target": 218}, {"source": 215, "target": 219}, {"source": 215, "target": 220}, {"source": 215, "target": 221}, {"source": 215, "target": 222}, {"source": 215, "target": 223}, {"source": 215, "target": 224}, {"source": 215, "target": 225}, {"source": 215, "target": 226}, {"source": 215, "target": 227}, {"source": 218, "target": 481}, {"source": 218, "target": 0}, {"source": 219, "target": 217}, {"source": 219, "target": 481}, {"source": 219, "target": 0}, {"source": 220, "target": 262}, {"source": 220, "target": 0}, {"source": 222, "target": 227}, {"source": 223, "target": 0}, {"source": 224, "target": 0}, {"source": 225, "target": 227}, {"source": 225, "target": 0}, {"source": 226, "target": 0}, {"source": 228, "target": 0}, {"source": 229, "target": 230}, {"source": 229, "target": 231}, {"source": 229, "target": 232}, {"source": 229, "target": 233}, {"source": 229, "target": 234}, {"source": 229, "target": 235}, {"source": 229, "target": 236}, {"source": 229, "target": 237}, {"source": 229, "target": 238}, {"source": 229, "target": 239}, {"source": 229, "target": 240}, {"source": 229, "target": 241}, {"source": 229, "target": 242}, {"source": 229, "target": 243}, {"source": 229, "target": 244}, {"source": 229, "target": 245}, {"source": 229, "target": 0}, {"source": 230, "target": 0}, {"source": 231, "target": 130}, {"source": 231, "target": 0}, {"source": 232, "target": 0}, {"source": 234, "target": 0}, {"source": 235, "target": 0}, {"source": 236, "target": 0}, {"source": 237, "target": 0}, {"source": 238, "target": 0}, {"source": 239, "target": 30}, {"source": 239, "target": 0}, {"source": 240, "target": 30}, {"source": 240, "target": 137}, {"source": 240, "target": 0}, {"source": 241, "target": 0}, {"source": 242, "target": 0}, {"source": 243, "target": 122}, {"source": 243, "target": 0}, {"source": 244, "target": 0}, {"source": 245, "target": 30}, {"source": 245, "target": 0}, {"source": 246, "target": 0}, {"source": 247, "target": 12}, {"source": 247, "target": 0}, {"source": 248, "target": 249}, {"source": 248, "target": 250}, {"source": 248, "target": 251}, {"source": 250, "target": 249}, {"source": 250, "target": 0}, {"source": 251, "target": 252}, {"source": 251, "target": 253}, {"source": 251, "target": 254}, {"source": 251, "target": 255}, {"source": 251, "target": 256}, {"source": 251, "target": 257}, {"source": 252, "target": 0}, {"source": 253, "target": 0}, {"source": 255, "target": 0}, {"source": 256, "target": 0}, {"source": 257, "target": 0}, {"source": 258, "target": 259}, {"source": 258, "target": 260}, {"source": 258, "target": 0}, {"source": 260, "target": 0}, {"source": 261, "target": 14}, {"source": 261, "target": 0}, {"source": 262, "target": 263}, {"source": 262, "target": 264}, {"source": 262, "target": 265}, {"source": 262, "target": 266}, {"source": 262, "target": 267}, {"source": 262, "target": 268}, {"source": 262, "target": 284}, {"source": 262, "target": 310}, {"source": 262, "target": 316}, {"source": 262, "target": 317}, {"source": 262, "target": 325}, {"source": 262, "target": 327}, {"source": 262, "target": 331}, {"source": 265, "target": 263}, {"source": 265, "target": 24}, {"source": 265, "target": 266}, {"source": 265, "target": 0}, {"source": 265, "target": 309}, {"source": 266, "target": 0}, {"source": 267, "target": 0}, {"source": 268, "target": 269}, {"source": 268, "target": 271}, {"source": 268, "target": 276}, {"source": 269, "target": 270}, {"source": 271, "target": 272}, {"source": 272, "target": 273}, {"source": 272, "target": 274}, {"source": 272, "target": 275}, {"source": 273, "target": 265}, {"source": 273, "target": 267}, {"source": 273, "target": 262}, {"source": 273, "target": 63}, {"source": 273, "target": 66}, {"source": 273, "target": 0}, {"source": 274, "target": 265}, {"source": 274, "target": 267}, {"source": 274, "target": 262}, {"source": 274, "target": 63}, {"source": 274, "target": 0}, {"source": 275, "target": 265}, {"source": 275, "target": 63}, {"source": 275, "target": 66}, {"source": 275, "target": 0}, {"source": 276, "target": 277}, {"source": 276, "target": 280}, {"source": 277, "target": 278}, {"source": 278, "target": 279}, {"source": 278, "target": 0}, {"source": 279, "target": 63}, {"source": 279, "target": 79}, {"source": 279, "target": 0}, {"source": 280, "target": 281}, {"source": 280, "target": 282}, {"source": 280, "target": 283}, {"source": 281, "target": 78}, {"source": 281, "target": 0}, {"source": 282, "target": 265}, {"source": 282, "target": 78}, {"source": 282, "target": 0}, {"source": 283, "target": 63}, {"source": 283, "target": 78}, {"source": 283, "target": 0}, {"source": 284, "target": 285}, {"source": 284, "target": 286}, {"source": 284, "target": 287}, {"source": 284, "target": 288}, {"source": 284, "target": 289}, {"source": 284, "target": 290}, {"source": 284, "target": 291}, {"source": 284, "target": 292}, {"source": 284, "target": 293}, {"source": 284, "target": 294}, {"source": 284, "target": 295}, {"source": 284, "target": 296}, {"source": 284, "target": 297}, {"source": 284, "target": 298}, {"source": 284, "target": 299}, {"source": 284, "target": 300}, {"source": 284, "target": 301}, {"source": 284, "target": 302}, {"source": 284, "target": 303}, {"source": 284, "target": 304}, {"source": 284, "target": 305}, {"source": 284, "target": 306}, {"source": 284, "target": 307}, {"source": 284, "target": 308}, {"source": 284, "target": 309}, {"source": 285, "target": 157}, {"source": 285, "target": 0}, {"source": 286, "target": 265}, {"source": 286, "target": 0}, {"source": 287, "target": 0}, {"source": 288, "target": 265}, {"source": 288, "target": 267}, {"source": 288, "target": 0}, {"source": 289, "target": 265}, {"source": 290, "target": 0}, {"source": 291, "target": 265}, {"source": 291, "target": 267}, {"source": 291, "target": 0}, {"source": 292, "target": 265}, {"source": 293, "target": 265}, {"source": 295, "target": 265}, {"source": 296, "target": 265}, {"source": 297, "target": 0}, {"source": 298, "target": 265}, {"source": 298, "target": 267}, {"source": 298, "target": 0}, {"source": 299, "target": 265}, {"source": 299, "target": 263}, {"source": 300, "target": 538}, {"source": 300, "target": 0}, {"source": 301, "target": 265}, {"source": 301, "target": 267}, {"source": 301, "target": 0}, {"source": 302, "target": 265}, {"source": 303, "target": 265}, {"source": 304, "target": 265}, {"source": 305, "target": 24}, {"source": 305, "target": 267}, {"source": 305, "target": 0}, {"source": 306, "target": 265}, {"source": 306, "target": 267}, {"source": 306, "target": 0}, {"source": 307, "target": 265}, {"source": 307, "target": 0}, {"source": 308, "target": 265}, {"source": 310, "target": 311}, {"source": 310, "target": 312}, {"source": 310, "target": 313}, {"source": 310, "target": 314}, {"source": 310, "target": 315}, {"source": 311, "target": 313}, {"source": 311, "target": 0}, {"source": 313, "target": 151}, {"source": 313, "target": 0}, {"source": 314, "target": 157}, {"source": 314, "target": 0}, {"source": 315, "target": 0}, {"source": 316, "target": 0}, {"source": 317, "target": 318}, {"source": 317, "target": 321}, {"source": 318, "target": 319}, {"source": 319, "target": 320}, {"source": 321, "target": 322}, {"source": 321, "target": 323}, {"source": 321, "target": 324}, {"source": 325, "target": 326}, {"source": 327, "target": 328}, {"source": 327, "target": 329}, {"source": 327, "target": 330}, {"source": 328, "target": 80}, {"source": 329, "target": 0}, {"source": 330, "target": 86}, {"source": 330, "target": 87}, {"source": 330, "target": 88}, {"source": 330, "target": 89}, {"source": 330, "target": 90}, {"source": 330, "target": 91}, {"source": 330, "target": 92}, {"source": 330, "target": 93}, {"source": 330, "target": 94}, {"source": 330, "target": 95}, {"source": 331, "target": 332}, {"source": 331, "target": 333}, {"source": 331, "target": 334}, {"source": 331, "target": 335}, {"source": 331, "target": 336}, {"source": 331, "target": 337}, {"source": 331, "target": 338}, {"source": 331, "target": 339}, {"source": 331, "target": 340}, {"source": 332, "target": 0}, {"source": 333, "target": 0}, {"source": 334, "target": 0}, {"source": 335, "target": 0}, {"source": 336, "target": 0}, {"source": 337, "target": 265}, {"source": 337, "target": 338}, {"source": 337, "target": 0}, {"source": 338, "target": 0}, {"source": 339, "target": 24}, {"source": 339, "target": 0}, {"source": 340, "target": 0}, {"source": 341, "target": 1}, {"source": 341, "target": 16}, {"source": 341, "target": 342}, {"source": 341, "target": 343}, {"source": 341, "target": 344}, {"source": 341, "target": 345}, {"source": 341, "target": 346}, {"source": 341, "target": 412}, {"source": 341, "target": 413}, {"source": 341, "target": 414}, {"source": 341, "target": 415}, {"source": 341, "target": 416}, {"source": 341, "target": 417}, {"source": 341, "target": 418}, {"source": 341, "target": 419}, {"source": 341, "target": 420}, {"source": 341, "target": 421}, {"source": 341, "target": 422}, {"source": 341, "target": 423}, {"source": 341, "target": 424}, {"source": 341, "target": 425}, {"source": 341, "target": 426}, {"source": 341, "target": 427}, {"source": 341, "target": 428}, {"source": 344, "target": 1}, {"source": 345, "target": 16}, {"source": 345, "target": 342}, {"source": 345, "target": 344}, {"source": 346, "target": 347}, {"source": 346, "target": 348}, {"source": 346, "target": 410}, {"source": 346, "target": 411}, {"source": 347, "target": 344}, {"source": 347, "target": 414}, {"source": 348, "target": 349}, {"source": 348, "target": 350}, {"source": 348, "target": 351}, {"source": 349, "target": 350}, {"source": 349, "target": 351}, {"source": 349, "target": 0}, {"source": 350, "target": 351}, {"source": 351, "target": 352}, {"source": 351, "target": 353}, {"source": 351, "target": 354}, {"source": 351, "target": 355}, {"source": 352, "target": 354}, {"source": 352, "target": 355}, {"source": 353, "target": 354}, {"source": 353, "target": 351}, {"source": 353, "target": 355}, {"source": 353, "target": 409}, {"source": 354, "target": 355}, {"source": 355, "target": 356}, {"source": 355, "target": 357}, {"source": 355, "target": 360}, {"source": 355, "target": 358}, {"source": 355, "target": 359}, {"source": 355, "target": 361}, {"source": 355, "target": 362}, {"source": 355, "target": 363}, {"source": 355, "target": 364}, {"source": 355, "target": 365}, {"source": 355, "target": 366}, {"source": 355, "target": 367}, {"source": 355, "target": 368}, {"source": 355, "target": 369}, {"source": 355, "target": 370}, {"source": 355, "target": 371}, {"source": 355, "target": 372}, {"source": 355, "target": 373}, {"source": 355, "target": 374}, {"source": 355, "target": 375}, {"source": 355, "target": 376}, {"source": 355, "target": 377}, {"source": 355, "target": 378}, {"source": 355, "target": 379}, {"source": 355, "target": 380}, {"source": 355, "target": 381}, {"source": 355, "target": 382}, {"source": 355, "target": 383}, {"source": 355, "target": 384}, {"source": 355, "target": 385}, {"source": 355, "target": 386}, {"source": 355, "target": 387}, {"source": 355, "target": 388}, {"source": 355, "target": 390}, {"source": 355, "target": 389}, {"source": 355, "target": 391}, {"source": 355, "target": 392}, {"source": 355, "target": 393}, {"source": 355, "target": 394}, {"source": 355, "target": 395}, {"source": 355, "target": 396}, {"source": 355, "target": 397}, {"source": 355, "target": 398}, {"source": 355, "target": 399}, {"source": 355, "target": 400}, {"source": 355, "target": 401}, {"source": 355, "target": 402}, {"source": 355, "target": 403}, {"source": 355, "target": 404}, {"source": 355, "target": 405}, {"source": 355, "target": 406}, {"source": 355, "target": 407}, {"source": 355, "target": 408}, {"source": 355, "target": 409}, {"source": 356, "target": 383}, {"source": 357, "target": 358}, {"source": 357, "target": 359}, {"source": 357, "target": 378}, {"source": 357, "target": 383}, {"source": 358, "target": 379}, {"source": 358, "target": 383}, {"source": 359, "target": 378}, {"source": 359, "target": 383}, {"source": 360, "target": 359}, {"source": 360, "target": 383}, {"source": 360, "target": 386}, {"source": 361, "target": 359}, {"source": 361, "target": 378}, {"source": 361, "target": 383}, {"source": 361, "target": 384}, {"source": 361, "target": 385}, {"source": 362, "target": 378}, {"source": 362, "target": 383}, {"source": 362, "target": 400}, {"source": 363, "target": 383}, {"source": 363, "target": 387}, {"source": 363, "target": 390}, {"source": 364, "target": 359}, {"source": 364, "target": 374}, {"source": 364, "target": 383}, {"source": 364, "target": 402}, {"source": 365, "target": 378}, {"source": 365, "target": 383}, {"source": 366, "target": 378}, {"source": 366, "target": 383}, {"source": 367, "target": 367}, {"source": 367, "target": 383}, {"source": 367, "target": 397}, {"source": 368, "target": 356}, {"source": 368, "target": 357}, {"source": 368, "target": 364}, {"source": 368, "target": 372}, {"source": 368, "target": 374}, {"source": 368, "target": 377}, {"source": 368, "target": 383}, {"source": 368, "target": 391}, {"source": 368, "target": 401}, {"source": 368, "target": 403}, {"source": 368, "target": 407}, {"source": 368, "target": 408}, {"source": 369, "target": 359}, {"source": 369, "target": 383}, {"source": 370, "target": 369}, {"source": 370, "target": 383}, {"source": 371, "target": 360}, {"source": 371, "target": 378}, {"source": 371, "target": 383}, {"source": 372, "target": 365}, {"source": 372, "target": 378}, {"source": 372, "target": 380}, {"source": 372, "target": 383}, {"source": 373, "target": 366}, {"source": 373, "target": 378}, {"source": 373, "target": 383}, {"source": 374, "target": 359}, {"source": 374, "target": 363}, {"source": 374, "target": 381}, {"source": 374, "target": 383}, {"source": 375, "target": 376}, {"source": 375, "target": 377}, {"source": 375, "target": 378}, {"source": 375, "target": 382}, {"source": 375, "target": 383}, {"source": 375, "target": 385}, {"source": 376, "target": 378}, {"source": 376, "target": 383}, {"source": 377, "target": 383}, {"source": 378, "target": 383}, {"source": 379, "target": 383}, {"source": 380, "target": 375}, {"source": 380, "target": 378}, {"source": 380, "target": 380}, {"source": 380, "target": 383}, {"source": 381, "target": 367}, {"source": 381, "target": 375}, {"source": 381, "target": 378}, {"source": 381, "target": 383}, {"source": 381, "target": 390}, {"source": 382, "target": 356}, {"source": 382, "target": 359}, {"source": 382, "target": 383}, {"source": 382, "target": 385}, {"source": 384, "target": 378}, {"source": 384, "target": 383}, {"source": 385, "target": 358}, {"source": 385, "target": 378}, {"source": 385, "target": 383}, {"source": 386, "target": 358}, {"source": 386, "target": 383}, {"source": 386, "target": 385}, {"source": 387, "target": 383}, {"source": 388, "target": 379}, {"source": 388, "target": 383}, {"source": 388, "target": 387}, {"source": 388, "target": 389}, {"source": 389, "target": 378}, {"source": 389, "target": 383}, {"source": 389, "target": 390}, {"source": 390, "target": 383}, {"source": 390, "target": 404}, {"source": 391, "target": 359}, {"source": 391, "target": 361}, {"source": 391, "target": 362}, {"source": 391, "target": 371}, {"source": 391, "target": 372}, {"source": 391, "target": 373}, {"source": 391, "target": 375}, {"source": 391, "target": 378}, {"source": 391, "target": 383}, {"source": 391, "target": 390}, {"source": 391, "target": 392}, {"source": 391, "target": 397}, {"source": 391, "target": 399}, {"source": 391, "target": 407}, {"source": 391, "target": 408}, {"source": 392, "target": 382}, {"source": 392, "target": 383}, {"source": 393, "target": 356}, {"source": 393, "target": 357}, {"source": 393, "target": 364}, {"source": 393, "target": 370}, {"source": 393, "target": 372}, {"source": 393, "target": 374}, {"source": 393, "target": 377}, {"source": 393, "target": 383}, {"source": 393, "target": 391}, {"source": 393, "target": 394}, {"source": 393, "target": 396}, {"source": 393, "target": 401}, {"source": 393, "target": 402}, {"source": 393, "target": 403}, {"source": 393, "target": 406}, {"source": 393, "target": 407}, {"source": 393, "target": 408}, {"source": 394, "target": 378}, {"source": 394, "target": 383}, {"source": 395, "target": 368}, {"source": 395, "target": 383}, {"source": 395, "target": 393}, {"source": 396, "target": 359}, {"source": 396, "target": 383}, {"source": 397, "target": 378}, {"source": 397, "target": 383}, {"source": 397, "target": 398}, {"source": 398, "target": 375}, {"source": 398, "target": 383}, {"source": 399, "target": 375}, {"source": 399, "target": 383}, {"source": 400, "target": 378}, {"source": 400, "target": 383}, {"source": 400, "target": 401}, {"source": 401, "target": 375}, {"source": 401, "target": 383}, {"source": 401, "target": 390}, {"source": 401, "target": 397}, {"source": 401, "target": 407}, {"source": 401, "target": 408}, {"source": 402, "target": 383}, {"source": 402, "target": 403}, {"source": 403, "target": 359}, {"source": 403, "target": 379}, {"source": 403, "target": 383}, {"source": 403, "target": 388}, {"source": 403, "target": 404}, {"source": 403, "target": 405}, {"source": 404, "target": 383}, {"source": 405, "target": 379}, {"source": 405, "target": 383}, {"source": 406, "target": 359}, {"source": 406, "target": 383}, {"source": 407, "target": 358}, {"source": 407, "target": 383}, {"source": 408, "target": 358}, {"source": 408, "target": 383}, {"source": 410, "target": 1}, {"source": 410, "target": 16}, {"source": 410, "target": 347}, {"source": 410, "target": 0}, {"source": 411, "target": 347}, {"source": 411, "target": 342}, {"source": 411, "target": 414}, {"source": 412, "target": 1}, {"source": 412, "target": 16}, {"source": 412, "target": 347}, {"source": 412, "target": 343}, {"source": 412, "target": 0}, {"source": 412, "target": 428}, {"source": 413, "target": 16}, {"source": 413, "target": 347}, {"source": 413, "target": 0}, {"source": 414, "target": 1}, {"source": 414, "target": 342}, {"source": 414, "target": 348}, {"source": 415, "target": 410}, {"source": 415, "target": 427}, {"source": 415, "target": 411}, {"source": 415, "target": 416}, {"source": 416, "target": 1}, {"source": 416, "target": 16}, {"source": 416, "target": 347}, {"source": 416, "target": 342}, {"source": 416, "target": 343}, {"source": 416, "target": 412}, {"source": 416, "target": 413}, {"source": 416, "target": 414}, {"source": 416, "target": 410}, {"source": 416, "target": 0}, {"source": 417, "target": 1}, {"source": 417, "target": 16}, {"source": 417, "target": 347}, {"source": 417, "target": 412}, {"source": 417, "target": 413}, {"source": 417, "target": 414}, {"source": 417, "target": 410}, {"source": 417, "target": 427}, {"source": 417, "target": 411}, {"source": 417, "target": 416}, {"source": 417, "target": 0}, {"source": 418, "target": 1}, {"source": 418, "target": 16}, {"source": 418, "target": 347}, {"source": 418, "target": 413}, {"source": 418, "target": 414}, {"source": 418, "target": 410}, {"source": 418, "target": 417}, {"source": 418, "target": 427}, {"source": 418, "target": 411}, {"source": 418, "target": 416}, {"source": 418, "target": 0}, {"source": 418, "target": 428}, {"source": 419, "target": 16}, {"source": 419, "target": 347}, {"source": 419, "target": 413}, {"source": 419, "target": 414}, {"source": 419, "target": 410}, {"source": 419, "target": 427}, {"source": 419, "target": 411}, {"source": 419, "target": 416}, {"source": 419, "target": 0}, {"source": 419, "target": 428}, {"source": 420, "target": 16}, {"source": 420, "target": 347}, {"source": 420, "target": 413}, {"source": 420, "target": 414}, {"source": 420, "target": 410}, {"source": 420, "target": 418}, {"source": 420, "target": 427}, {"source": 420, "target": 411}, {"source": 420, "target": 416}, {"source": 420, "target": 0}, {"source": 420, "target": 428}, {"source": 421, "target": 347}, {"source": 421, "target": 410}, {"source": 421, "target": 411}, {"source": 421, "target": 416}, {"source": 421, "target": 0}, {"source": 422, "target": 1}, {"source": 422, "target": 347}, {"source": 422, "target": 410}, {"source": 422, "target": 427}, {"source": 422, "target": 411}, {"source": 422, "target": 416}, {"source": 422, "target": 0}, {"source": 423, "target": 347}, {"source": 423, "target": 413}, {"source": 423, "target": 410}, {"source": 423, "target": 411}, {"source": 423, "target": 416}, {"source": 424, "target": 1}, {"source": 424, "target": 410}, {"source": 424, "target": 411}, {"source": 424, "target": 416}, {"source": 425, "target": 410}, {"source": 425, "target": 427}, {"source": 425, "target": 411}, {"source": 425, "target": 416}, {"source": 426, "target": 413}, {"source": 426, "target": 414}, {"source": 426, "target": 410}, {"source": 426, "target": 427}, {"source": 426, "target": 411}, {"source": 426, "target": 416}, {"source": 426, "target": 0}, {"source": 427, "target": 1}, {"source": 427, "target": 16}, {"source": 427, "target": 347}, {"source": 427, "target": 342}, {"source": 427, "target": 412}, {"source": 427, "target": 413}, {"source": 427, "target": 414}, {"source": 427, "target": 410}, {"source": 427, "target": 411}, {"source": 427, "target": 416}, {"source": 427, "target": 0}, {"source": 428, "target": 1}, {"source": 428, "target": 16}, {"source": 428, "target": 347}, {"source": 428, "target": 342}, {"source": 428, "target": 343}, {"source": 428, "target": 344}, {"source": 428, "target": 412}, {"source": 428, "target": 348}, {"source": 428, "target": 414}, {"source": 428, "target": 410}, {"source": 428, "target": 411}, {"source": 428, "target": 415}, {"source": 428, "target": 416}, {"source": 428, "target": 0}, {"source": 430, "target": 431}, {"source": 430, "target": 432}, {"source": 430, "target": 433}, {"source": 430, "target": 434}, {"source": 432, "target": 430}, {"source": 434, "target": 0}, {"source": 435, "target": 0}, {"source": 436, "target": 437}, {"source": 436, "target": 438}, {"source": 436, "target": 439}, {"source": 436, "target": 440}, {"source": 436, "target": 441}, {"source": 436, "target": 442}, {"source": 436, "target": 443}, {"source": 436, "target": 444}, {"source": 436, "target": 446}, {"source": 436, "target": 447}, {"source": 436, "target": 448}, {"source": 436, "target": 449}, {"source": 436, "target": 450}, {"source": 436, "target": 451}, {"source": 438, "target": 0}, {"source": 444, "target": 445}, {"source": 450, "target": 0}, {"source": 451, "target": 0}, {"source": 452, "target": 453}, {"source": 452, "target": 454}, {"source": 453, "target": 7}, {"source": 454, "target": 126}, {"source": 454, "target": 0}, {"source": 455, "target": 456}, {"source": 455, "target": 457}, {"source": 455, "target": 458}, {"source": 455, "target": 459}, {"source": 455, "target": 460}, {"source": 455, "target": 461}, {"source": 455, "target": 462}, {"source": 463, "target": 0}, {"source": 464, "target": 0}, {"source": 465, "target": 18}, {"source": 465, "target": 0}, {"source": 466, "target": 58}, {"source": 466, "target": 0}, {"source": 467, "target": 19}, {"source": 467, "target": 0}, {"source": 468, "target": 20}, {"source": 468, "target": 0}, {"source": 469, "target": 0}, {"source": 470, "target": 471}, {"source": 470, "target": 472}, {"source": 470, "target": 473}, {"source": 470, "target": 474}, {"source": 471, "target": 0}, {"source": 472, "target": 0}, {"source": 473, "target": 474}, {"source": 473, "target": 0}, {"source": 474, "target": 0}, {"source": 476, "target": 0}, {"source": 477, "target": 478}, {"source": 477, "target": 479}, {"source": 477, "target": 480}, {"source": 477, "target": 481}, {"source": 477, "target": 482}, {"source": 477, "target": 483}, {"source": 477, "target": 484}, {"source": 477, "target": 537}, {"source": 477, "target": 538}, {"source": 477, "target": 539}, {"source": 478, "target": 0}, {"source": 479, "target": 0}, {"source": 484, "target": 485}, {"source": 484, "target": 492}, {"source": 484, "target": 493}, {"source": 484, "target": 500}, {"source": 484, "target": 501}, {"source": 484, "target": 502}, {"source": 484, "target": 532}, {"source": 484, "target": 533}, {"source": 484, "target": 534}, {"source": 484, "target": 535}, {"source": 484, "target": 536}, {"source": 485, "target": 486}, {"source": 485, "target": 487}, {"source": 485, "target": 488}, {"source": 485, "target": 489}, {"source": 485, "target": 490}, {"source": 485, "target": 491}, {"source": 486, "target": 0}, {"source": 488, "target": 0}, {"source": 491, "target": 490}, {"source": 491, "target": 0}, {"source": 493, "target": 494}, {"source": 493, "target": 495}, {"source": 493, "target": 496}, {"source": 493, "target": 497}, {"source": 493, "target": 498}, {"source": 493, "target": 499}, {"source": 494, "target": 493}, {"source": 494, "target": 0}, {"source": 495, "target": 493}, {"source": 496, "target": 493}, {"source": 498, "target": 493}, {"source": 500, "target": 485}, {"source": 500, "target": 157}, {"source": 500, "target": 258}, {"source": 500, "target": 0}, {"source": 501, "target": 493}, {"source": 501, "target": 0}, {"source": 502, "target": 503}, {"source": 502, "target": 504}, {"source": 502, "target": 505}, {"source": 502, "target": 506}, {"source": 502, "target": 511}, {"source": 502, "target": 512}, {"source": 502, "target": 523}, {"source": 502, "target": 529}, {"source": 504, "target": 0}, {"source": 506, "target": 507}, {"source": 506, "target": 508}, {"source": 506, "target": 509}, {"source": 506, "target": 510}, {"source": 509, "target": 507}, {"source": 510, "target": 507}, {"source": 512, "target": 513}, {"source": 512, "target": 514}, {"source": 512, "target": 515}, {"source": 512, "target": 516}, {"source": 512, "target": 517}, {"source": 512, "target": 518}, {"source": 512, "target": 519}, {"source": 512, "target": 520}, {"source": 512, "target": 521}, {"source": 512, "target": 522}, {"source": 513, "target": 507}, {"source": 514, "target": 0}, {"source": 520, "target": 507}, {"source": 523, "target": 524}, {"source": 523, "target": 525}, {"source": 523, "target": 526}, {"source": 523, "target": 527}, {"source": 523, "target": 528}, {"source": 525, "target": 0}, {"source": 529, "target": 530}, {"source": 529, "target": 531}, {"source": 531, "target": 0}, {"source": 533, "target": 157}, {"source": 533, "target": 0}, {"source": 535, "target": 0}, {"source": 536, "target": 0}, {"source": 537, "target": 0}, {"source": 538, "target": 0}, {"source": 539, "target": 0}]}